{"version":3,"file":"drawLine.9614ddb3.js","sources":["../../src/components/drawLine.vue"],"sourcesContent":["<template>\n  <div id=\"sceneContainer\" ref=\"sceneContainer\"></div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted } from \"vue\";\nimport Base3D from \"../utils/base3D\";\nimport threeUniversal from \"../utils/threeUniversal.js\";\nimport * as THREE from \"three\";\n\nlet data = reactive({\n  base3D: {},\n});\nlet sceneContainer = ref(null);\n\nonMounted(() => {\n  data.base3D = new Base3D(sceneContainer.value);\n  // threeUniversal.addFloor(data.base3D.scene);\n  initContent();\n});\n\n/* 场景内容 */\nfunction initContent() {\n  // let geometry = new THREE.Geometry(); /* 简单基础几何 */\n  let lineMaterial = new THREE.LineBasicMaterial({\n    color: 0x808080,\n  }); /* 基础线材质 */\n\n  let planeGeometry = new THREE.PlaneGeometry(\n    length,\n    10\n  ); /* 平面 width：200,、height：10 */\n  let planeMaterial = new THREE.MeshBasicMaterial({\n    color: 0xd9d9d9,\n    side: THREE.DoubleSide,\n  }); /* 平面材质 */\n\n  // geometry.vertices.push(\n  //   new THREE.Vector3(-length / 2, 0, 0)\n  // ); /* 顶点(-100, 0, 0) */\n  // geometry.vertices.push(\n  //   new THREE.Vector3(length / 2, 0, 0)\n  // ); /* 顶点( 100, 0, 0) */\n\n  /* 循环创建线段 */\n  /* for (let i = 0; i <= length / 10; i++) {\n    /!* 横向线段 *!/\n    let lineX = new THREE.Line(geometry, lineMaterial);\n    lineX.position.z = i * 10 - length / 2;\n    data.base3D.scene.add(lineX);\n\n    /!* 纵向线段 *!/\n    let lineY = new THREE.Line(geometry, lineMaterial);\n    lineY.rotation.y = 0.5 * Math.PI;\n    lineY.position.x = i * 10 - length / 2;\n    data.base3D.scene.add(lineY);\n  }*/\n\n  /* 创建包围平面 */\n  let planeX_left = new THREE.Mesh(planeGeometry, planeMaterial);\n  planeX_left.rotation.y = 0.5 * Math.PI;\n  planeX_left.position.x = -length / 2;\n\n  let planeX_right = planeX_left.clone();\n  planeX_right.position.x = length / 2;\n\n  let planeY_top = new THREE.Mesh(planeGeometry, planeMaterial);\n  planeY_top.position.z = -length / 2;\n\n  let planeY_bottom = planeY_top.clone();\n  planeY_bottom.position.z = length / 2;\n\n  data.base3D.scene.add(planeY_bottom);\n  data.base3D.scene.add(planeY_top);\n  data.base3D.scene.add(planeX_left);\n  data.base3D.scene.add(planeX_right);\n\n  /* 四个包围面的位置 y轴向上5 */\n  data.base3D.scene.traverse(function (object) {\n    if (object.isMesh) {\n      if (object.geometry.type === \"PlaneGeometry\") {\n        object.position.y = 5;\n      }\n    }\n  });\n}\n</script>\n\n<style scoped></style>\n"],"names":["THREE.LineBasicMaterial","THREE.PlaneGeometry","THREE.MeshBasicMaterial","THREE.DoubleSide","THREE.Mesh"],"mappings":"uVAUA,GAAI,GAAO,EAAS,CAClB,OAAQ,KAEN,EAAiB,EAAI,MAEzB,EAAU,IAAM,CACd,EAAK,OAAS,GAAI,GAAO,EAAe,OAExC,MAIF,YAAuB,CAEF,GAAIA,GAAwB,CAC7C,MAAO,UAGT,GAAI,GAAgB,GAAIC,GACtB,OACA,IAEE,EAAgB,GAAIC,GAAwB,CAC9C,MAAO,SACP,KAAMC,IAyBJ,EAAc,GAAIC,GAAW,EAAe,GAChD,EAAY,SAAS,EAAI,GAAM,KAAK,GACpC,EAAY,SAAS,EAAI,CAAC,OAAS,EAEnC,GAAI,GAAe,EAAY,QAC/B,EAAa,SAAS,EAAI,OAAS,EAEnC,GAAI,GAAa,GAAIA,GAAW,EAAe,GAC/C,EAAW,SAAS,EAAI,CAAC,OAAS,EAElC,GAAI,GAAgB,EAAW,QAC/B,EAAc,SAAS,EAAI,OAAS,EAEpC,EAAK,OAAO,MAAM,IAAI,GACtB,EAAK,OAAO,MAAM,IAAI,GACtB,EAAK,OAAO,MAAM,IAAI,GACtB,EAAK,OAAO,MAAM,IAAI,GAGtB,EAAK,OAAO,MAAM,SAAS,SAAU,EAAQ,CAC3C,AAAI,EAAO,QACL,EAAO,SAAS,OAAS,iBAC3B,GAAO,SAAS,EAAI"}