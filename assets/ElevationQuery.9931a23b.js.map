{"version":3,"file":"ElevationQuery.9931a23b.js","sources":["../../node_modules/@arcgis/core/layers/support/ElevationTile.js","../../node_modules/@arcgis/core/layers/support/ElevationQuery.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport{isSome as t,isNone as a}from\"../../core/maybe.js\";class e{constructor(a,e=null){if(this.tile=a,t(e)){const t=a.extent;this.samplerData={pixelData:e.values,width:e.width,height:e.height,safeWidth:.99999999*(e.width-1),noDataValue:e.noDataValue,dx:(e.width-1)/(t[2]-t[0]),dy:(e.width-1)/(t[3]-t[1]),x0:t[0],y1:t[3]}}}sample(t,e){if(a(this.samplerData))return;const{safeWidth:s,width:h,pixelData:l,noDataValue:o,dx:r,dy:n,y1:d,x0:u}=this.samplerData,f=i(n*(d-e),0,s),c=i(r*(t-u),0,s),p=Math.floor(f),x=Math.floor(c),D=p*h+x,m=D+h,w=l[D],y=l[m],V=l[D+1],g=l[m+1];if(w!==o&&y!==o&&V!==o&&g!==o){const t=c-x,a=w+(V-w)*t;return a+(y+(g-y)*t-a)*(f-p)}}}function i(t,a,e){return t<a?a:t>e?e:t}export{e as ElevationTile,e as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport{result as e}from\"../../core/asyncUtils.js\";import t from\"../../core/Error.js\";import{isNone as i,isSome as o}from\"../../core/maybe.js\";import{whenOrAbort as s,throwIfAbortError as l,eachAlways as n}from\"../../core/promiseUtils.js\";import{getMetersPerUnitForSR as a}from\"../../core/unitUtils.js\";import r from\"../../geometry/Multipoint.js\";import c from\"../../geometry/Point.js\";import u from\"../../geometry/Polyline.js\";import{initializeProjection as h,project as p}from\"../../geometry/projection.js\";import{fromExtent as m,create as f,contains as d}from\"../../geometry/support/aaBoundingRect.js\";import{MultiTileElevationSampler as y}from\"./ElevationSampler.js\";import{ElevationTile as T}from\"./ElevationTile.js\";class v{async queryAll(e,i,o){if(!(e=o&&o.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");const s=x.fromGeometry(i);let l=!1;o&&o.returnSampleInfo||(l=!0);const n={...R,...o,returnSampleInfo:!0},a=await this.query(e[e.length-1],s,n),r=await this._queryAllContinue(e,a,n);return r.geometry=r.geometry.export(),l&&delete r.sampleInfo,r}async query(e,i,o){if(!e)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!i||!(i instanceof x)&&\"point\"!==i.type&&\"multipoint\"!==i.type&&\"polyline\"!==i.type)throw new t(\"elevation-query:invalid-geometry\",\"Only point, polyline and multipoint geometries can be used to query elevation\");const s={...R,...o},l=new w(e,i.spatialReference,s),n=s.signal;return await e.load({signal:n}),await this._createGeometryDescriptor(l,i,n),await this._selectTiles(l,n),await this._populateElevationTiles(l,n),this._sampleGeometryWithElevation(l),this._createQueryResult(l,n)}async createSampler(e,i,o){if(!e)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!i||\"extent\"!==i.type)throw new t(\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const s={...R,...o};return this._createSampler(e,i,s)}async createSamplerAll(e,i,o){if(!(e=o&&o.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");if(!i||\"extent\"!==i.type)throw new t(\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const s={...R,...o,returnSampleInfo:!0},l=await this._createSampler(e[e.length-1],i,s);return this._createSamplerAllContinue(e,i,l,s)}async _createSampler(e,t,i,o){const s=i.signal;await e.load({signal:s});const l=t.spatialReference,n=e.tileInfo.spatialReference;l.equals(n)||(await h([{source:l,dest:n}],{signal:s}),t=p(t,n));const a=new _(e,t,i,o);return await this._selectTiles(a,s),await this._populateElevationTiles(a,s),new y(a.elevationTiles,a.layer.tileInfo,a.options.noDataValue)}async _createSamplerAllContinue(e,t,i,o){if(e.pop(),!e.length)return i;const s=i.samplers.map((e=>m(e.extent))),l=await this._createSampler(e[e.length-1],t,o,s);if(0===l.samplers.length)return i;const n=i.samplers.concat(l.samplers),a=new y(n,o.noDataValue);return this._createSamplerAllContinue(e,t,a,o)}async _queryAllContinue(e,t,i){const o=e.pop(),s=t.geometry.coordinates,l=[],n=[];for(let c=0;c<s.length;c++){const i=t.sampleInfo[c];i.demResolution>=0?i.source||(i.source=o):e.length&&(l.push(s[c]),n.push(c))}if(!e.length||0===l.length)return t;const a=t.geometry.clone(l),r=await this.query(e[e.length-1],a,i);return n.forEach(((e,i)=>{s[e].z=r.geometry.coordinates[i].z,t.sampleInfo[e].demResolution=r.sampleInfo[i].demResolution})),this._queryAllContinue(e,t,i)}async _createQueryResult(e,t){const i={geometry:(await e.geometry.project(e.outSpatialReference,t)).export(),noDataValue:e.options.noDataValue};return e.options.returnSampleInfo&&(i.sampleInfo=this._extractSampleInfo(e)),e.geometry.coordinates.forEach((e=>{e.tile=null,e.elevationTile=null})),i}async _createGeometryDescriptor(e,i,o){let s;const l=e.layer.tileInfo.spatialReference;if(i instanceof x?s=await i.project(l,o):(await h([{source:i.spatialReference,dest:l}],{signal:o}),s=p(i,l)),!s)throw new t(\"elevation-query:spatial-reference-mismatch\",`Cannot query elevation in '${i.spatialReference.wkid}' on an elevation service in '${l.wkid}'`);e.geometry=x.fromGeometry(s)}async _selectTiles(e,i){const o=e.options.demResolution;if(\"geometry\"===e.type&&this._preselectOutsideLayerExtent(e),\"number\"==typeof o)this._selectTilesClosestResolution(e);else if(\"finest-contiguous\"===o)await this._selectTilesFinestContiguous(e,i);else{if(\"auto\"!==o)throw new t(\"elevation-query:invalid-dem-resolution\",`Invalid dem resolution value '${o}', expected a number, \"finest-contiguous\" or \"auto\"`);await this._selectTilesAuto(e,i)}}_preselectOutsideLayerExtent(e){if(i(e.layer.fullExtent))return;const t=new T(null);t.sample=()=>e.options.noDataValue,e.outsideExtentTile=t;const o=e.layer.fullExtent;e.geometry.coordinates.forEach((e=>{const i=e.x,s=e.y;(i<o.xmin||i>o.xmax||s<o.ymin||s>o.ymax)&&(e.elevationTile=t)}))}_selectTilesClosestResolution(e){const t=e.layer.tileInfo,i=this._findNearestDemResolutionLODIndex(t,e.options.demResolution);e.selectTilesAtLOD(i)}_findNearestDemResolutionLODIndex(e,t){const i=t/a(e.spatialReference);let o=e.lods[0],s=0;for(let l=1;l<e.lods.length;l++){const t=e.lods[l];Math.abs(t.resolution-i)<Math.abs(o.resolution-i)&&(o=t,s=l)}return s}async _selectTilesFinestContiguous(e,t){const i=E(e.layer.tileInfo,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,i,t)}async _selectTilesFinestContiguousAt(e,i,o){const n=e.layer;if(e.selectTilesAtLOD(i),i<0)return;const a=n.tilemapCache,r=e.getTilesToFetch();try{if(a)await s(Promise.all(r.map((e=>a.fetchAvailability(e.level,e.row,e.col,{signal:o})))),o);else if(await this._populateElevationTiles(e,o),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new t(\"elevation-query:has-unavailable-tiles\")}catch(c){l(c),await this._selectTilesFinestContiguousAt(e,i-1,o)}}async _populateElevationTiles(e,t){const i=e.getTilesToFetch(),l={},a=e.options.cache,r=e.options.noDataValue,c=i.map((async i=>{const s=`${e.layer.uid}:${i.id}:${r}`,n=o(a)?a.get(s):null,c=o(n)?n:await e.layer.fetchTile(i.level,i.row,i.col,{noDataValue:r,signal:t});o(a)&&a.put(s,c),l[i.id]=new T(i,c)}));await s(n(c),t),e.populateElevationTiles(l)}async _selectTilesAuto(t,i){this._selectTilesAutoFinest(t),this._reduceTilesForMaximumRequests(t);const o=t.layer.tilemapCache;if(!o)return this._selectTilesAutoPrefetchUpsample(t,i);const n=t.getTilesToFetch(),a={},r=n.map((async t=>{const s={id:null,level:0,row:0,col:0,extent:f()},n=await e(o.fetchAvailabilityUpsample(t.level,t.row,t.col,s,{signal:i}));!1===n.ok?l(n.error):a[t.id]=s}));await s(Promise.all(r),i),t.remapTiles(a)}_reduceTilesForMaximumRequests(e){const t=e.layer.tileInfo;let i=0;const o={},s=e=>{e.id in o?o[e.id]++:(o[e.id]=1,i++)},l=e=>{const t=o[e.id];1===t?(delete o[e.id],i--):o[e.id]=t-1};e.forEachTileToFetch(s,l);let n=!0;for(;n&&(n=!1,e.forEachTileToFetch((o=>{i<=e.options.maximumAutoTileRequests||(l(o),t.upsampleTile(o)&&(n=!0),s(o))}),l),n););}_selectTilesAutoFinest(e){const t=E(e.layer.tileInfo,e.options.minDemResolution);e.selectTilesAtLOD(t,e.options.maximumAutoTileRequests)}async _selectTilesAutoPrefetchUpsample(e,t){const i=e.layer.tileInfo;await this._populateElevationTiles(e,t);let o=!1;e.forEachTileToFetch(((e,t)=>{i.upsampleTile(e)?o=!0:t()})),o&&await this._selectTilesAutoPrefetchUpsample(e,t)}_sampleGeometryWithElevation(e){e.geometry.coordinates.forEach((t=>{const i=t.elevationTile;let s=e.options.noDataValue;if(i){const e=i.sample(t.x,t.y);o(e)?s=e:t.elevationTile=null}t.z=s}))}_extractSampleInfo(e){const t=e.layer.tileInfo,i=a(t.spatialReference);return e.geometry.coordinates.map((o=>{let s=-1;if(o.elevationTile&&o.elevationTile!==e.outsideExtentTile){s=t.lodAt(o.elevationTile.tile.level).resolution*i}return{demResolution:s}}))}}class x{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new x;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map((e=>this._cloneCoordinate(e))),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await h([{source:this.spatialReference,dest:e}],{signal:t});const i=new r({spatialReference:this.spatialReference,points:this.coordinates.map((e=>[e.x,e.y]))}),o=p(i,e);if(!o)return null;const s=this.coordinates.map(((e,t)=>{const i=this._cloneCoordinate(e),s=o.points[t];return i.x=s[0],i.y=s[1],i})),l=this.clone(s);return l.spatialReference=e,l}_cloneCoordinate(e){return{x:e.x,y:e.y,z:e.z,m:e.m,tile:null,elevationTile:null}}static fromGeometry(e){const t=new x;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof x)t.coordinates=e.coordinates.map((e=>t._cloneCoordinate(e))),t._exporter=(t,i)=>{const o=e.clone(t);return o.spatialReference=i,o};else switch(e.type){case\"point\":{const i=e,{hasZ:o,hasM:s}=i;t.coordinates=o&&s?[{x:i.x,y:i.y,z:i.z,m:i.m}]:o?[{x:i.x,y:i.y,z:i.z}]:s?[{x:i.x,y:i.y,m:i.m}]:[{x:i.x,y:i.y}],t._exporter=(t,i)=>e.hasM?new c(t[0].x,t[0].y,t[0].z,t[0].m,i):new c(t[0].x,t[0].y,t[0].z,i);break}case\"multipoint\":{const i=e,{hasZ:o,hasM:s}=i;t.coordinates=o&&s?i.points.map((e=>({x:e[0],y:e[1],z:e[2],m:e[3]}))):o?i.points.map((e=>({x:e[0],y:e[1],z:e[2]}))):s?i.points.map((e=>({x:e[0],y:e[1],m:e[2]}))):i.points.map((e=>({x:e[0],y:e[1]}))),t._exporter=(t,i)=>e.hasM?new r({points:t.map((e=>[e.x,e.y,e.z,e.m])),hasZ:!0,hasM:!0,spatiaReference:i}):new r(t.map((e=>[e.x,e.y,e.z])),i);break}case\"polyline\":{const i=e,o=[],s=[],{hasZ:l,hasM:n}=e;let a=0;for(const e of i.paths)if(s.push([a,a+e.length]),a+=e.length,l&&n)for(const t of e)o.push({x:t[0],y:t[1],z:t[2],m:t[3]});else if(l)for(const t of e)o.push({x:t[0],y:t[1],z:t[2]});else if(n)for(const t of e)o.push({x:t[0],y:t[1],m:t[2]});else for(const t of e)o.push({x:t[0],y:t[1]});t.coordinates=o,t._exporter=(t,i)=>{const o=e.hasM?t.map((e=>[e.x,e.y,e.z,e.m])):t.map((e=>[e.x,e.y,e.z])),l=s.map((e=>o.slice(e[0],e[1])));return new u({paths:l,hasM:e.hasM,hasZ:!0,spatialReference:i})};break}}return t}}class g{constructor(e,t){this.layer=e,this.options=t}}class w extends g{constructor(e,t,i){super(e,i),this.outSpatialReference=t,this.type=\"geometry\"}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach((e=>e.tile=null));else{const t=this.layer.tileInfo,i=t.lods[e].level;this.geometry.coordinates.forEach((e=>{e.tile=t.tileAt(i,e.x,e.y)}))}}allElevationTilesFetched(){return!this.geometry.coordinates.some((e=>!e.elevationTile))}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){for(const t of this.geometry.coordinates)!t.elevationTile&&t.tile&&(t.elevationTile=e[t.tile.id])}remapTiles(e){for(const t of this.geometry.coordinates)t.tile=e[t.tile.id]}getTilesToFetch(){const e={},t=[];for(const i of this.geometry.coordinates){const o=i.tile;i.elevationTile||!i.tile||e[o.id]||(e[o.id]=o,t.push(o))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,(()=>t.tile=null))}}class _ extends g{constructor(e,t,i,o){super(e,i),this.type=\"extent\",this.elevationTiles=[],this.candidateTiles=[],this.fetchedCandidates=new Set,this.extent=t.intersection(e.fullExtent),this.maskExtents=o}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),o=Math.min(i,e);o<0?this.candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(o)}_maximumLodForRequests(e){const t=this.layer.tileInfo;if(!e)return t.lods.length-1;const o=this.extent;if(i(o))return-1;for(let i=t.lods.length-1;i>=0;i--){const s=t.lods[i],l=s.resolution*t.size[0],n=s.resolution*t.size[1];if(Math.ceil(o.width/l)*Math.ceil(o.height/n)<=e)return i}return-1}allElevationTilesFetched(){return this.candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this.fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this.candidateTiles){const i=e[t.id];i&&(this.fetchedCandidates.add(t),this.elevationTiles.push(i))}}remapTiles(e){this.candidateTiles=this._uniqueNonOverlappingTiles(this.candidateTiles.map((t=>e[t.id])))}getTilesToFetch(){return this.candidateTiles}forEachTileToFetch(e,t){const i=this.candidateTiles;this.candidateTiles=[],i.forEach((i=>{if(this.fetchedCandidates.has(i))return void(t&&t(i));let o=!1;e(i,(()=>o=!0)),o?t&&t(i):this.candidateTiles.push(i)})),this.candidateTiles=this._uniqueNonOverlappingTiles(this.candidateTiles,t)}_uniqueNonOverlappingTiles(e,t){const i={},o=[];for(const l of e)i[l.id]?t&&t(l):(i[l.id]=l,o.push(l));const s=o.sort(((e,t)=>e.level-t.level));return s.filter(((e,i)=>{for(let o=0;o<i;o++)if(d(s[o].extent,e.extent))return t&&t(e),!1;return!0}))}_selectCandidateTilesCoveringExtentAt(e){this.candidateTiles.length=0;const t=this.extent;if(i(t))return;const o=this.layer.tileInfo,s=o.lods[e],l=o.tileAt(s.level,t.xmin,t.ymin),n=s.resolution*o.size[0],a=s.resolution*o.size[1],r=Math.ceil((t.xmax-l.extent[0])/n),c=Math.ceil((t.ymax-l.extent[1])/a);for(let i=0;i<c;i++)for(let e=0;e<r;e++){const t={id:null,level:l.level,row:l.row-i,col:l.col+e};o.updateTileInfo(t),this._tileIsMasked(t)||this.candidateTiles.push(t)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some((t=>d(t,e.extent)))}}function E(e,t){let i=e.lods.length-1;if(t>0){const o=e.lods.findIndex((e=>e.resolution<t));0===o?i=0:o>0&&(i=o-1)}return i}const R={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:\"auto\",minDemResolution:0};export{v as ElevationQuery,x as GeometryDescriptor,v as default,E as getFinestLodIndex};\n"],"names":["t","a","s","h","p","y","m","e","i","T","l","r","o","n","f","c","u","d"],"mappings":"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"}