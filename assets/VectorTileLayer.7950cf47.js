var Y=Object.defineProperty,H=Object.defineProperties;var Z=Object.getOwnPropertyDescriptors;var D=Object.getOwnPropertySymbols;var ee=Object.prototype.hasOwnProperty,te=Object.prototype.propertyIsEnumerable;var E=(e,t,r)=>t in e?Y(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,d=(e,t)=>{for(var r in t||(t={}))ee.call(t,r)&&E(e,r,t[r]);if(D)for(var r of D(t))te.call(t,r)&&E(e,r,t[r]);return e},v=(e,t)=>H(e,Z(t));import{M as re,O as b,t as se,C as U,v as j,ae as C,hw as k,X as ie,al as P,fX as N,V as O,hn as _,ab as V,r as Q,ls as q,oL as le,oC as F,lB as W,lL as oe,oM as G,aK as M,i as ae,d as ne,p as ue,e as pe,w as ce,o as ye,g as he,l as de,K as fe,q as J,hq as me,cE as Ae,D as c,E as y,k as ge,G as Se,F as ve,J as we}from"./externalRenderers.e9b2a64d.js";import{s as xe}from"./ArcGISCachedService.fa9643d7.js";import{n as Ie,T as Ue}from"./TilemapCache.f41a8639.js";import{o as be}from"./jsonContext.c05df91d.js";import{s as K}from"./SchemaHelper.8c4cac9a.js";import{a as _e}from"./StyleRepository.642a873f.js";import"./colorUtils.c7035b36.js";import"./definitions.9156fef2.js";let $=null;function Te(e){if($)return $;const t={lossy:"UklGRiIAAABXRUJQVlA4IBYAAAAwAQCdASoBAAEADsD+JaQAA3AAAAAA",lossless:"UklGRhoAAABXRUJQVlA4TA0AAAAvAAAAEAcQERGIiP4HAA==",alpha:"UklGRkoAAABXRUJQVlA4WAoAAAAQAAAAAAAAAAAAQUxQSAwAAAARBxAR/Q9ERP8DAABWUDggGAAAABQBAJ0BKgEAAQAAAP4AAA3AAP7mtQAAAA==",animation:"UklGRlIAAABXRUJQVlA4WAoAAAASAAAAAAAAAAAAQU5JTQYAAAD/////AABBTk1GJgAAAAAAAAAAAAAAAAAAAGQAAABWUDhMDQAAAC8AAAAQBxAREYiI/gcA"};return $=new Promise(r=>{const s=new Image;s.onload=()=>{s.onload=s.onerror=null,r(s.width>0&&s.height>0)},s.onerror=()=>{s.onload=s.onerror=null,r(!1)},s.src="data:image/webp;base64,"+t[e]}),$}const Re=re.getLogger("esri.layers.support.SpriteSource"),Pe=1.15;class $e{constructor(t,r,s,i){this.baseURL=t,this.devicePixelRatio=r,this.maxTextureSize=s,this._spriteImageFormat=i,this._isRetina=!1,this._spritesData={},this.image=null,this.width=null,this.height=null,this.loadStatus="not-loaded"}get spriteNames(){const t=[];for(const r in this._spritesData)t.push(r);return t.sort(),t}getSpriteInfo(t){return this._spritesData[t]}async load(t){if(this.baseURL){this.loadStatus="loading";try{await this._loadSprites(t),this.loadStatus="loaded"}catch{this.loadStatus="failed"}}else this.loadStatus="failed"}_loadSprites(t){this._isRetina=this.devicePixelRatio>Pe;const r=b(this.baseURL),s=r.query?"?"+se(r.query):"",i=this._isRetina?"@2x":"",l=`${r.path}${i}.${this._spriteImageFormat}${s}`,o=`${r.path}${i}.json${s}`;return Promise.all([U(o,t),U(l,d({responseType:"image"},t))]).then(([n,a])=>{const u=Object.keys(n.data);if(!u||u.length===0||u.length===1&&u[0]==="_ssl"||!a||!a.data)return this._spritesData=this.image=null,this.width=this.height=0,Promise.resolve(null);this._spritesData=n.data;const h=a.data,S=Math.max(this.maxTextureSize,4096);if(h.width>S||h.height>S){const g=`Sprite resource for style ${r.path} is bigger than the maximum allowed of ${S} pixels}`;throw Re.error(g),new j("SpriteSource",g)}this.width=h.width,this.height=h.height;const f=document.createElement("canvas"),m=f.getContext("2d");f.width=h.width,f.height=h.height,m.drawImage(h,0,0,h.width,h.height);const T=m.getImageData(0,0,h.width,h.height),A=new Uint8Array(T.data);let R;for(let g=0;g<A.length;g+=4)R=A[g+3]/255,A[g]=A[g]*R,A[g+1]=A[g+1]*R,A[g+2]=A[g+2]*R;this.image=A})}}class Le{constructor(t){this.url=t}async fetchTileIndex(){return this._tileIndexPromise||(this._tileIndexPromise=U(this.url).then(t=>t.data.index)),this._tileIndexPromise}async dataKey(t,r){const s=await this.fetchTileIndex();return C(r),this._getIndexedDataKey(s,t)}_getIndexedDataKey(t,r){const s=[r];if(r.level<0||r.row<0||r.col<0||r.row>>r.level>0||r.col>>r.level>0)return null;let i=r;for(;i.level!==0;)i=new k(i.level-1,i.row>>1,i.col>>1,i.world),s.push(i);let l,o,n=t,a=s.pop();if(n===1)return a;for(;s.length;)if(l=s.pop(),o=(1&l.col)+((1&l.row)<<1),n){if(n[o]===0){a=null;break}if(n[o]===1){a=l;break}a=l,n=n[o]}return a}}class Oe{constructor(t,r){this._tilemap=t,this._tileIndexUrl=r}async fetchTileIndex(t){return this._tileIndexPromise||(this._tileIndexPromise=U(this._tileIndexUrl,{query:d({},t==null?void 0:t.query)}).then(r=>r.data.index)),this._tileIndexPromise}dataKey(t,r){const{level:s,row:i,col:l}=t,o=new k(t);return this._tilemap.fetchAvailabilityUpsample(s,i,l,o,r).then(()=>(o.world=t.world,o)).catch(n=>{if(ie(n))throw n;return null})}}class Me{constructor(t,r,s){this.tilemap=null,this.tileInfo=null,this.capabilities=null,this.fullExtent=null,this.name=t,this.sourceUrl=r;const i=b(this.sourceUrl),l=P(s),o=l.tiles;if(i)for(let f=0;f<o.length;f++){const m=b(o[f]);m&&(N(m.path)||(m.path=O(i.path,m.path)),o[f]=_(m.path,d(d({},i.query),m.query)))}this.tileServers=o;const n=s.capabilities&&s.capabilities.split(",").map(f=>f.toLowerCase().trim()),a=(s==null?void 0:s.exportTilesAllowed)===!0,u=(n==null?void 0:n.includes("tilemap"))===!0,h=a&&s.hasOwnProperty("maxExportTilesCount")?s.maxExportTilesCount:0;this.capabilities={operations:{supportsExportTiles:a,supportsTileMap:u},exportTiles:a?{maxExportTilesCount:+h}:null},this.tileInfo=Ie(l.tileInfo,l,null,{ignoreMinMaxLOD:!0});const S=s.tileMap?_(O(i.path,s.tileMap),i.query):null;u?(this.type="vector-tile",this.tilemap=new Oe(new Ue({layer:{parsedUrl:i,tileInfo:this.tileInfo,type:"vector-tile",tileServers:this.tileServers}}),S)):S&&(this.tilemap=new Le(S)),this.fullExtent=V.fromJSON(s.fullExtent)}async getRefKey(t,r){var s,i;return(s=(i=this.tilemap)==null?void 0:i.dataKey(t,r))!=null?s:t}getSourceTileUrl(t,r,s){return this.tileServers[r%this.tileServers.length].replace(/\{z\}/gi,t.toString()).replace(/\{y\}/gi,r.toString()).replace(/\{x\}/gi,s.toString())}isCompatibleWith(t){const r=this.tileInfo,s=t.tileInfo;if(!r.spatialReference.equals(s.spatialReference)||!r.origin.equals(s.origin)||Math.round(r.dpi)!==Math.round(s.dpi))return!1;const i=r.lods,l=s.lods,o=Math.min(i.length,l.length);for(let n=0;n<o;n++){const a=i[n],u=l[n];if(a.level!==u.level||Math.round(a.scale)!==Math.round(u.scale))return!1}return!0}}const B=Q.defaults&&Q.defaults.io.corsEnabledServers;async function Be(e,t){const r={source:null,sourceBase:null,sourceUrl:null,validatedSource:null,style:null,styleBase:null,styleUrl:null,sourceNameToSource:{},primarySourceName:"",spriteFormat:"png"},[s,i]=typeof e=="string"?[e,null]:[null,e.jsonUrl];await I(r,"esri",e,i,t);const l={layerDefinition:r.validatedSource,url:s,serviceUrl:r.sourceUrl,style:r.style,styleUrl:r.styleUrl,spriteUrl:r.style.sprite&&x(r.styleBase,r.style.sprite),spriteFormat:r.spriteFormat,glyphsUrl:r.style.glyphs&&x(r.styleBase,r.style.glyphs),sourceNameToSource:r.sourceNameToSource,primarySourceName:r.primarySourceName};return w(l.spriteUrl),w(l.glyphsUrl),l}function w(e){if(!e)return;const t=le(e);B&&!B.includes(t)&&B.push(t)}function x(...e){let t;for(let r=0;r<e.length;++r)F(e[r])?t&&(t=t.split("://")[0]+":"+e[r].trim()):t=N(e[r])?e[r]:O(t,e[r]);return q(t)}async function I(e,t,r,s,i){let l,o,n;if(C(i),typeof r=="string"){const u=W(r);w(u),n=await U(u,v(d({},i),{responseType:"json",query:d({f:"json"},i==null?void 0:i.query)})),n.ssl&&(l&&(l=l.replace(/^http:/i,"https:")),o&&(o=o.replace(/^http:/i,"https:"))),l=u,o=u}else n={data:r},l=r.jsonUrl||null,o=s;const a=n.data;return z(a)?(e.styleUrl=l||null,Ee(e,a,o,i)):De(a)?e.sourceUrl?X(e,a,o,!1,t,i):(e.sourceUrl=l||null,X(e,a,o,!0,t,i)):Promise.reject("You must specify the URL or the JSON for a service or for a style.")}function z(e){return!!e.sources}function De(e){return!z(e)}async function Ee(e,t,r,s){const i=r?oe(r):G;e.styleBase=i,e.style=t,e.styleUrl&&w(e.styleUrl),t["sprite-format"]&&t["sprite-format"].toLowerCase()==="webp"&&(e.spriteFormat="webp");const l=[];if(t.sources&&t.sources.esri){const o=t.sources.esri;o.url?await I(e,"esri",x(i,o.url),void 0,s):l.push(I(e,"esri",o,i,s))}for(const o of Object.keys(t.sources))o!=="esri"&&t.sources[o].type==="vector"&&(t.sources[o].url?l.push(I(e,o,x(i,t.sources[o].url),void 0,s)):t.sources[o].tiles&&l.push(I(e,o,t.sources[o],i,s)));await Promise.all(l)}async function X(e,t,r,s,i,l){const o=r?q(r)+"/":G,n=je(t,o),a=new Me(i,_(o,l==null?void 0:l.query),n);if(!s&&e.primarySourceName in e.sourceNameToSource){const u=e.sourceNameToSource[e.primarySourceName];if(!u.isCompatibleWith(a))return Promise.resolve();a.fullExtent!=null&&(u.fullExtent!=null?u.fullExtent.union(a.fullExtent):u.fullExtent=a.fullExtent.clone()),u.tileInfo.lods.length<a.tileInfo.lods.length&&(u.tileInfo=a.tileInfo)}if(s?(e.sourceBase=o,e.source=t,e.validatedSource=n,e.primarySourceName=i,e.sourceUrl&&w(e.sourceUrl)):w(o),e.sourceNameToSource[i]=a,!e.style)return t.defaultStyles==null?Promise.reject():typeof t.defaultStyles=="string"?I(e,"",x(o,t.defaultStyles,"root.json"),void 0,l):I(e,"",t.defaultStyles,x(o,"root.json"),l)}function je(e,t){if(e.hasOwnProperty("tileInfo"))return e;const r={xmin:-20037507067161843e-9,ymin:-20037507067161843e-9,xmax:20037507067161843e-9,ymax:20037507067161843e-9,spatialReference:{wkid:102100}},s=512;let i=78271.51696400007,l=2958287637957775e-7;const o=[],n=e.hasOwnProperty("minzoom")?+e.minzoom:0,a=e.hasOwnProperty("maxzoom")?+e.maxzoom:22;for(let u=0;u<=a;u++)u>=n&&o.push({level:u,scale:l,resolution:i}),i/=2,l/=2;for(const u of e.tiles)w(x(t,u));return{capabilities:"TilesOnly",initialExtent:r,fullExtent:r,minScale:0,maxScale:0,tiles:e.tiles,tileInfo:{rows:s,cols:s,dpi:96,format:"pbf",origin:{x:-20037508342787e-6,y:20037508342787e-6},lods:o,spatialReference:{wkid:102100}}}}const L=1e-6;function Ce(e,t){if(e===t)return!0;if(!e&&t!=null||e!=null&&!t||!e.spatialReference.equals(t.spatialReference)||e.dpi!==t.dpi)return!1;const r=e.origin,s=t.origin;if(Math.abs(r.x-s.x)>=L||Math.abs(r.y-s.y)>=L)return!1;let i,l;e.lods[0].scale>t.lods[0].scale?(i=e,l=t):(l=e,i=t);for(let o=i.lods[0].scale;o>=l.lods[l.lods.length-1].scale-L;o/=2)if(Math.abs(o-l.lods[0].scale)<L)return!0;return!1}function ke(e,t){if(e===t)return e;if(!e&&t!=null)return t;if(e!=null&&!t)return e;const r=e.size[0],s=e.format,i=e.dpi,l={x:e.origin.x,y:e.origin.y},o=e.spatialReference.toJSON(),n=e.lods[0].scale>t.lods[0].scale?e.lods[0]:t.lods[0],a=e.lods[e.lods.length-1].scale<=t.lods[t.lods.length-1].scale?e.lods[e.lods.length-1]:t.lods[t.lods.length-1],u=n.scale,h=n.resolution,S=a.scale,f=[];let m=u,T=h,A=0;for(;m>S;)f.push({level:A,resolution:T,scale:m}),A++,m/=2,T/=2;return new M({size:[r,r],dpi:i,format:s||"pbf",origin:l,lods:f,spatialReference:o})}let p=class extends ae(ne(xe(ue(pe(ce(ye(he(de(fe))))))))){constructor(...e){super(...e),this._spriteSourceMap=new Map,this.currentStyleInfo=null,this.style=null,this.isReference=null,this.operationalLayerType="VectorTileLayer",this.type="vector-tile",this.url=null,this.symbolCollisionBoxesVisible=!1,this.path=null}normalizeCtorArgs(e,t){return typeof e=="string"?d({url:e},t):e}destroy(){this._spriteSourceMap.clear()}async prefetchResources(e){await this.loadSpriteSource(globalThis.devicePixelRatio||1,e)}load(e){const t=this.loadFromPortal({supportedTypes:["Vector Tile Service"],supportsData:!1},e).catch(J).then(async()=>{if(!this.portalItem||!this.portalItem.id)return;const r=`${this.portalItem.itemUrl}/resources/styles/root.json`;(await U(r,v(d({},e),{query:v(d({f:"json"},this.customParameters),{token:this.apiKey})}))).data&&this.read({url:r},be(this.portalItem))}).catch(J).then(()=>this._loadStyle(e));return this.addResolvingPromise(t),Promise.resolve(this)}get attributionDataUrl(){const e=this.currentStyleInfo,t=e&&e.serviceUrl&&b(e.serviceUrl);if(!t)return null;const r=this._getDefaultAttribution(t.path);return r?_(r,v(d({},this.customParameters),{token:this.apiKey})):null}get capabilities(){const e=this.primarySource;return e?e.capabilities:{operations:{supportsExportTiles:!1,supportsTileMap:!1},exportTiles:null}}get fullExtent(){var e;return((e=this.primarySource)==null?void 0:e.fullExtent)||null}get parsedUrl(){return this.serviceUrl?b(this.serviceUrl):null}get serviceUrl(){return this.currentStyleInfo&&this.currentStyleInfo.serviceUrl||null}get spatialReference(){return this.tileInfo&&this.tileInfo.spatialReference||null}get styleUrl(){return this.currentStyleInfo&&this.currentStyleInfo.styleUrl||null}writeStyleUrl(e,t){e&&F(e)&&(e=`https:${e}`),t.styleUrl=e}get tileInfo(){var e;const t=[];for(const s in this.sourceNameToSource)t.push(this.sourceNameToSource[s]);let r=((e=this.primarySource)==null?void 0:e.tileInfo)||new M;if(t.length>1)for(let s=0;s<t.length;s++)Ce(r,t[s].tileInfo)&&(r=ke(r,t[s].tileInfo));return r}readVersion(e,t){return t.version?parseFloat(t.version):parseFloat(t.currentVersion)}get compatibleTileInfo256(){return K.create256x256CompatibleTileInfo(this.tileInfo)}get compatibleTileInfo512(){return K.create512x512CompatibleTileInfo(this.tileInfo)}async loadSpriteSource(e=1,t){if(!this._spriteSourceMap.has(e)){var r;const s=me(),i=(r=this.currentStyleInfo)!=null&&r.spriteUrl?_(this.currentStyleInfo.spriteUrl,v(d({},this.customParameters),{token:this.apiKey})):null,l=new $e(i,e,s.maxTextureSize,this.currentStyleInfo.spriteFormat);await l.load(t),this._spriteSourceMap.set(e,l)}return Promise.resolve(this._spriteSourceMap.get(e))}async loadStyle(e,t){var r;const s=e||this.style||this.url;return this._loadingTask&&typeof s=="string"&&this.url===s||((r=this._loadingTask)==null||r.abort(),this._loadingTask=Ae(i=>(this._spriteSourceMap.clear(),this._getSourceAndStyle(s,{signal:i})),t)),this._loadingTask.promise}getStyleLayerId(e){return this.styleRepository.getStyleLayerId(e)}getStyleLayerIndex(e){return this.styleRepository.getStyleLayerIndex(e)}getPaintProperties(e){return P(this.styleRepository.getPaintProperties(e))}setPaintProperties(e,t){const r=this.styleRepository.isPainterDataDriven(e);this.styleRepository.setPaintProperties(e,t);const s=this.styleRepository.isPainterDataDriven(e);this.emit("paint-change",{layer:e,paint:t,isDataDriven:r||s})}getStyleLayer(e){return P(this.styleRepository.getStyleLayer(e))}setStyleLayer(e,t){this.styleRepository.setStyleLayer(e,t),this.emit("style-layer-change",{layer:e,index:t})}deleteStyleLayer(e){this.styleRepository.deleteStyleLayer(e),this.emit("delete-style-layer",{layer:e})}getLayoutProperties(e){return P(this.styleRepository.getLayoutProperties(e))}setLayoutProperties(e,t){this.styleRepository.setLayoutProperties(e,t),this.emit("layout-change",{layer:e,layout:t})}setStyleLayerVisibility(e,t){this.styleRepository.setStyleLayerVisibility(e,t),this.emit("style-layer-visibility-change",{layer:e,visibility:t})}getStyleLayerVisibility(e){return this.styleRepository.getStyleLayerVisibility(e)}write(e,t){return t&&t.origin&&!this.styleUrl?(t.messages&&t.messages.push(new j("vectortilelayer:unsupported",`VectorTileLayer (${this.title}, ${this.id}) with style defined by JSON only are not supported`,{layer:this})),null):super.write(e,t)}getTileUrl(e,t,r){return null}async _getSourceAndStyle(e,t){if(!e)throw new Error("invalid style!");const r=await Be(e,v(d({},t),{query:v(d({},this.customParameters),{token:this.apiKey})}));r.spriteFormat==="webp"&&(await Te("lossy")||(r.spriteFormat="png")),this._set("currentStyleInfo",d({},r)),typeof e=="string"?(this.url=e,this.style=null):(this.url=null,this.style=e),this._set("sourceNameToSource",r.sourceNameToSource),this._set("primarySource",r.sourceNameToSource[r.primarySourceName]),this._set("styleRepository",new _e(r.style)),this.read(r.layerDefinition,{origin:"service"}),this.emit("load-style")}_getDefaultAttribution(e){const t=e.match(/^https?:\/\/(?:basemaps|basemapsbeta|basemapsdev)(?:-api)?\.arcgis\.com(\/[^\/]+)?\/arcgis\/rest\/services\/([^\/]+(\/[^\/]+)*)\/vectortileserver/i),r=["OpenStreetMap_v2","OpenStreetMap_Daylight_v2","OpenStreetMap_Export_v2","OpenStreetMap_FTS_v2","OpenStreetMap_GCS_v2","World_Basemap","World_Basemap_v2","World_Basemap_Export_v2","World_Basemap_GCS_v2","World_Basemap_WGS84","World_Contours_v2"];if(!t)return;const s=t[2]&&t[2].toLowerCase();if(!s)return;const i=t[1]||"";for(const l of r)if(l.toLowerCase().includes(s))return W(`//static.arcgis.com/attribution/Vector${i}/${l}`)}async _loadStyle(e){var t,r;return(t=(r=this._loadingTask)==null?void 0:r.promise)!=null?t:this.loadStyle(null,e)}};c([y({readOnly:!0})],p.prototype,"attributionDataUrl",null),c([y({type:["show","hide"]})],p.prototype,"listMode",void 0),c([y({readOnly:!0,json:{read:!1}})],p.prototype,"capabilities",null),c([y({readOnly:!0})],p.prototype,"currentStyleInfo",void 0),c([y({json:{read:!1},readOnly:!0,type:V})],p.prototype,"fullExtent",null),c([y()],p.prototype,"style",void 0),c([y({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],p.prototype,"isReference",void 0),c([y({type:["VectorTileLayer"]})],p.prototype,"operationalLayerType",void 0),c([y({readOnly:!0})],p.prototype,"parsedUrl",null),c([y({readOnly:!0})],p.prototype,"serviceUrl",null),c([y({type:ge,readOnly:!0})],p.prototype,"spatialReference",null),c([y({readOnly:!0})],p.prototype,"styleRepository",void 0),c([y({readOnly:!0})],p.prototype,"sourceNameToSource",void 0),c([y({readOnly:!0})],p.prototype,"primarySource",void 0),c([y({type:String,readOnly:!0,json:{write:{ignoreOrigin:!0},origins:{"web-document":{write:{ignoreOrigin:!0,isRequired:!0}}}}})],p.prototype,"styleUrl",null),c([Se(["portal-item","web-document"],"styleUrl")],p.prototype,"writeStyleUrl",null),c([y({json:{read:!1,origins:{service:{read:!1}}},readOnly:!0,type:M})],p.prototype,"tileInfo",null),c([y({json:{read:!1},readOnly:!0,value:"vector-tile"})],p.prototype,"type",void 0),c([y({json:{origins:{"web-document":{read:{source:"styleUrl"}},"portal-item":{read:{source:"url"}}},write:!1,read:!1}})],p.prototype,"url",void 0),c([y({readOnly:!0})],p.prototype,"version",void 0),c([ve("version",["version","currentVersion"])],p.prototype,"readVersion",null),c([y({readOnly:!0})],p.prototype,"compatibleTileInfo256",null),c([y({readOnly:!0})],p.prototype,"compatibleTileInfo512",null),c([y({type:Boolean})],p.prototype,"symbolCollisionBoxesVisible",void 0),c([y({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],p.prototype,"path",void 0),p=c([we("esri.layers.VectorTileLayer")],p);const ze=p;export{ze as default};
//# sourceMappingURL=VectorTileLayer.7950cf47.js.map
