import{U as c,ej as f,bz as n,ci as u,e3 as p,aY as S,D as o,E as d,J as g,dG as j,bC as v}from"./externalRenderers.e9b2a64d.js";import{b as z}from"./TileTreeDebugger.b03d13d7.js";let h=class extends z{constructor(a){super(a)}getTiles(){const a=this.lv.getVisibleNodes(),t=this.view.renderSpatialReference,i=this.nodeSR;return a.map(r=>m(r,t,i)).sort((r,s)=>r.lij[0]===s.lij[0]?r.label>s.label?-1:1:r.lij[0]-s.lij[0])}};function m(a,t,i){const r=a.serviceObb;if(c(r)||c(t))return null;f(l,r.quaternion),n(e,r.center),u(e,i,0,e,t,0,1),l[12]=e[0],l[13]=e[1],l[14]=e[2];const s=[[],[],[]];n(e,r.halfSize),p(e,e,l),u(e,t,0,e,i,0,1),s[0].push([e[0],e[1]]),n(e,r.halfSize),e[0]=-e[0],p(e,e,l),u(e,t,0,e,i,0,1),s[0].push([e[0],e[1]]),n(e,r.halfSize),e[0]=-e[0],e[1]=-e[1],p(e,e,l),u(e,t,0,e,i,0,1),s[0].push([e[0],e[1]]),n(e,r.halfSize),e[1]=-e[1],p(e,e,l),u(e,t,0,e,i,0,1),s[0].push([e[0],e[1]]),s[1].push(s[0][0]),s[1].push(s[0][1]),n(e,r.halfSize),e[0]=-e[0],e[2]=-e[2],p(e,e,l),u(e,t,0,e,i,0,1),s[1].push([e[0],e[1]]),n(e,r.halfSize),e[2]=-e[2],p(e,e,l),u(e,t,0,e,i,0,1),s[1].push([e[0],e[1]]),s[2].push(s[0][0]),s[2].push(s[0][3]),n(e,r.halfSize),e[1]=-e[1],e[2]=-e[2],p(e,e,l),u(e,t,0,e,i,0,1),s[2].push([e[0],e[1]]),s[2].push(s[1][3]);const b=new S({rings:s,spatialReference:i});return{lij:[a.level,a.childCount,0],label:a.id,geometry:b}}o([d({constructOnly:!0})],h.prototype,"lv",void 0),o([d({constructOnly:!0})],h.prototype,"nodeSR",void 0),h=o([g("esri.views.3d.layers.support.I3STreeDebugger")],h);const l=j(),e=v();export{h as I3STreeDebugger};
//# sourceMappingURL=I3STreeDebugger.7d34dd88.js.map
