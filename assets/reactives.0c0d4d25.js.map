{"version":3,"file":"reactives.0c0d4d25.js","sources":["../../src/components/reactives.vue"],"sourcesContent":["<template>\n  <div id=\"mapContainer\" class=\"viewDiv\"></div>\n</template>\n<script setup>\nimport { onMounted, reactive, ref } from \"vue\";\n\nimport SceneView from \"@arcgis/core/views/SceneView\";\nimport Map from \"@arcgis/core/Map\";\nimport SpatialReference from \"@arcgis/core/geometry/SpatialReference\";\nimport Graphic from \"@arcgis/core/Graphic\";\n// import WebScene from \"@arcgis/core/WebScene\";\n// import * as threeTools from \"../libs/tools/threeTool\";\nimport * as THREE from \"three\";\n/*import WebTileLayer from \"@arcgis/core/layers/WebTileLayer\";\nimport Basemap from \"@arcgis/core/Basemap\";\nimport * as webMercatorUtils from \"@arcgis/core/geometry/support/webMercatorUtils\";*/\nimport * as externalRenderers from \"@arcgis/core/views/3d/externalRenderers\";\nonMounted(() => {\n  initMap();\n});\nfunction initMap() {\n  const path = [\n    [115.80895340787583, 30.92933111293343],\n    [115.81947621477968, 30.936026430486265],\n    [115.85073577332635, 30.952730603143078],\n    [115.86830705038578, 30.964969701156637],\n    [115.87796494895557, 30.970050440481813],\n    [115.88263291871093, 30.97587476869184],\n    [115.88153549018487, 30.97619308639916],\n    [115.88860467181571, 30.985581605596618],\n    [115.89039457558401, 30.99614115304192],\n    [115.89037581420371, 30.99986573852132],\n    [115.88982453627196, 31.003621647335926],\n    [115.88822886767906, 30.999078415194415],\n    [115.88681216877917, 30.997464365151867],\n    [115.88286139825868, 30.99686255666582],\n    [115.87841763117079, 30.999826971071514],\n    [115.86308179931808, 30.99584156461405],\n    [115.85510630972263, 30.993171784031908],\n    [115.86174910808289, 30.993473404196706],\n    [115.86231959908358, 30.99068362090549],\n  ];\n  var map = new Map({\n    basemap: \"satellite\",\n    // ground:'world-elevation'\n  });\n  var view = new SceneView({\n    container: \"mapContainer\",\n    map: map,\n    // viewingMode: \"local\",\n    camera: {\n      position: [115.9210717080402, 30.896913111159947, 13154.641086300715],\n      fov: 55,\n      heading: 318.70623732061983,\n      tilt: 42.34234113203692,\n    },\n  });\n  //添加线\n  view.graphics.add(\n    new Graphic({\n      geometry: {\n        type: \"polyline\",\n        paths: path,\n      },\n      symbol: {\n        type: \"simple-line\", // autocasts as SimpleLineSymbol()\n        color: [226, 119, 40],\n        width: 2,\n      },\n    })\n  );\n  // map.allLayers._items[0].visible = false;\n  map.ground.opacity = 0.1;\n  // map.ground.navigationC onstraint = { type: \"none\" };\n  //引入three js\n  const myRenderer = {\n    view: view,\n    renderer: null, // three js 渲染器\n    camera: null, //three js 相机\n    scene: null, //three js 场景\n    height: 100,\n    offest: 0,\n    map: null,\n    setup: function (context) {\n      this.renderer = new THREE.WebGLRenderer({\n        context: context.gl,\n        premultipliedAlpha: false, //renderer 是否假设颜色有 premaultiplied alpha 默认为true\n      });\n      this.renderer.setPixelRatio(window.devicePixelRatio); //设置设备像素比。通常用于避免HiDPI设备上绘图模糊\n      this.renderer.setViewport(0, 0, view.width, view.height); //视图大小设置\n      //防止three.js 清除Arcgis JS API 提供的缓冲区\n      this.renderer.autoClearDepth = false; // 定义renderer是否清除深度缓存\n      this.renderer.autoClearStencil = false; // 定义renderer是否清除模板缓存\n      this.renderer.autoClearColor = false; // 定义renderer是否清除颜色缓存\n      // ArcGIS JS API渲染自定义离屏缓冲区，而不是默认的帧缓冲区。\n      // 我们必须将这段代码注入到three.js运行时中，以便绑定这些缓冲区而不是默认的缓冲区。\n      /*   const originalSetRenderTarget = this.renderer.setRenderTarget.bind(\n        this.renderer\n      );\n      this.renderer.setRenderTarget = function (target) {\n        originalSetRenderTarget(target);\n        if (target == null) {\n          // 绑定外部渲染器应该渲染到的颜色和深度缓冲区\n          context.bindRenderTarget();\n        }\n      };*/\n      this.scene = new THREE.Scene(); //场景\n      this.camera = new THREE.PerspectiveCamera(); //相机\n\n      var ambient = new THREE.AmbientLight(0xffffff, 1);\n      ambient.position.set(0, 100, 0);\n      this.scene.add(ambient);\n      //添加坐标轴辅助工具\n      /*      const axesHelper = new THREE.AxesHelper(10000000);\n      this.scene.add(axesHelper);*/\n\n      //创建几何体\n      let v3List = [];\n      path.forEach((item) => {\n        var renderPos = [0, 0, 0];\n        externalRenderers.toRenderCoordinates(\n          this.view,\n          [item[0], item[1], 20],\n          0,\n          SpatialReference.WGS84,\n          renderPos,\n          0,\n          1\n        );\n        v3List.push(\n          new THREE.Vector3(renderPos[0], renderPos[1], renderPos[2])\n        );\n      });\n      let curve = new THREE.CatmullRomCurve3(v3List, false);\n      /**\n       * path 管道的形状 曲线\n       * tubularsSegements    管道分成多少段\n       * radius   管道的半径\n       * radialSegments   管道口是几边形 分为多少段\n       * closed 收尾是否相连 封闭\n       * @type {TubeGeometry}\n       */\n      let tubeGeometry = new THREE.TubeGeometry(curve, 20, 5, 8, false);\n      var textureLoader = new THREE.TextureLoader();\n      //设置纹理贴图\n      this.map = textureLoader.load(\"images/allow2.png\");\n      this.map.wrapS = THREE.RepeatWrapping;\n      this.map.wrapT = THREE.RepeatWrapping;\n      this.map.repeat.set(70, 1);\n      // this.map.rotation = Math.PI;\n      this.map.offset.y = 0.65;\n      let material = new THREE.MeshBasicMaterial({\n        color: 0x85a9a9,\n        side: 200,\n        map: this.map,\n        transparent: true,\n        depthWrite: false,\n        // opacity: 1,\n      });\n      let tube1 = new THREE.Mesh(tubeGeometry, material);\n      // tube1.rotation.x = Math.PI * 0.1;\n      this.scene.add(tube1);\n\n      let tubeGeometry2 = new THREE.TubeGeometry(curve, 20, 10, 8, false);\n      let tubeMaterial2 = new THREE.MeshPhongMaterial({\n        color: 0x9988ff,\n        transparent: true,\n        opacity: 0.5,\n      });\n      let tube2 = new THREE.Mesh(tubeGeometry2, tubeMaterial2);\n      this.scene.add(tube2);\n\n      // context.resetWebGLState();\n    },\n    render: function (context) {\n      // 更新相机参数\n      const cam = context.camera;\n      this.camera.position.set(cam.eye[0], cam.eye[1], cam.eye[2]);\n      this.camera.up.set(cam.up[0], cam.up[1], cam.up[2]);\n      this.camera.lookAt(\n        new THREE.Vector3(cam.center[0], cam.center[1], cam.center[2])\n      );\n      // 投影矩阵可以直接复制\n      this.camera.projectionMatrix.fromArray(cam.projectionMatrix);\n      // // 更新几何体\n      this.map.offset.x += -0.009;\n      this.map.needsUpdate = true;\n      // 绘制场景\n      this.renderer.state.reset();\n      context.bindRenderTarget();\n      this.renderer.render(this.scene, this.camera);\n      // 请求重绘视图。\n      externalRenderers.requestRender(view);\n      // cleanup\n      context.resetWebGLState();\n    },\n  };\n  // 注册renderer\n  externalRenderers.add(view, myRenderer);\n}\n</script>\n\n<style scoped>\ncanvas {\n  position: fixed;\n  top: 0;\n  left: 0;\n  outline: none;\n}\n.viewDiv {\n  padding: 0;\n  margin: 0;\n  height: 100%;\n  width: 100%;\n}\n</style>\n"],"names":["Map","SceneView","Graphic","externalRenderers.add","THREE.WebGLRenderer","THREE.Scene","THREE.PerspectiveCamera","THREE.AmbientLight","externalRenderers.toRenderCoordinates","SpatialReference","THREE.Vector3","THREE.CatmullRomCurve3","THREE.TubeGeometry","THREE.TextureLoader","THREE.RepeatWrapping","THREE.MeshBasicMaterial","THREE.Mesh","THREE.MeshPhongMaterial","externalRenderers.requestRender"],"mappings":"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"}