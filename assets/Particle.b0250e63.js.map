{"version":3,"file":"Particle.b0250e63.js","sources":["../../src/components/Particle.vue"],"sourcesContent":["<template>\n  <div ref=\"sceneContainer\" id=\"sceneContainer\"></div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted } from \"vue\";\n\nimport * as dat from \"dat.gui\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\n\nonMounted(() => {\n  initScene();\n  initCamera();\n  initRenderer();\n  initControls();\n  initPointLight();\n  initObject();\n  resize();\n  animate();\n});\n\nlet scene = reactive({});\nlet camera = reactive({});\nlet renderer = reactive({});\nlet orbitControls = reactive({});\nconst sceneContainer = ref(null);\nlet geometry = reactive({});\nlet gui = new dat.GUI();\n// let clock = new THREE.Clock();\n\nfunction initScene() {\n  // 创建场景\n  scene = new THREE.Scene();\n}\n\nfunction initCamera() {\n  // 设置相机\n  camera = new THREE.PerspectiveCamera(\n    75,\n    window.innerWidth / window.innerHeight,\n    0.1,\n    1000\n  ); // 视野角度 , 宽高比， 近截面（near）和远截面（far）\n  // camera.position.set(100, 60, 90); // 设置相机位置\n  camera.position.z = 7;\n  scene.add(camera);\n}\n\nfunction initRenderer() {\n  // 设置渲染器\n  // renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });    // alpha: true 设置背景透明\n  renderer = new THREE.WebGLRenderer({ antialias: true });\n  renderer.setSize(\n    sceneContainer.value.clientWidth,\n    sceneContainer.value.clientHeight\n  );\n  // renderer.setClearColor(0xffffff); // 设置背景色\n  // 兼容高清屏幕\n  renderer.setPixelRatio(window.devicePixelRatio);\n  // 消除canvas的外边框\n  renderer.domElement.style.outline = \"none\";\n  sceneContainer.value.appendChild(renderer.domElement);\n  renderer.setClearColor(new THREE.Color(\"#21282a\"), 1);\n}\n\nfunction initControls() {\n  orbitControls = new OrbitControls(camera, renderer.domElement);\n  orbitControls.enableDamping = true; // 惯性\n  orbitControls.dampingFactor = 0.25; // 动态阻尼系数\n  orbitControls.enableZoom = true; // 缩放\n  orbitControls.enablePan = true; // 右键拖拽\n  // orbitControls.maxAzimuthAngle = Math.PI / 6; // 水平旋转范围\n  // orbitControls.minAzimuthAngle = -Math.PI / 6;\n  // orbitControls.maxPolarAngle = Math.PI / 6; // 垂直旋转范围\n  // orbitControls.minPolarAngle = -Math.PI / 6;\n  // 添加坐标轴\n  // const axesHelper = new THREE.AxesHelper(10000);\n  // scene.add(axesHelper);\n}\n\n/**\n * 创建粒子圆环\n */\nfunction initObject() {\n  geometry = new THREE.TorusGeometry(0.7, 0.2, 16, 100);\n  const material = new THREE.PointsMaterial({\n    size: 0.005,\n  });\n  // const loader = new THREE.TextureLoader(); // 自定义粒子\n  // const cross = loader.load(\"/logo.png\");\n  const particlesMaterial = new THREE.PointsMaterial({\n    size: 0.005,\n    // map: cross,\n    transparent: true,\n  });\n  const particlesGeometry = new THREE.BufferGeometry();\n  const particlesCnt = 5000;\n  const posArray = new Float32Array(particlesCnt * 3);\n  for (let i = 0; i < particlesCnt * 3; i++) {\n    // posArray[i] = (Math.random() - 0.5) * 5;\n    posArray[i] = (Math.random() - 0.5) * (Math.random() * 5);\n  }\n  particlesGeometry.setAttribute(\n    \"position\",\n    new THREE.BufferAttribute(posArray, 3)\n  );\n\n  const sphere = new THREE.Points(geometry, material);\n  const particlesMesh = new THREE.Points(particlesGeometry, particlesMaterial);\n\n  scene.add(sphere, particlesMesh);\n  gui.add(sphere.rotation, \"x\"); // 调整旋转属性\n}\n\nfunction initPointLight() {\n  const pointLight = new THREE.PointLight(0xffffff, 0.1);\n  pointLight.position.x = 2;\n  pointLight.position.y = 3;\n  pointLight.position.z = 4;\n  scene.add(pointLight);\n}\n\nfunction resize() {\n  const sizes = {\n    width: window.innerWidth,\n    height: window.innerHeight,\n  };\n  window.addEventListener(\"resize\", () => {\n    // Update sizes\n    sizes.width = window.innerWidth;\n    sizes.height = window.innerHeight;\n\n    // Update camera\n    camera.aspect = sizes.width / sizes.height;\n    camera.updateProjectionMatrix();\n\n    // Update renderer\n    renderer.setSize(sizes.width, sizes.height);\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n  });\n}\n\nconst animate = function (time) {\n  // time *= 0.001;\n  // 加载时场景旋转\n  /*\n  const cameraSpeed = time * 0.3;\n  const cameraRadius = 5;\n  camera.position.x = Math.cos(cameraSpeed) * cameraRadius;\n  camera.position.y = 1;\n  camera.position.z = Math.sin(cameraSpeed) * cameraRadius;\n  camera.lookAt(geometry.position);\n*/\n\n  resize();\n  // const elapsedTime = clock.getElapsedTime();\n  requestAnimationFrame(animate);\n  renderer.render(scene, camera);\n};\n</script>\n\n<style scoped>\n#sceneContainer {\n  width: 100%;\n  height: 100%;\n}\n\n#sceneContainer,\ncanvas {\n  position: fixed;\n  top: 0;\n  left: 0;\n  outline: none;\n}\n</style>\n"],"names":["dat.GUI","THREE.Scene","THREE.PerspectiveCamera","THREE.WebGLRenderer","THREE.Color","THREE.TorusGeometry","THREE.PointsMaterial","THREE.BufferGeometry","THREE.BufferAttribute","THREE.Points","THREE.PointLight"],"mappings":"oYAWA,EAAU,IAAM,CACd,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGF,GAAI,GAAQ,EAAS,IACjB,EAAS,EAAS,IAClB,EAAW,EAAS,IACpB,EAAgB,EAAS,IAC7B,KAAM,GAAiB,EAAI,MAC3B,GAAI,GAAW,EAAS,IACpB,EAAM,GAAIA,GAGd,YAAqB,CAEnB,EAAQ,GAAIC,GAGd,YAAsB,CAEpB,EAAS,GAAIC,GACX,GACA,OAAO,WAAa,OAAO,YAC3B,GACA,KAGF,EAAO,SAAS,EAAI,EACpB,EAAM,IAAI,GAGZ,YAAwB,CAGtB,EAAW,GAAIC,GAAoB,CAAE,UAAW,KAChD,EAAS,QACP,EAAe,MAAM,YACrB,EAAe,MAAM,cAIvB,EAAS,cAAc,OAAO,kBAE9B,EAAS,WAAW,MAAM,QAAU,OACpC,EAAe,MAAM,YAAY,EAAS,YAC1C,EAAS,cAAc,GAAIC,GAAY,WAAY,GAGrD,YAAwB,CACtB,EAAgB,GAAI,GAAc,EAAQ,EAAS,YACnD,EAAc,cAAgB,GAC9B,EAAc,cAAgB,IAC9B,EAAc,WAAa,GAC3B,EAAc,UAAY,GAa5B,YAAsB,CACpB,EAAW,GAAIC,GAAoB,GAAK,GAAK,GAAI,KACjD,KAAM,GAAW,GAAIC,GAAqB,CACxC,KAAM,OAIF,EAAoB,GAAIA,GAAqB,CACjD,KAAM,KAEN,YAAa,KAET,EAAoB,GAAIC,GACxB,EAAe,IACf,EAAW,GAAI,cAAa,EAAe,GACjD,OAAS,GAAI,EAAG,EAAI,EAAe,EAAG,IAEpC,EAAS,GAAM,MAAK,SAAW,IAAQ,MAAK,SAAW,GAEzD,EAAkB,aAChB,WACA,GAAIC,GAAsB,EAAU,IAGtC,KAAM,GAAS,GAAIC,GAAa,EAAU,GACpC,EAAgB,GAAIA,GAAa,EAAmB,GAE1D,EAAM,IAAI,EAAQ,GAClB,EAAI,IAAI,EAAO,SAAU,KAG3B,YAA0B,CACxB,KAAM,GAAa,GAAIC,GAAiB,SAAU,IAClD,EAAW,SAAS,EAAI,EACxB,EAAW,SAAS,EAAI,EACxB,EAAW,SAAS,EAAI,EACxB,EAAM,IAAI,GAGZ,YAAkB,CAChB,KAAM,GAAQ,CACZ,MAAO,OAAO,WACd,OAAQ,OAAO,aAEjB,OAAO,iBAAiB,SAAU,IAAM,CAEtC,EAAM,MAAQ,OAAO,WACrB,EAAM,OAAS,OAAO,YAGtB,EAAO,OAAS,EAAM,MAAQ,EAAM,OACpC,EAAO,yBAGP,EAAS,QAAQ,EAAM,MAAO,EAAM,QACpC,EAAS,cAAc,KAAK,IAAI,OAAO,iBAAkB,MAI7D,KAAM,GAAU,SAAU,EAAM,CAY9B,IAEA,sBAAsB,GACtB,EAAS,OAAO,EAAO"}