{"version":3,"file":"gzPipe.61e2923b.js","sources":["../../src/utils/coordTrans.js","../../src/components/gzPipe.vue"],"sourcesContent":["/* eslint-disable */\r\nvar CoordTrans = CoordTrans || {}\r\nCoordTrans.GaussTransform = {\r\n    ellip_CGCS200: {\r\n        a: 6378137,\r\n        b: 6356752.31414,\r\n        f: 1 / 298.257222101 // f=(a-b)/a\r\n    },\r\n    ProjectionPara: {\r\n        CenterL: 113.2833333333, // 中央经线114\r\n        ZoneWide: 3, // 3度带\r\n        ZoneNo: 38 // 带号\r\n    },\r\n    fourTransPra: {\r\n        scale: 0.999997756396785, // 缩放比例\r\n        rotationAngle: 0.0044099861111111, // 旋转角度\r\n        DX: -199995.893159972, // 北向\r\n        DY: -16.6491077492992 // 东西向\r\n    },\r\n    BL2XY: function(B, L, ellip, Project) {\r\n        var ellip = ellip || CoordTrans.GaussTransform.ellip_CGCS200\r\n        var Project = Project || CoordTrans.GaussTransform.ProjectionPara\r\n        var m_a = ellip.a ? ellip.a : 0\r\n        var m_b = ellip.b ? ellip.b : 0\r\n        var m_f = ellip.f ? ellip.f : 0\r\n\r\n        var m_ZoneWide = Project.ZoneWide ? Project.ZoneWide : 3\r\n        var m_ZoneNo = Project.ZoneNo ? Project.ZoneNo : (parseInt(L / m_ZoneWide) + 1)\r\n        var m_CenterL = Project.CenterL ? Project.CenterL : (m_ZoneNo * m_ZoneWide - m_ZoneWide / 2)\r\n\r\n        var e = Math.sqrt(2 * m_f - Math.pow(m_f, 2))\r\n        var e2 = e / Math.sqrt(1 - e * e)\r\n\r\n        B = CoordTrans.AngleTransform.Degree2Radian(B, false)\r\n        L = CoordTrans.AngleTransform.Degree2Radian(L, false)\r\n\r\n        var n2 = Math.pow(e2, 2) * Math.pow(Math.cos(B), 2)\r\n        var t = Math.tan(B)\r\n\r\n        var W = Math.sqrt(1 - Math.pow(e * Math.sin(B), 2))\r\n        var M = m_a * (1 - Math.pow(e, 2)) / Math.pow(W, 3) // 子午圈曲率半径\r\n        var N = m_a / W\r\n\r\n        var dL = L - CoordTrans.AngleTransform.Degree2Radian(m_CenterL, false) // 经度差(弧度值)\r\n        var l2 = Math.pow(dL, 2) // 经差平方值\r\n\r\n        // 计算子午弧长\r\n        var Rx = m_a * (1 - Math.pow(e, 2)) * (1.00505250559297 * B - 0.00253155620900066 * Math.sin(2 * B) + 2.65690155540381E-06 * Math.sin(4 * B) - 3.47007559905787E-09 * Math.sin(6 * B) + 4.91654216666515E-12 * Math.sin(8 * B) - 7.26313725279022E-15 * Math.sin(10 * B) + 1.07400991193683E-17 * Math.sin(12 * B))\r\n\r\n        Rx = Rx = m_a * (1 - Math.pow(e, 2)) * (1.00505250559297 * B - 0.00253155620900066 * Math.sin(2 * B) + 2.65690155540381E-06 * Math.sin(4 * B))\r\n\r\n        var X = Rx + N * t * Math.pow(Math.cos(B), 2) * l2 * (0.5 + (5 - t * t + 9 * n2 + 4 * Math.pow(n2, 2)) * Math.pow(Math.cos(B), 2) * l2 / 24 + (61 - 58 * t * t + Math.pow(t, 4)) / 720 * Math.pow(Math.cos(B), 4) * Math.pow(l2, 2))\r\n\r\n        X = Rx + N * Math.sin(B) * Math.cos(B) * l2 * (0.5 + (5 - t * t + 9 * n2 + 4 * Math.pow(n2, 2)) * Math.pow(Math.cos(B), 2) * l2 / 24 + (61 - 58 * t * t + Math.pow(t, 4)) / 720 * Math.pow(Math.cos(B), 4) * Math.pow(l2, 2))\r\n\r\n        var Y = N * Math.cos(B) * dL * (1 + (1 - t * t + n2) * Math.pow(Math.cos(B), 2) * l2 / 6.0 + (5 - 18 * t * t + Math.pow(t, 4) + 14 * n2 - 58 * n2 * t * t) * Math.pow(Math.cos(B), 4) * Math.pow(l2, 2) / 120.0)\r\n\r\n        // Y = Y + 500000 + m_ZoneNo * 1000000;\r\n        Y = Y + 500000\r\n\r\n        // return { Y, X };\r\n        return { 'X': Y, 'Y': X }\r\n\r\n    },\r\n    G2000BLtoGZ2000XYZ: function(B, L, ellip, Project) {\r\n        var point200 = CoordTrans.GaussTransform.BL2XY(B, L, ellip, Project)\r\n        return CoordTrans.GaussTransform.G2000XYtoGZ2000XYZ(point200.X, point200.Y, ellip, Project)\r\n    },\r\n    G2000XYtoGZ2000XYZ: function(X, Y, ellip, Project) {\r\n        var fromPoint = {\r\n            X: X - 460020,\r\n            Y: Y - 2329620\r\n        }\r\n        return CoordTrans.GaussTransform.G2000XYtoGZ2000XYZTransformPoint(fromPoint)\r\n    },\r\n\r\n    G2000XYtoGZ2000XYZTransformPoint: function(fromPoint) {\r\n        var tempPoint = {\r\n            X: fromPoint.Y,\r\n            Y: fromPoint.X\r\n        }\r\n        var m_Scale = CoordTrans.GaussTransform.fourTransPra.scale\r\n        var m_RotationAngle = CoordTrans.GaussTransform.fourTransPra.rotationAngle * Math.PI / 180\r\n        var m_DX = CoordTrans.GaussTransform.fourTransPra.DX\r\n        var m_DY = CoordTrans.GaussTransform.fourTransPra.DY\r\n\r\n        var A = m_Scale * Math.cos(m_RotationAngle)\r\n        var B = m_Scale * Math.sin(m_RotationAngle)\r\n\r\n        var X = A * tempPoint.X - B * tempPoint.Y + m_DX\r\n        var Y = A * tempPoint.Y + B * tempPoint.X + m_DY\r\n        return {\r\n            'X': Y,\r\n            'Y': X + 200000\r\n        }\r\n    },\r\n    GZ2000XYtoG2000XYZTransformPoint: function(X, Y) {\r\n        var fromGZPoint = {\r\n            'X': X,\r\n            'Y': Y\r\n        }\r\n\r\n        var tempPoint = {\r\n            'Y': fromGZPoint.X,\r\n            'X': fromGZPoint.Y - 200000\r\n        }\r\n        var m_Scale = CoordTrans.GaussTransform.fourTransPra.scale\r\n        var m_RotationAngle = CoordTrans.GaussTransform.fourTransPra.rotationAngle * Math.PI / 180\r\n        var m_DX = CoordTrans.GaussTransform.fourTransPra.DX\r\n        var m_DY = CoordTrans.GaussTransform.fourTransPra.DY\r\n\r\n        var A = m_Scale * Math.cos(m_RotationAngle)\r\n        var B = m_Scale * Math.sin(m_RotationAngle)\r\n\r\n        X = (A * tempPoint.X + B * tempPoint.Y - A * m_DX - B * m_DY) / (Math.pow(A, 2) + Math.pow(B, 2))\r\n        Y = (A * tempPoint.Y - B * tempPoint.X + B * m_DX - A * m_DY) / (Math.pow(A, 2) + Math.pow(B, 2))\r\n\r\n        return {\r\n            'X': Y,\r\n            'Y': X\r\n        }\r\n    },\r\n\r\n    GZ2000XYtoG2000XYZ: function(X, Y, ellip, Project) {\r\n        var fromPoint = CoordTrans.GaussTransform.GZ2000XYtoG2000XYZTransformPoint(X, Y)\r\n        return {\r\n            'X': fromPoint.X + 460020,\r\n            'Y': fromPoint.Y + 2329620\r\n        }\r\n    },\r\n    GZ2000XYtoG2000BL: function(X, Y, ellip, Project) {\r\n        var point200 = CoordTrans.GaussTransform.GZ2000XYtoG2000XYZ(X, Y, ellip, Project)\r\n        return CoordTrans.GaussTransform.XY2BL(point200.X, point200.Y, ellip, Project)\r\n    },\r\n\r\n    XY2BL: function(X, Y, ellip, Project) {\r\n        var m_X = Y\r\n        var m_Y = X\r\n        var ellip = ellip || CoordTrans.GaussTransform.ellip_CGCS200\r\n        var Project = Project || CoordTrans.GaussTransform.ProjectionPara\r\n        var m_a = ellip.a ? ellip.a : 0 // 长半轴\r\n        var m_b = ellip.b ? ellip.b : 0\r\n        var m_f = ellip.f ? ellip.f : 0 // 扁率\r\n        var e = Math.sqrt(2 * m_f - Math.pow(m_f, 2)) // 第一偏心率\r\n        var e2 = e / Math.sqrt(1 - e * e) // 第二偏心率\r\n        // 弧长参数\r\n        var m_r1 = 1 + 0.75 * Math.pow(e, 2) + 45.0 / 64 * Math.pow(e, 4) + 175.0 / 256 * Math.pow(e, 6) + 11025.0 / 16384 * Math.pow(e, 8) + 43659.0 / 65536 * Math.pow(e, 10) + 693693.0 / 1048576 * Math.pow(e, 12)\r\n\r\n        var m_r2 = 3.0 / 8 * Math.pow(e, 2) + 15.0 / 32 * Math.pow(e, 4) + 525.0 / 1024 * Math.pow(e, 6) + 2205.0 / 4096 * Math.pow(e, 8) + 72765.0 / 131072 * Math.pow(e, 10) + 297297.0 / 524288 * Math.pow(e, 12)\r\n\r\n        var m_r3 = 15.0 / 256 * Math.pow(e, 4) + 105.0 / 1024 * Math.pow(e, 6) + 2205.0 / 16384 * Math.pow(e, 8) + 10395.0 / 65536 * Math.pow(e, 10) + 1486485.0 / 8388608 * Math.pow(e, 12)\r\n\r\n        var m_r4 = 35.0 / 3072 * Math.pow(e, 6) + 105.0 / 4096 * Math.pow(e, 8) + 10395.0 / 262144 * Math.pow(e, 10) + 55055.0 / 1048576 * Math.pow(e, 12)\r\n\r\n        var m_r5 = 315.0 / 131072 * Math.pow(e, 8) + 3465.0 / 524288 * Math.pow(e, 10) + 99099.0 / 8388608 * Math.pow(e, 12)\r\n\r\n        var m_r6 = 693.0 / 1310720 * Math.pow(e, 10) + 9009.0 / 5242880 * Math.pow(e, 12)\r\n\r\n        var m_r7 = 1001.0 / 8388608 * Math.pow(e, 12)\r\n\r\n        var A1 = m_a * (1 - Math.pow(e, 2)) * m_r1 * Math.PI / 180 // 乘弧长参数1\r\n        var A2 = m_a * (1 - Math.pow(e, 2)) * m_r2 // 乘弧长参数2\r\n        var A3 = m_a * (1 - Math.pow(e, 2)) * m_r3 // 乘弧长参数3\r\n        var A4 = m_a * (1 - Math.pow(e, 2)) * m_r4 // 乘弧长参数4\r\n\r\n        var B0 = m_X / A1\r\n        var preB0 = 0\r\n        /** ************************************\r\n         * 底点纬度迭代算法\r\n         * 求B\r\n         * **************************************/\r\n        do {\r\n            preB0 = B0\r\n            B0 = B0 * Math.PI / 180\r\n            B0 = (m_X - (-A2 * Math.sin(2 * B0) + A3 * Math.sin(4 * B0) - A4 * Math.sin(6 * B0))) / A1\r\n            if (Math.abs(B0 - preB0) < 0.0000001) break\r\n\r\n        } while (true)\r\n\r\n        B0 = B0 * Math.PI / 180\r\n\r\n        var n2 = Math.pow(e2, 2) * Math.pow(Math.cos(B0), 2)\r\n        var t = Math.tan(B0)\r\n\r\n        var W = Math.sqrt(1 - Math.pow(e * Math.sin(B0), 2)) // 第一辅助参数\r\n        var M = m_a * (1 - Math.pow(e, 2)) / Math.pow(W, 3) // 子午圈曲率半径\r\n        var N = m_a / W // 卯酉圈曲率半径\r\n\r\n        m_Y = m_Y % 1000000 - 500000 // 减去带号--减去偏移值\r\n        var ly = m_Y / N\r\n\r\n        var m_ZoneWide = Project.ZoneWide ? Project.ZoneWide : 3\r\n        var m_ZoneNo = Project.ZoneNo ? Project.ZoneNo : (parseInt(L / m_ZoneWide) + 1)\r\n        var m_CenterL = Project.CenterL ? Project.CenterL : (m_ZoneNo * m_ZoneWide - m_ZoneWide / 2)\r\n\r\n        var centerL0 = CoordTrans.AngleTransform.Degree2Radian(m_CenterL, false) // 度转换弧度\r\n\r\n        var tempL = centerL0 + (ly - (1 + 2 * t * t + n2) * Math.pow(ly, 3) / 6 + (5 + 28 * t * t + 24 * Math.pow(t, 4) + 6 * n2 + 8 * n2 * Math.pow(t, 2)) * Math.pow(ly, 5) / 120) / Math.cos(B0)\r\n        // 以百分制形式返回经度\r\n        var L = Math.round(CoordTrans.AngleTransform.Radian2Degree(tempL, false) * 100000000000) / 100000000000\r\n\r\n        var tempB = B0 - t / (2 * M) * m_Y * ly * (1 - (5 + 3 * t * t + n2 - 9 * n2 * Math.pow(t, 2)) * Math.pow(ly, 2) / 12 + (61 + 90 * t * t + 45 * Math.pow(t, 4)) * Math.pow(ly, 4) / 360)\r\n        // 以百分制形式返回纬度\r\n        var B = Math.round(CoordTrans.AngleTransform.Radian2Degree(tempB, false) * 100000000000) / 100000000000\r\n        return { B, L }\r\n    },\r\n\r\n    gcj02toG2000: function(lng, lat) {\r\n        var math = Math, pi = Math.PI\r\n        var transformlat = function(lng, lat) {\r\n            let ret\r\n            ret = -100.0 + 2.0 * lng + 3.0 * lat + 0.2 * lat * lat + 0.1 * lng * lat + 0.2 * Math.sqrt(Math.abs(lng))\r\n            ret += (20.0 * Math.sin(6.0 * lng * pi) + 20.0 *\r\n                Math.sin(2.0 * lng * pi)) * 2.0 / 3.0\r\n            ret += (20.0 * Math.sin(lat * pi) + 40.0 *\r\n                Math.sin(lat / 3.0 * pi)) * 2.0 / 3.0\r\n            ret += (160.0 * Math.sin(lat / 12.0 * pi) + 320 *\r\n                Math.sin(lat * pi / 30.0)) * 2.0 / 3.0\r\n            return ret\r\n\r\n        }\r\n\r\n        var transformlng = function(lng, lat) {\r\n            let ret\r\n            ret = 300.0 + lng + 2.0 * lat + 0.1 * lng * lng + 0.1 * lng * lat + 0.1 * math.sqrt(math.abs(lng))\r\n            ret += (20.0 * math.sin(6.0 * lng * pi) + 20.0 *\r\n                math.sin(2.0 * lng * pi)) * 2.0 / 3.0\r\n            ret += (20.0 * math.sin(lng * pi) + 40.0 *\r\n                math.sin(lng / 3.0 * pi)) * 2.0 / 3.0\r\n            ret += (150.0 * math.sin(lng / 12.0 * pi) + 300.0 *\r\n                math.sin(lng / 30.0 * pi)) * 2.0 / 3.0\r\n            return ret\r\n        }\r\n\r\n        // if out_of_china(lng, lat):\r\n        // return lng, lat\r\n\r\n        var ellip_cgcs2000 = CoordTrans.GaussTransform.ellip_CGCS200\r\n        var a = ellip_cgcs2000.a, ee = ellip_cgcs2000.f * 2\r\n\r\n        var dlat, dlng, radlat, magic, mglat, mglng, sqrtmagic\r\n        dlat = transformlat(lng - 105.0, lat - 35.0)\r\n        dlng = transformlng(lng - 105.0, lat - 35.0)\r\n        radlat = lat / 180.0 * pi\r\n        magic = math.sin(radlat)\r\n        magic = 1 - ee * magic * magic\r\n        sqrtmagic = math.sqrt(magic)\r\n        dlat = (dlat * 180.0) / ((a * (1 - ee)) / (magic * sqrtmagic) * pi)\r\n        dlng = (dlng * 180.0) / (a / sqrtmagic * math.cos(radlat) * pi)\r\n        mglat = lat + dlat\r\n        mglng = lng + dlng\r\n        return [lng * 2 - mglng, lat * 2 - mglat]\r\n    },\r\n\r\n    // 百度坐标 to gcj02\r\n    bd09togcj02: function(bd_lon, bd_lat) {\r\n        var x_PI = 3.14159265358979324 * 3000.0 / 180.0\r\n        var bd_lon = +bd_lon\r\n        var bd_lat = +bd_lat\r\n        var x = bd_lon - 0.0065\r\n        var y = bd_lat - 0.006\r\n        var z = Math.sqrt(x * x + y * y) - 0.00002 * Math.sin(y * x_PI)\r\n        var theta = Math.atan2(y, x) - 0.000003 * Math.cos(x * x_PI)\r\n        var gg_lng = z * Math.cos(theta)\r\n        var gg_lat = z * Math.sin(theta)\r\n        return [gg_lng, gg_lat]\r\n    }\r\n\r\n}\r\nCoordTrans.AngleTransform = {\r\n\r\n    Degree2Radian: function(dbld, isDDFFMM) {\r\n        if (isDDFFMM) {\r\n            dbld = Ang60ToAng100(dbld)\r\n        }\r\n        var dr = dbld * Math.PI / 180\r\n        return dr\r\n\r\n    },\r\n    Ang60ToAng100: function(dfmAng) {\r\n        var allms\r\n        allms = Ang2Ms(dfmAng)\r\n        return Math.round()\r\n    },\r\n    Radian2Degree: function(dblR, dfmformat) {\r\n        var dAng\r\n        dAng = dblR * 180 / Math.PI\r\n        if (dfmformat == true) {\r\n            dAng = Ang100ToAng60(dAng)\r\n        }\r\n        return dAng\r\n    }\r\n\r\n}\r\n\r\nexport default CoordTrans\r\n","<template>\n  <div id=\"sceneContainer\" ref=\"sceneContainer\"></div>\n</template>\n\n<script setup>\nimport { onMounted, reactive, ref, onBeforeMount } from \"vue\";\n// import * as dat from \"dat.gui\";\nimport * as THREE from \"three\";\n// import { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\n// import threeMethods from \"../utils/index.js\";\nimport esriConfig from \"@arcgis/core/config.js\";\nesriConfig.assetsPath = \"./assets\";\nimport Map from \"@arcgis/core/Map\";\nimport SceneView from \"@arcgis/core/views/SceneView\";\nimport Basemap from \"@arcgis/core/Basemap\";\nimport TileLayer from \"@arcgis/core/layers/TileLayer\";\nimport SceneLayer from \"@arcgis/core/layers/SceneLayer\";\nimport Graphic from \"@arcgis/core/Graphic\";\nimport * as externalRenderers from \"@arcgis/core/views/3d/externalRenderers\"; //外部渲染器\nimport * as webMercatorUtils from \"@arcgis/core/geometry/support/webMercatorUtils\";\nimport CoordTrans from \"../utils/coordTrans\";\n\nconst sceneContainer = ref(null);\n\nlet pointsArr = reactive([]);\n\nlet texture;\nconst colors = [\"#ffff00\", \"#00ffe2\", \"#9800ff\", \"#ff6767\"];\nlet color = colors[Math.floor(Math.random() * colors.length)];\nonBeforeMount(() => {\n  getYsdData();\n});\nonMounted(() => {\n  // initArcMap();\n});\n/**\n * 初始化ArcGIS 相关\n */\nfunction initArcMap() {\n  const basemap = new Basemap({\n    baseLayers: [\n      new TileLayer({\n        url: \"http://10.194.150.155:8010/ServiceAccess/MapService-T/2017年卫星影像地图_广州2000坐标系_/19f3612a2b44e98baae1f40713a085b6\",\n        title: \"Basemap\",\n        // visible: false,\n      }),\n    ],\n  });\n  const map = new Map({ basemap });\n  let view = new SceneView({\n    container: sceneContainer.value,\n    map: map,\n    zoom: 9.8,\n    environment: {\n      background: {\n        type: \"color\",\n        color: [216, 214, 209, 0.3],\n      },\n      starsEnabled: false,\n      atmosphereEnabled: true,\n    },\n  });\n  view.when((view) => {\n    let center = view.extent.center;\n    center.x = 43698.65155595513;\n    center.y = 228054.33760938543;\n    view.goTo({\n      center,\n      tilt: 0,\n      zoom: 16,\n    });\n  });\n  view.ui.remove([\"attribution\", \"zoom\"]);\n  view.ui.empty(\"top-left\");\n  window.view = view;\n  map.ground.opacity = 0.2;\n  // 开启地下导航模式 可选属性值 {none: 地下} / {stay-above:地上}\n  map.ground.navigationConstraint = { type: \"none\" };\n  // 管网图层\n  let sceneLayer = new SceneLayer({\n    id: \"sceneLayer\",\n    // url: 'https://gis.swj.gz.gov.cn/server/rest/services/Hosted/PQWSG20220113/SceneServer', // 域名\n    // url: \"http://10.194.171.119/server/rest/services/Hosted/DWDPWSJCS20220122/SceneServer\", // ip\n    url: \"http://10.194.171.3/server/rest/services/eslpk/XFWWSGX20211215/SceneServer\",\n  });\n  // map.add(sceneLayer);\n\n  registerRenderer();\n}\n\n/**\n * @Description: 以下方法参照了\n * https://developers.arcgis.com/javascript/latest/api-reference/esri-views-3d-externalRenderers.html\n * https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry-support-webMercatorUtils.html\n * https://blog.csdn.net/qq_37155408/article/details/115693043?spm=1001.2014.3001.5502\n * http://www.yanhuangxueyuan.com/Three.js_course/texture.html#2\n * https://www.cnblogs.com/xuejianxiyang/p/9719715.html\n * https://threejs.org/docs/index.html#manual/en/introduction/Drawing-lines\n * @author parabellum\n * @date 2022/1/5\n * @type {{setup: myExternalRenderer.setup, render: myExternalRenderer.render}}\n */\nlet myExternalRenderer = {\n  view: window.view,\n  scene: null, // three.js 中的场景\n  camera: null, // three.js 相机\n  renderer: null, // three.js 渲染器\n  /**\n   * Setup function, called once by the ArcGIS JS API.\n   注册对象时被调用,只调用一次,用于初始化three.js创建的对象\n   */\n  setup: function (context) {\n    this.renderer = new THREE.WebGLRenderer({\n      context: context.gl, // 可用于将渲染器附加到已有的渲染环境(RenderingContext)中\n      premultipliedAlpha: false, // renderer是否假设颜色有 premultiplied alpha. 默认为true\n    });\n    this.renderer.setPixelRatio(window.devicePixelRatio); // 设置设备像素比。通常用于避免HiDPI设备上绘图模糊\n    this.renderer.setViewport(0, 0, window.view.width, window.view.height); // 视口大小设置\n    // 防止Three.js清除ArcGIS JS API提供的缓冲区。\n    this.renderer.autoClearDepth = false; // 定义renderer是否清除深度缓存\n    this.renderer.autoClearStencil = false; // 定义renderer是否清除模板缓存\n    this.renderer.autoClearColor = false; // 定义renderer是否清除颜色缓存\n    this.renderer.shadowMap.enabled = false;\n\n    /*   // 此段暂时预留   此段替换为了render方法中 context.bindRenderTarget();\n    // ArcGIS JS API渲染自定义离屏缓冲区，而不是默认的帧缓冲区。\n    // 我们必须将这段代码注入到three.js运行时中，以便绑定这些缓冲区而不是默认的缓冲区。\n    const originalSetRenderTarget = this.renderer.setRenderTarget.bind(\n      this.renderer\n    );\n    this.renderer.setRenderTarget = function (target) {\n      originalSetRenderTarget(target);\n      if (target == null) {\n        // 绑定外部渲染器应该渲染到的颜色和深度缓冲区\n        context.bindRenderTarget();\n      }\n    };*/\n    this.scene = new THREE.Scene(); // 场景\n    this.camera = new THREE.PerspectiveCamera(); // 相机\n    // 上帝说比需要有光， 不然你的管就黑了\n    const ambientLight = new THREE.AmbientLight(0xffffff); // 自然光，每个几何体的每个面都有光\n    const pointLight = new THREE.PointLight(0xffffff, 0.6);\n    pointLight.position.x = 2;\n    pointLight.position.y = 3;\n    pointLight.position.z = 4;\n    pointLight.castShadow = false;\n\n    this.scene.add(ambientLight);\n    this.scene.add(pointLight);\n    // 添加坐标轴辅助工具\n    // const axesHelper = new THREE.AxesHelper(1000000);\n    // this.scene.add(axesHelper);\n    // 更新view的resolution, 在场景中渲染管线等需要此句之后\n    this.scene.userData.viewResolution = window.view.resolution;\n    //  基础配置结束\n    initPipeConf();\n    // addGraphic(window.view);\n  },\n  render: function (context) {\n    // 更新相机参数\n    const cam = context.camera;\n    this.camera.position.set(cam.eye[0], cam.eye[1], cam.eye[2]);\n    this.camera.up.set(cam.up[0], cam.up[1], cam.up[2]);\n    this.camera.lookAt(\n      new THREE.Vector3(cam.center[0], cam.center[1], cam.center[2])\n    );\n    // 投影矩阵可以直接复制\n    this.camera.projectionMatrix.fromArray(cam.projectionMatrix);\n    // animate start\n    texture.offset.x += -0.005; // 贴图运动速度\n    texture.needsUpdate = true;\n    // requestAnimationFrame(animate);\n    this.renderer.render(this.scene, this.camera);\n    // resize start\n    const sizes = {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    };\n    window.addEventListener(\"resize\", () => {\n      // Update sizes\n      sizes.width = window.innerWidth;\n      sizes.height = window.innerHeight;\n      // Update camera\n      this.camera.aspect = sizes.width / sizes.height;\n      this.camera.updateProjectionMatrix();\n      // Update renderer\n      this.renderer.setSize(sizes.width, sizes.height);\n      this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    });\n    // 更新view的resolution\n    // scene.userData.viewResolution = this.view.resolution;\n    // 绘制场景\n    this.renderer.state.reset();\n    context.bindRenderTarget();\n    this.renderer.render(this.scene, this.camera);\n    // 请求重绘视图。\n    externalRenderers.requestRender(window.view);\n    // cleanup\n    context.resetWebGLState();\n  },\n};\nfunction registerRenderer() {\n  // 向SceneView实例注册外部渲染器\n  externalRenderers.add(window.view, myExternalRenderer);\n}\n/**\n * 经纬度坐标点转换为渲染坐标系（three js）中的点坐标\n * @param {number} longitude 经度\n * @param {number} latitude 纬度\n * @param {number} height 高度\n * @return {array} 返回渲染坐标系中(three js)的点坐标[x, y, z]\n */\nfunction pointTransform(longitude, latitude, height) {\n  let transformation = new Array(16);\n  // 将经纬度坐标转换为xy值\n  // let pointXY = webMercatorUtils.lngLatToXY(longitude, latitude);\n  // 将广州2000坐标转换为xy值\n  /*  let { X, Y } = CoordTrans.GaussTransform.G2000BLtoGZ2000XYZ(\n    latitude,\n    longitude\n  );\n  let positions = {\n    x: X - 1220,\n    y: Y - 340,\n  };*/\n  // 先转换高度为0的点\n  externalRenderers.renderCoordinateTransformAt(\n    window.view,\n    // [pointXY[0], pointXY[1], height], // 坐标在地面上的点[x值, y值, 高度值]\n    // [positions.x, positions.y, height], // 坐标在地面上的点[x值, y值, 高度值]\n    [longitude, latitude, height], // 坐标在地面上的点[x值, y值, 高度值]\n    window.view.spatialReference,\n    transformation\n  );\n  return [transformation[12], transformation[13], transformation[14]];\n}\n/**\n * 管线初始配置 （直径，颜色，透明度等）\n */\nfunction initPipeConf() {\n  const transparentConf = {\n    points: pointsArr,\n    color: 0xffaa00,\n    radius: 1.5,\n    // opacity: 0.6,\n  };\n  // 管道内流动的液体\n  const conf = {\n    points: pointsArr,\n    texture: \"images/allow_sewage.png\",\n    radius: 1.5,\n  };\n  // 创建管道\n  const { texture: tubeTexture0, mesh: pipe0 } = creatPipe(transparentConf);\n  const { texture: tubeTexture1, mesh: pipe1 } = creatPipe(conf);\n  myExternalRenderer.scene.add(pipe0);\n  myExternalRenderer.scene.add(pipe1);\n  return { tubeTexture0, tubeTexture1 };\n  // return { tubeTexture1 };\n  /* // 尝试构建管中心平面\n  const stripGeo = new THREE.PlaneBufferGeometry(1.7, 10);\n  const stripMat = new THREE.MeshBasicMaterial({\n    map: texture,\n    opacity: 0.5,\n    side: THREE.DoubleSide,\n    depthWrite: false,\n    depthTest: false,\n    transparent: true,\n  });\n  stripMesh = new THREE.Mesh(stripGeo, stripMat);\n  myExternalRenderer.scene.add(stripMesh);\n  stripMesh.rotation.z = Math.PI * 0.5;\n  // stripMesh.rotation.y = Math.PI * 0.5;\n  stripMesh.rotation.x = Math.PI * 0.5;*/\n}\nfunction addGraphic(view) {\n  view.graphics.add(\n    new Graphic({\n      geometry: {\n        type: \"polyline\",\n        paths: pointsArr,\n        spatialReference: view.spatialReference,\n      },\n      symbol: {\n        type: \"simple-line\",\n        color: [255, 90, 141],\n        width: 10,\n        cap: \"round\",\n        join: \"round\",\n      },\n    })\n  );\n}\n\n/**\n *  创建管线\n */\nfunction creatPipe(conf) {\n  const path = createPath(conf.points);\n  const geometry = new THREE.TubeGeometry(path, 3000, conf.radius, 5, false);\n  const textureLoader = new THREE.TextureLoader();\n  let material;\n  if (conf.texture !== undefined) {\n    texture = textureLoader.load(conf.texture);\n    // texture = new THREE.TextureLoader().load(conf.texture, () => {\n    texture.needsUpdate = true;\n\n    // texture = new THREE.CanvasTexture(getTextCanvas(\"➯ ➮ ➯\")); // 文本贴图\n    // 设置阵列模式为 RepeatWrapping\n    texture.wrapS = THREE.RepeatWrapping;\n    texture.wrapT = THREE.RepeatWrapping;\n    // 设置x方向的偏移(沿着管道路径方向)，y方向默认1\n    // 等价texture.repeat= new THREE.Vector2(3,1)\n    texture.repeat.set(150, 1);\n    texture.offset.y = 0.5;\n    texture.rotation = Math.PI; // 旋转贴图方向\n    // 模拟管线运动动画，将两个素材图按比例合并，然后生成贴图texture\n    material = new THREE.MeshPhongMaterial({\n      map: texture,\n      transparent: true,\n      // alphaTest: 0.01, // 解决了贴图的透明部分显示为黑色\n      side: THREE.DoubleSide, // 双面渲染，不留阴影。\n    });\n    // });\n    //尝试使用文本贴图\n    /* material = new THREE.MeshBasicMaterial({\n      map: texture,\n      transparent: true,\n      // opacity: 0.1,\n      color: conf.color,\n    });*/\n  } else {\n    material = new THREE.MeshPhongMaterial({\n      color: conf.color,\n      transparent: true,\n      opacity: conf.opacity,\n    });\n    material.depthWrite = false;\n  }\n  const mesh = new THREE.Mesh(geometry, material);\n  // mesh.rotation.x = Math.PI * 0.5; //修改箭头在管壁的位置\n  mesh.receiveShadow = false;\n  mesh.castShadow = false;\n  return { texture, mesh };\n}\n/**\n * 将经纬度坐标转为 渲染系坐标后生成管线的渲染坐标点\n * @param pointsArr\n * @returns {CatmullRomCurve3}\n */\nfunction createPath(pointsArr) {\n  let newArr = [];\n  pointsArr.map((e) => newArr.push(pointTransform(...e)));\n  let points = newArr.map((point) => new THREE.Vector3(...point));\n  // 利用CatmullRomCurve3 创建路径，不过是平滑的三维样条曲线\n  return new THREE.CatmullRomCurve3(points);\n}\n/*function animate(time) {\n  time *= 0.0009;\n  // texture.offset.x = -(time * 1) % 1; // 贴图运动速度\n  // texture.needsUpdate = true;\n  // // const elapsedTime = clock.getElapsedTime();\n  requestAnimationFrame(animate);\n  renderer.render(scene, camera);\n}\nfunction resize() {\n  const sizes = {\n    width: window.innerWidth,\n    height: window.innerHeight,\n  };\n  window.addEventListener(\"resize\", () => {\n    // Update sizes\n    sizes.width = window.innerWidth;\n    sizes.height = window.innerHeight;\n    // Update camera\n    camera.aspect = sizes.width / sizes.height;\n    camera.updateProjectionMatrix();\n    // Update renderer\n    renderer.setSize(sizes.width, sizes.height);\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n  });\n}*/\n/**\n * 使用圆标记了管线的起始点\n * @param Point\n */\nfunction createCircle(Point) {\n  let endPoint = pointTransform(...Point);\n  let radius = scene.userData.viewResolution * 0.001;\n  // 生成圆环\n  const circleGeometry = new THREE.CircleGeometry(radius, 32);\n  const ringMaterial = new THREE.MeshBasicMaterial({\n    color: new THREE.Color(color),\n    side: THREE.DoubleSide,\n    transparent: true, // 定义此材质是否透明\n    opacity: 1,\n  });\n  const circleMesh = new THREE.Mesh(circleGeometry, ringMaterial);\n  // 设置终点圆圈的位置\n  circleMesh.position.set(endPoint[0], endPoint[1], endPoint[2]);\n  // 计算调整姿态的角度\n  let deltaX = Math.atan(endPoint[2] / endPoint[1]);\n  let deltaZ = Math.atan(\n    endPoint[0] /\n      Math.sqrt(endPoint[1] * endPoint[1] + endPoint[2] * endPoint[2])\n  );\n  // // 如果 y < 0 需要加上180°\n  if (endPoint[1] < 0) {\n    deltaX += Math.PI;\n  } else {\n    deltaZ *= -1;\n  }\n  // 调整圆圈姿态\n  circleMesh.rotation.x = deltaX;\n  circleMesh.rotation.z = deltaZ;\n  circleMesh.rotateOnAxis(new THREE.Vector3(1, 0, 0), Math.PI / 2); // 再沿X轴旋转90°\n  // circleMesh.visible = false;\n  scene.add(circleMesh);\n}\n\n/**\n * 创建文本贴图\n * @param text\n * @returns {HTMLCanvasElement}\n */\nfunction getTextCanvas(text) {\n  let width = 512,\n    height = 256;\n  let canvas = document.createElement(\"canvas\");\n  canvas.width = width;\n  canvas.height = height;\n  let ctx = canvas.getContext(\"2d\");\n  // ctx.fillStyle = \"rgb(105,181,201)\";\n  // ctx.fillStyle = \"rgba(76,180,206,0.1)\";\n  ctx.fillStyle = \"rgba(212,35,35,0.1)\";\n  ctx.fillRect(0, 0, width, height); //管透明度\n  ctx.font = 50 + 'px \"sans-serif';\n  ctx.fillStyle = \"rgb(16,239,121)\";\n  ctx.textAlign = \"center\";\n  ctx.textBaseline = \"middle\";\n  ctx.fillText(text, width / 2, height / 2);\n  return canvas;\n}\n\nfunction getYsdData() {\n  let arr = [];\n  fetch(\"static/json/wsgsy0216.json\")\n    .then((res) => res.json())\n    .then((data) => {\n      data.features = data.features.sort(\n        (a, b) => b.attributes.sx - a.attributes.sx\n      );\n      data.features.map((item) => {\n        arr.push([item.geometry.x, item.geometry.y, -1.5]);\n      });\n      pointsArr = arr;\n    })\n    .then(() => {\n      initArcMap();\n    })\n    .catch((e) => {\n      console.log(e.message);\n    });\n  return arr;\n}\n</script>\n\n<style scoped>\n#sceneContainer {\n  width: 100%;\n  height: 100%;\n}\n#sceneContainer,\ncanvas {\n  position: fixed;\n  top: 0;\n  left: 0;\n  outline: none;\n}\n</style>\n"],"names":["esriConfig","Basemap","TileLayer","Map","SceneView","SceneLayer","THREE.WebGLRenderer","THREE.Scene","THREE.PerspectiveCamera","THREE.AmbientLight","THREE.PointLight","THREE.Vector3","externalRenderers.requestRender","externalRenderers.add","externalRenderers.renderCoordinateTransformAt","THREE.TubeGeometry","THREE.TextureLoader","THREE.RepeatWrapping","THREE.MeshPhongMaterial","THREE.DoubleSide","THREE.Mesh","THREE.CatmullRomCurve3"],"mappings":"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"}