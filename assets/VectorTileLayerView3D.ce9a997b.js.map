{"version":3,"file":"VectorTileLayerView3D.ce9a997b.js","sources":["../../node_modules/@arcgis/core/views/2d/engine/vectorTiles/RectangleBinPack.js","../../node_modules/@arcgis/core/views/2d/engine/vectorTiles/GlyphMosaic.js","../../node_modules/@arcgis/core/views/2d/engine/vectorTiles/GlyphSource.js","../../node_modules/@arcgis/core/views/2d/engine/vectorTiles/SpriteMosaic.js","../../node_modules/@arcgis/core/views/2d/engine/vectorTiles/decluttering/debugging.js","../../node_modules/@arcgis/core/views/2d/engine/vectorTiles/TileHandler.js","../../node_modules/@arcgis/core/views/2d/engine/vectorTiles/decluttering/jobs.js","../../node_modules/@arcgis/core/views/2d/engine/vectorTiles/decluttering/SymbolDeclutterer.js","../../node_modules/@arcgis/core/views/2d/engine/vectorTiles/decluttering/SymbolRepository.js","../../node_modules/@arcgis/core/views/2d/engine/vectorTiles/decluttering/jobsUtil.js","../../node_modules/@arcgis/core/views/2d/engine/vectorTiles/TileHandler3D.js","../../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrush.js","../../node_modules/@arcgis/core/views/2d/engine/flow/BrushFlow.js","../../node_modules/@arcgis/core/views/webgl/ShaderCompiler.js","../../node_modules/@arcgis/core/views/2d/engine/webgl/shaders/sources/shaderRepository.js","../../node_modules/@arcgis/core/views/2d/engine/webgl/shaders/sources/resolver.js","../../node_modules/@arcgis/core/views/2d/engine/webgl/shaders/BackgroundPrograms.js","../../node_modules/@arcgis/core/views/webgl/programUtils.js","../../node_modules/@arcgis/core/views/2d/engine/webgl/shaders/TileInfoPrograms.js","../../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLBackground.js","../../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLCircle.js","../../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLFill.js","../../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLLine.js","../../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLSymbol.js","../../node_modules/@arcgis/core/views/2d/engine/brushes.js","../../node_modules/@arcgis/core/views/2d/engine/vectorTiles/shaders/sources/shaderRepository.js","../../node_modules/@arcgis/core/views/2d/engine/vectorTiles/shaders/sources/resolver.js","../../node_modules/@arcgis/core/views/2d/engine/vectorTiles/shaders/Programs.js","../../node_modules/@arcgis/core/views/2d/engine/vectorTiles/shaders/VTLMaterialManager.js","../../node_modules/@arcgis/core/views/2d/engine/vectorTiles/VTLPainter3D.js","../../node_modules/@arcgis/core/views/3d/layers/VectorTileLayerView3D.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport h from\"../webgl/Rect.js\";class e{constructor(e,t){this._width=0,this._height=0,this._free=[],this._width=e,this._height=t,this._free.push(new h(0,0,e,t))}get width(){return this._width}get height(){return this._height}allocate(e,t){if(e>this._width||t>this._height)return new h;let i=null,s=-1;for(let h=0;h<this._free.length;++h){const w=this._free[h];e<=w.width&&t<=w.height&&(null===i||w.y<=i.y&&w.x<=i.x)&&(i=w,s=h)}return null===i?new h:(this._free.splice(s,1),i.width<i.height?(i.width>e&&this._free.push(new h(i.x+e,i.y,i.width-e,t)),i.height>t&&this._free.push(new h(i.x,i.y+t,i.width,i.height-t))):(i.width>e&&this._free.push(new h(i.x+e,i.y,i.width-e,i.height)),i.height>t&&this._free.push(new h(i.x,i.y+t,e,i.height-t))),new h(i.x,i.y,e,t))}release(h){for(let e=0;e<this._free.length;++e){const t=this._free[e];if(t.y===h.y&&t.height===h.height&&t.x+t.width===h.x)t.width+=h.width;else if(t.x===h.x&&t.width===h.width&&t.y+t.height===h.y)t.height+=h.height;else if(h.y===t.y&&h.height===t.height&&h.x+h.width===t.x)t.x=h.x,t.width+=h.width;else{if(h.x!==t.x||h.width!==t.width||h.y+h.height!==t.y)continue;t.y=h.y,t.height+=h.height}this._free.splice(e,1),this.release(h)}this._free.push(h)}}export{e as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport\"../../../webgl/BufferObject.js\";import\"../../../webgl/FramebufferObject.js\";import\"../../../../core/has.js\";import\"../../../webgl/checkWebGLError.js\";import\"../../../webgl/enums.js\";import\"../../../../chunks/builtins.js\";import t from\"../../../webgl/Texture.js\";import\"../../../webgl/VertexArrayObject.js\";import e from\"./RectangleBinPack.js\";import i from\"../webgl/Rect.js\";class s{constructor(t,i,s){this.width=0,this.height=0,this._dirties=[],this._glyphData=[],this._currentPage=0,this._glyphIndex={},this._textures=[],this._rangePromises=new Map,this.width=t,this.height=i,this._glyphSource=s,this._binPack=new e(t-4,i-4),this._glyphData.push(new Uint8Array(t*i)),this._dirties.push(!0),this._textures.push(void 0)}getGlyphItems(t,s){const h=[],r=this._glyphSource,n=new Set,o=1/256;for(const e of s){const t=Math.floor(e*o);n.add(t)}const a=[];return n.forEach((e=>{if(e<=256){const i=t+e;if(this._rangePromises.has(i))a.push(this._rangePromises.get(i));else{const s=r.getRange(t,e).then((()=>{this._rangePromises.delete(i)}),(()=>{this._rangePromises.delete(i)}));this._rangePromises.set(i,s),a.push(s)}}})),Promise.all(a).then((()=>{let n=this._glyphIndex[t];n||(n={},this._glyphIndex[t]=n);for(const o of s){const s=n[o];if(s){h[o]={sdf:!0,rect:s.rect,metrics:s.metrics,page:s.page,code:o};continue}const a=r.getGlyph(t,o);if(!a||!a.metrics)continue;const c=a.metrics;let l;if(0===c.width)l=new i(0,0,0,0);else{const t=3,i=c.width+2*t,s=c.height+2*t;let h=i%4?4-i%4:4,r=s%4?4-s%4:4;1===h&&(h=5),1===r&&(r=5),l=this._binPack.allocate(i+h,s+r),l.isEmpty&&(this._dirties[this._currentPage]||(this._glyphData[this._currentPage]=null),this._currentPage=this._glyphData.length,this._glyphData.push(new Uint8Array(this.width*this.height)),this._dirties.push(!0),this._textures.push(void 0),this._binPack=new e(this.width-4,this.height-4),l=this._binPack.allocate(i+h,s+r));const n=this._glyphData[this._currentPage],o=a.bitmap;let g,p;if(o)for(let e=0;e<s;e++){g=i*e,p=this.width*(l.y+e+1)+l.x;for(let t=0;t<i;t++)n[p+t+1]=o[g+t]}}n[o]={rect:l,metrics:c,tileIDs:null,page:this._currentPage},h[o]={sdf:!0,rect:l,metrics:c,page:this._currentPage,code:o},this._dirties[this._currentPage]=!0}return h}))}removeGlyphs(t){for(const e in this._glyphIndex){const i=this._glyphIndex[e];if(!i)continue;let s;for(const e in i)if(s=i[e],s.tileIDs.delete(t),0===s.tileIDs.size){const t=this._glyphData[s.page],h=s.rect;let r,n;for(let e=0;e<h.height;e++)for(r=this.width*(h.y+e)+h.x,n=0;n<h.width;n++)t[r+n]=0;delete i[e],this._dirties[s.page]=!0}}}bind(e,i,s,h=0){this._textures[s]||(this._textures[s]=new t(e,{pixelFormat:6406,dataType:5121,width:this.width,height:this.height},new Uint8Array(this.width*this.height)));const r=this._textures[s];r.setSamplingMode(i),this._dirties[s]&&r.setData(this._glyphData[s]),e.bindTexture(r,h),this._dirties[s]=!1}dispose(){this._binPack=null;for(const t of this._textures)t&&t.dispose();this._textures.length=0}}export{s as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport t from\"../../../../request.js\";import e from\"../../../../core/pbf.js\";class s{constructor(t){if(this._metrics=[],this._bitmaps=[],t)for(;t.next();)switch(t.tag()){case 1:{const e=t.getMessage();for(;e.next();)switch(e.tag()){case 3:{const t=e.getMessage();let s,a,r,n,i,c,g;for(;t.next();)switch(t.tag()){case 1:s=t.getUInt32();break;case 2:a=t.getBytes();break;case 3:r=t.getUInt32();break;case 4:n=t.getUInt32();break;case 5:i=t.getSInt32();break;case 6:c=t.getSInt32();break;case 7:g=t.getUInt32();break;default:t.skip()}t.release(),s&&(this._metrics[s]={width:r,height:n,left:i,top:c,advance:g},this._bitmaps[s]=a);break}default:e.skip()}e.release();break}default:t.skip()}}getMetrics(t){return this._metrics[t]}getBitmap(t){return this._bitmaps[t]}}class a{constructor(){this._ranges=[]}getRange(t){return this._ranges[t]}addRange(t,e){this._ranges[t]=e}}class r{constructor(t){this._glyphInfo={},this._baseURL=t}getRange(a,r){const n=this._getFontStack(a);if(n.getRange(r))return Promise.resolve();const i=256*r,c=i+255,g=this._baseURL.replace(\"{fontstack}\",a).replace(\"{range}\",i+\"-\"+c);return t(g,{responseType:\"array-buffer\"}).then((t=>{n.addRange(r,new s(new e(new Uint8Array(t.data),new DataView(t.data))))})).catch((()=>{n.addRange(r,new s)}))}getGlyph(t,e){const s=this._getFontStack(t);if(!s)return;const a=Math.floor(e/256);if(a>256)return;const r=s.getRange(a);return r?{metrics:r.getMetrics(e),bitmap:r.getBitmap(e)}:void 0}_getFontStack(t){let e=this._glyphInfo[t];return e||(e=this._glyphInfo[t]=new a),e}}export{r as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport{SymbolHelper as t}from\"../../../../symbols/cim/CIMSymbolHelper.js\";import\"../../../webgl/BufferObject.js\";import\"../../../webgl/FramebufferObject.js\";import\"../../../../core/has.js\";import\"../../../webgl/checkWebGLError.js\";import\"../../../webgl/enums.js\";import\"../../../../chunks/builtins.js\";import i from\"../../../webgl/Texture.js\";import\"../../../webgl/VertexArrayObject.js\";import e from\"./RectangleBinPack.js\";import s from\"../webgl/Rect.js\";const h=\"dasharray-\";class r{constructor(t,i,s=0){this._size=[],this._mosaicsData=[],this._textures=[],this._dirties=[],this._maxItemSize=0,this._currentPage=0,this._pageWidth=0,this._pageHeight=0,this._mosaicRects={},this.pixelRatio=1,(t<=0||i<=0)&&console.error(\"Sprites mosaic defaultWidth and defaultHeight must be greater than zero!\"),this._pageWidth=t,this._pageHeight=i,s>0&&(this._maxItemSize=s),this._binPack=new e(t-4,i-4)}dispose(){this._binPack=null,this._mosaicRects={};for(const t of this._textures)t&&t.dispose();this._textures.length=0}getWidth(t){return t>=this._size.length?-1:this._size[t][0]}getHeight(t){return t>=this._size.length?-1:this._size[t][1]}getPageSize(t){return t>=this._size.length?null:this._size[t]}setSpriteSource(t){if(this.dispose(),this.pixelRatio=t.devicePixelRatio,0===this._mosaicsData.length){this._binPack=new e(this._pageWidth-4,this._pageHeight-4);const t=Math.floor(this._pageWidth),i=Math.floor(this._pageHeight),s=new Uint32Array(t*i);this._mosaicsData[0]=s,this._dirties.push(!0),this._size.push([this._pageWidth,this._pageHeight]),this._textures.push(void 0)}this._sprites=t}getSpriteItem(t,i=!1){let e,s,r=this._mosaicRects[t];if(r)return r;if(!this._sprites||\"loaded\"!==this._sprites.loadStatus)return null;if(t&&t.startsWith(h)?([e,s]=this._rasterizeDash(t),i=!0):e=this._sprites.getSpriteInfo(t),!e||!e.width||!e.height||e.width<0||e.height<0)return null;const a=e.width,o=e.height,[n,_,g]=this._allocateImage(a,o);return n.width<=0?null:(this._copy(n,e,_,g,i,s),r={rect:n,width:a,height:o,sdf:e.sdf,simplePattern:!1,pixelRatio:e.pixelRatio,page:_},this._mosaicRects[t]=r,r)}getSpriteItems(t){const i={};for(const e of t)i[e.name]=this.getSpriteItem(e.name,e.repeat);return i}getMosaicItemPosition(t,i){const e=this.getSpriteItem(t,i),s=e&&e.rect;if(!s)return null;s.width=e.width,s.height=e.height;const h=e.width,r=e.height,a=2;return{tl:[s.x+a,s.y+a],br:[s.x+a+h,s.y+a+r],page:e.page}}bind(t,e,s=0,h=0){this._textures[s]||(this._textures[s]=new i(t,{pixelFormat:6408,dataType:5121,wrapMode:33071,width:this._size[s][0],height:this._size[s][1]},new Uint8Array(this._mosaicsData[s].buffer)));const r=this._textures[s];r.setSamplingMode(e),this._dirties[s]&&r.setData(new Uint8Array(this._mosaicsData[s].buffer)),t.bindTexture(r,h),this._dirties[s]=!1}static _copyBits(t,i,e,s,h,r,a,o,n,_,g){let c=s*i+e,p=o*r+a;if(g){p-=r;for(let a=-1;a<=_;a++,c=((a+_)%_+s)*i+e,p+=r)for(let i=-1;i<=n;i++)h[p+i]=t[c+(i+n)%n]}else for(let l=0;l<_;l++){for(let i=0;i<n;i++)h[p+i]=t[c+i];c+=i,p+=r}}_copy(t,i,e,s,h,a){if(!this._sprites||\"loaded\"!==this._sprites.loadStatus||e>=this._mosaicsData.length)return;const o=new Uint32Array(a?a.buffer:this._sprites.image.buffer),n=this._mosaicsData[e];n&&o||console.error(\"Source or target images are uninitialized!\");const _=2,g=a?i.width:this._sprites.width;r._copyBits(o,g,i.x,i.y,n,s[0],t.x+_,t.y+_,i.width,i.height,h),this._dirties[e]=!0}_allocateImage(t,i){t+=2,i+=2;const h=Math.max(t,i);if(this._maxItemSize&&this._maxItemSize<h){const e=new s(0,0,t,i);return this._mosaicsData.push(new Uint32Array(t*i)),this._dirties.push(!0),this._size.push([t,i]),this._textures.push(void 0),[e,this._mosaicsData.length-1,[t,i]]}let r=t%4?4-t%4:4,a=i%4?4-i%4:4;1===r&&(r=5),1===a&&(a=5);const o=this._binPack.allocate(t+r,i+a);return o.width<=0?(this._dirties[this._currentPage]||(this._mosaicsData[this._currentPage]=null),this._currentPage=this._mosaicsData.length,this._mosaicsData.push(new Uint32Array(this._pageWidth*this._pageHeight)),this._dirties.push(!0),this._size.push([this._pageWidth,this._pageHeight]),this._textures.push(void 0),this._binPack=new e(this._pageWidth-4,this._pageHeight-4),this._allocateImage(t,i)):[o,this._currentPage,[this._pageWidth,this._pageHeight]]}_rasterizeDash(i){const e=/\\[(.*?)\\]/,s=i.match(e);if(!s)return null;const h=s[1].split(\",\").map(Number),r=i.slice(i.lastIndexOf(\"-\")+1),[a,o,n]=t.rasterizeDash(h,r);return[{x:0,y:0,width:o,height:n,sdf:!0,pixelRatio:1},new Uint8Array(a.buffer)]}}export{r as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nfunction t(t,e,n,o,l,i){t.fillStyle=e,t.fillRect(n,o,l,i)}function e(t,e,n,o,l,i){t.strokeStyle=e,t.strokeRect(n,o,l,i)}function n(t,e){t.strokeStyle=\"black\";const n=e.cellSize,o=e.rows,l=e.columns;for(let i=0;i<o;i++){const o=e.cells[i],r=i*n,s=(i+1)*n;for(let e=0;e<l;e++){const l=o[e],i=e*n,d=(e+1)*n;t.strokeRect(i,r,d-i,s-r),t.fillText(`cells:${l.length}`,i+4,r+12)}}}function o(n,o){const l=window.COLLISION_XRAY;for(let i=0;i<o.length;++i){const r=!o[i].unique.show;if(l||!r)for(const s of o[i].colliders){if(!s.enabled)continue;const d=!o[i].unique.parts[s.partIndex].show;if(!l&&d)continue;const a=s.xScreen,c=s.yScreen,m=s.dxScreen,h=s.dyScreen;n.globalAlpha=r||d?.2:1,t(n,\"green\",a-1,c-1,3,3),e(n,\"red\",a+m,c+h,s.width,s.height),t(n,\"blue\",a+m-1,c+h-1,3,3),n.globalAlpha=1}}}function l(t,e,n){if(!window.PERFORMANCE_RECORDING_STORAGE)return;const o=window.PERFORMANCE_RECORDING_STORAGE;o.perf=o.perf||{};const l=o.perf;l[t]=l[t]||{start:null,time:0,min:void 0,max:void 0,samples:[],unit:n},l[t].time+=e,l[t].samples.push(e),(null==l[t].min||e<l[t].min)&&(l[t].min=e),(null==l[t].max||e>l[t].max)&&(l[t].max=e)}function i(){if(!window.PERFORMANCE_RECORDING_STORAGE)return;window.PERFORMANCE_RECORDING_STORAGE.perf={}}function r(t,e){return`${Math.round(10*t)/10}${e}`}function s(t){if(!window.PERFORMANCE_RECORDING_STORAGE){const t=document.createElement(\"div\");return t.innerHTML=\"No recorded data is present because performance recording is disabled.\",t}const e=document.createElement(\"div\");let n=\"\";const o=window.PERFORMANCE_RECORDING_STORAGE.perf,l=50;n+='<table style=\"border-collapse: collapse;\">',n+=`<tr style=\"text-weight: bold; border-bottom: 1px solid \"${t}\";\"><td>Name</td><td>Total</td><td>Runs</td><td>Average</td><td>Min</td><td>Distribution</td><td>Max</td><td>Histogram (${l} bins)</td></tr>`;const i=[];for(const r in o)i.push({name:r,value:o[r].time/o[r].samples.length,sortkey:o[r].max});i.sort(((t,e)=>-(t.sortkey-e.sortkey)));const s=i.map((t=>t.name));for(const m of s)n+=\"<tr>\",n+=`<td>${m}</td>`,n+=`<td>${r(o[m].time,o[m].unit)}</td>`,n+=`<td>${o[m].samples.length}</td>`,n+=`<td>${r(o[m].time/o[m].samples.length,o[m].unit)}</td>`,n+=`<td style=\"text-align: right;\">${r(o[m].min,o[m].unit)}</td>`,n+=\"<td data-distribution='1'></td>\",n+=`<td>${r(o[m].max,o[m].unit)}</td>`,n+=\"<td data-histogram='1'></td>\",n+=\"</tr>\";n+=\"<table>\",e.innerHTML=n;const d=e.querySelectorAll(\"td[data-distribution='1']\"),a=e.querySelectorAll(\"td[data-histogram='1']\");for(let r=0;r<d.length;r++){let e=d[r];{const n=document.createElement(\"canvas\");n.height=10,n.width=100;const l=n.getContext(\"2d\");if(l.strokeStyle=t,l.beginPath(),l.moveTo(0,5),l.lineTo(100,5),o[s[r]].max>o[s[r]].min+.001)for(const t of o[s[r]].samples){const e=(t-o[s[r]].min)/(o[s[r]].max-o[s[r]].min);l.moveTo(100*e,3),l.lineTo(100*e,7)}l.stroke(),l.strokeRect((i[r].value-o[s[r]].min)/(o[s[r]].max-o[s[r]].min)*100-2,0,4,9),e.appendChild(n)}e=a[r];{const n=new Array(l);for(let t=0;t<n.length;t++)n[t]=0;for(const t of o[s[r]].samples){const e=(t-o[s[r]].min)/(o[s[r]].max-o[s[r]].min);n[1===e?n.length-1:Math.floor(e*n.length)]++}const i=document.createElement(\"canvas\");i.height=30,i.width=120;const d=i.getContext(\"2d\");d.strokeStyle=t,d.fillStyle=t;let a=0;for(let t=0;t<n.length;t++){const e=n[t];a=Math.max(a,e)}for(let t=0;t<n.length;t++){const e=n[t];d.fillRect(t*i.width/n.length,i.height*(1-e/a),i.width/n.length,i.height*(e/a))}d.beginPath(),d.moveTo(0,i.height),d.lineTo(i.width,i.height),d.stroke(),e.appendChild(i)}}const c=e.querySelectorAll(\"td\");for(let r=0;r<c.length;r++)c[r].style.padding=\"5px\";return e}export{o as drawColliders,n as drawGridIndex,l as perfAdd,i as perfClear,s as perfElement};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport e from\"../../../../request.js\";import t from\"../../../../core/has.js\";import{isAbortError as s,eachAlways as r}from\"../../../../core/promiseUtils.js\";import{addQueryParameters as i}from\"../../../../core/urlUtils.js\";import{open as o}from\"../../../../core/workers/workers.js\";import a from\"./GlyphMosaic.js\";import l from\"./GlyphSource.js\";import n from\"./SpriteMosaic.js\";import{perfAdd as c}from\"./decluttering/debugging.js\";import h from\"../../tiling/TileKey.js\";class u{constructor(e,t,s){this._layer=e,this._styleRepository=t,this.devicePixelRatio=s,this._spriteMosaic=null,this._glyphMosaic=null,this._connection=null}destroy(){this._connection&&(this._connection.close(),this._connection=null),this._styleRepository=null,this._layer=null,this._spriteMosaic&&(this._spriteMosaic=null),this._glyphMosaic&&(this._glyphMosaic=null)}get spriteMosaic(){return this._spriteSourcePromise.then((()=>this._spriteMosaic))}get glyphMosaic(){return this._glyphMosaic}async start(e){this._spriteSourcePromise=this._layer.loadSpriteSource(this.devicePixelRatio,e),this._spriteSourcePromise.then((e=>{this._spriteMosaic=new n(1024,1024,250),this._spriteMosaic.setSpriteSource(e)}));const s=new l(this._layer.currentStyleInfo.glyphsUrl?i(this._layer.currentStyleInfo.glyphsUrl,{...this._layer.customParameters,token:this._layer.apiKey}):null);this._glyphMosaic=new a(1024,1024,s),this._broadcastPromise=o(\"WorkerTileHandler\",{client:this,schedule:e.schedule,signal:e.signal}).then((s=>(this._connection=s,Promise.all(this._connection.broadcast(\"setStyle\",{style:this._layer.currentStyleInfo.style,vectorTileLayerMaxBuffers:t(\"vectortilelayer-max-buffers\")},e)))))}async updateStyle(e){return await this._broadcastPromise,this._broadcastPromise=Promise.all(this._connection.broadcast(\"updateStyle\",e)),this._broadcastPromise}async setStyle(e,s){await this._broadcastPromise,this._styleRepository=e,this._spriteSourcePromise=this._layer.loadSpriteSource(this.devicePixelRatio,null),this._spriteSourcePromise.then((e=>{this._spriteMosaic=new n(1024,1024,250),this._spriteMosaic.setSpriteSource(e)}));const r=new l(this._layer.currentStyleInfo.glyphsUrl?i(this._layer.currentStyleInfo.glyphsUrl,{...this._layer.customParameters,token:this._layer.apiKey}):null);return this._glyphMosaic=new a(1024,1024,r),this._broadcastPromise=Promise.all(this._connection.broadcast(\"setStyle\",{style:s,vectorTileLayerMaxBuffers:t(\"vectortilelayer-max-buffers\")})),this._broadcastPromise}fetchTileData(e,t){return this._getRefKeys(e,t).then((e=>{const s=this._layer.sourceNameToSource,r=[];for(const t in s)r.push(t);return this._getSourcesData(r,e,t)}))}parseTileData(e,t){const s=e&&e.data;if(!s)return Promise.resolve(null);const{sourceName2DataAndRefKey:r,transferList:i}=s;return 0===Object.keys(r).length?Promise.resolve(null):this._broadcastPromise.then((()=>this._connection.getAvailableClient().then((s=>s.invoke(\"createTileAndParse\",{key:e.key.id,sourceName2DataAndRefKey:r,styleLayerUIDs:e.styleLayerUIDs},{...t,transferList:i})))))}async getSprites(e){return await this._spriteSourcePromise,this._spriteMosaic.getSpriteItems(e)}getGlyphs(e){return this._glyphMosaic.getGlyphItems(e.font,e.codePoints)}perfReport({key:e,milliseconds:t}){c(e,t,\"ms\")}async _getTilePayload(e,t,r){const i=h.pool.acquire(e.id),o=this._layer.sourceNameToSource[t].getSourceTileUrl(i.level,i.row,i.col);h.pool.release(i);try{return{protobuff:await this.request(o,r),sourceName:t}}catch(a){if(s(a))throw a;return{protobuff:null,sourceName:t}}}request(t,s){return e(t,{responseType:\"array-buffer\",...s}).then((({data:e})=>e))}_getRefKeys(e,t){const s=this._layer.sourceNameToSource,i=new Array;for(const r in s){const o=s[r].getRefKey(e,t);i.push(o)}return r(i)}_getSourcesData(e,t,s){const i=[];for(let r=0;r<t.length;r++)if(null==t[r].value||null==e[r])i.push(null);else{const o=this._getTilePayload(t[r].value,e[r],s);i.push(o)}return r(i).then((e=>{const s={},r=[];for(let i=0;i<e.length;i++)if(e[i].value&&e[i].value&&e[i].value.protobuff&&e[i].value.protobuff.byteLength>0){const o=t[i].value.id;s[e[i].value.sourceName]={refKey:o,protobuff:e[i].value.protobuff},r.push(e[i].value.protobuff)}return{sourceName2DataAndRefKey:s,transferList:r}}))}}export{u as TileHandler};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport{a as e}from\"../../../../../chunks/mat3f32.js\";import{COLLISION_GRID_CELL_SIZE as t}from\"./config.js\";import{GridIndex as n}from\"./util.js\";function o(e,t,n,o,r,s){const{iconRotationAlignment:i,textRotationAlignment:l,iconTranslate:a,iconTranslateAnchor:c,textTranslate:h,textTranslateAnchor:u}=o;let d=0;for(const y of e.colliders){const[e,o]=0===y.partIndex?a:h,x=0===y.partIndex?c:u,g=y.minLod<=s&&s<=y.maxLod;d+=g?0:1,y.enabled=g,y.xScreen=y.xTile*r[0]+y.yTile*r[3]+r[6],y.yScreen=y.xTile*r[1]+y.yTile*r[4]+r[7],0===x?(y.xScreen+=n*e-t*o,y.yScreen+=t*e+n*o):(y.xScreen+=e,y.yScreen+=o),1===(0===y.partIndex?i:l)?(y.dxScreen=y.dxPixels,y.dyScreen=y.dyPixels):(y.dxScreen=n*(y.dxPixels+y.width/2)-t*(y.dyPixels+y.height/2)-y.width/2,y.dyScreen=t*(y.dxPixels+y.width/2)+n*(y.dyPixels+y.height/2)-y.height/2)}e.colliders.length>0&&d===e.colliders.length&&(e.unique.show=!1)}class r{constructor(o,r,s,i,l,a){this._symbols=o,this._styleRepository=i,this._zoom=l,this._currentLayerCursor=0,this._currentSymbolCursor=0,this._styleProps=new Map,this._allNeededMatrices=new Map,this._gridIndex=new n(r,s,t),this._si=Math.sin(Math.PI*a/180),this._co=Math.cos(Math.PI*a/180);for(const t of o)for(const n of t.symbols)this._allNeededMatrices.has(n.tile)||this._allNeededMatrices.set(n.tile,e(n.tile.transforms.tileUnitsToPixels))}work(e){const t=this._gridIndex;function n(e){const n=e.xScreen+e.dxScreen,o=e.yScreen+e.dyScreen,r=n+e.width,s=o+e.height,[i,l,a,c]=t.getCellSpan(n,o,r,s);for(let h=l;h<=c;h++)for(let e=i;e<=a;e++){const i=t.cells[h][e];for(const e of i){const t=e.xScreen+e.dxScreen,i=e.yScreen+e.dyScreen,l=t+e.width,a=i+e.height;if(!(r<t||n>l||s<i||o>a))return!0}}return!1}const r=performance.now();for(;this._currentLayerCursor<this._symbols.length;this._currentLayerCursor++,this._currentSymbolCursor=0){const t=this._symbols[this._currentLayerCursor],s=this._getProperties(t.styleLayerUID);for(;this._currentSymbolCursor<t.symbols.length;this._currentSymbolCursor++){if(this._currentSymbolCursor%100==99&&performance.now()-r>e)return!1;const i=t.symbols[this._currentSymbolCursor];if(!i.unique.show)continue;o(i,this._si,this._co,s,this._allNeededMatrices.get(i.tile),this._zoom);const l=i.unique;if(!l.show)continue;const{iconAllowOverlap:a,iconIgnorePlacement:c,textAllowOverlap:h,textIgnorePlacement:u}=s;for(const e of i.colliders){if(!e.enabled)continue;const t=l.parts[e.partIndex];if(!t.show)continue;!(e.partIndex?h:a)&&n(e)&&(e.hard?l.show=!1:t.show=!1)}if(l.show)for(const e of i.colliders){if(!e.enabled)continue;if(e.partIndex?u:c)continue;if(!l.parts[e.partIndex].show)continue;const t=e.xScreen+e.dxScreen,n=e.yScreen+e.dyScreen,o=t+e.width,r=n+e.height,[s,i,a,h]=this._gridIndex.getCellSpan(t,n,o,r);for(let l=i;l<=h;l++)for(let t=s;t<=a;t++){this._gridIndex.cells[l][t].push(e)}}}}return!0}_getProperties(e){const t=this._styleProps.get(e);if(t)return t;const n=this._zoom,o=this._styleRepository.getStyleLayerByUID(e),r=0!==o.getLayoutValue(\"symbol-placement\",n);let s=o.getLayoutValue(\"icon-rotation-alignment\",n);2===s&&(s=r?0:1);let i=o.getLayoutValue(\"text-rotation-alignment\",n);2===i&&(i=r?0:1);const l=o.getPaintValue(\"icon-translate\",n),a=o.getPaintValue(\"icon-translate-anchor\",n),c=o.getPaintValue(\"text-translate\",n),h=o.getPaintValue(\"text-translate-anchor\",n),u={iconAllowOverlap:o.getLayoutValue(\"icon-allow-overlap\",n),iconIgnorePlacement:o.getLayoutValue(\"icon-ignore-placement\",n),textAllowOverlap:o.getLayoutValue(\"text-allow-overlap\",n),textIgnorePlacement:o.getLayoutValue(\"text-ignore-placement\",n),iconRotationAlignment:s,textRotationAlignment:i,iconTranslateAnchor:a,iconTranslate:l,textTranslateAnchor:h,textTranslate:c};return this._styleProps.set(e,u),u}}export{r as CollisionJob};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport{isSome as o}from\"../../../../../core/maybe.js\";import{FADE_DURATION as e}from\"./config.js\";function t(o,e){if(o.priority-e.priority)return o.priority-e.priority;const t=o.tile.key,i=e.tile.key;return t.world-i.world?t.world-i.world:t.level-i.level?t.level-i.level:t.row-i.row?t.row-i.row:t.col-i.col?t.col-i.col:o.xTile-e.xTile?o.xTile-e.xTile:o.yTile-e.yTile}class i{constructor(o,e,t,i,s,r){this._visibleTiles=o,this._symbolRepository=e,this._createCollisionJob=t,this._assignTileSymbolsOpacity=i,this._symbolLayerSorter=s,this._isLayerVisible=r,this._selectionJob=null,this._selectionJobCompleted=!1,this._collisionJob=null,this._collisionJobCompleted=!1,this._opacityJob=null,this._opacityJobCompleted=!1,this._running=!0}get running(){return this._running}setScreenSize(o,e){this._screenWidth===o&&this._screenHeight===e||this.restart(),this._screenWidth=o,this._screenHeight=e}restart(){this._selectionJob=null,this._selectionJobCompleted=!1,this._collisionJob=null,this._collisionJobCompleted=!1,this._opacityJob=null,this._opacityJobCompleted=!1,this._running=!0}continue(o){if(this._selectionJob||(this._selectionJob=this._createSelectionJob()),!this._selectionJobCompleted){const e=performance.now();if(!this._selectionJob.work(o))return!1;if(this._selectionJobCompleted=!0,0===(o=Math.max(0,o-(performance.now()-e))))return!1}if(this._collisionJob||(this._collisionJob=this._createCollisionJob(this._selectionJob.sortedSymbols,this._screenWidth,this._screenHeight)),!this._collisionJobCompleted){const e=performance.now();if(!this._collisionJob.work(o))return!1;if(this._collisionJobCompleted=!0,0===(o=Math.max(0,o-(performance.now()-e))))return!1}if(this._opacityJob||(this._opacityJob=this._createOpacityJob()),!this._opacityJobCompleted){const e=performance.now();if(!this._opacityJob.work(o))return!1;if(this._opacityJobCompleted=!0,0===(o=Math.max(0,o-(performance.now()-e))))return!1}return this._running=!1,!0}_createSelectionJob(){const o=this._symbolRepository.uniqueSymbols;for(let t=0;t<o.length;t++){const e=o[t];for(let o=0;o<e.uniqueSymbols.length;o++){const t=e.uniqueSymbols[o];for(const o of t.tileSymbols)o.selectedForRendering=!1}}const e=[];let i=0,s=0;const r=this._isLayerVisible;function n(n){let l;const c=performance.now();for(;s<o.length;s++,i=0){const t=o[s],h=t.styleLayerUID;if(!r(h)){e[s]||(e[s]={styleLayerUID:h,symbols:[]});continue}e[s]=e[s]||{styleLayerUID:h,symbols:[]};const a=e[s];for(;i<t.uniqueSymbols.length;i++){if(l=t.uniqueSymbols[i],i%100==99&&performance.now()-c>n)return!1;let o=null,e=!1,s=!1;for(const t of l.tileSymbols)if(!s||!e){const i=t.tile;(!o||i.isCoverage||i.neededForCoverage&&!e)&&(o=t,(i.neededForCoverage||i.isCoverage)&&(s=!0),i.isCoverage&&(e=!0))}if(o.selectedForRendering=!0,s){a.symbols.push(o),l.show=!0;for(const o of l.parts)o.show=!0}else l.show=!1}}for(const o of e)o.symbols.sort(t);return!0}const l=this._symbolLayerSorter;return{work:n,get sortedSymbols(){return e.sort(l)}}}_createOpacityJob(){const e=this._assignTileSymbolsOpacity,t=this._visibleTiles;let i=0;function r(o,t){const i=o.symbols;for(const[e,r]of i)s(r,t);e(o,t);for(const e of o.childrenTiles)r(e,t)}return{work(e){const s=performance.now();for(;i<t.length;i++){if(performance.now()-s>e)return!1;const n=t[i];if(o(n.parentTile))continue;r(n,performance.now())}return!0}}}}function s(o,t){for(const i of o){const o=i.unique;for(const i of o.parts){const s=i.targetOpacity>.5?1:-1;i.startOpacity+=s*((t-i.startTime)/e),i.startOpacity=Math.min(Math.max(i.startOpacity,0),1),i.startTime=t,i.targetOpacity=o.show&&i.show?1:0}}}export{i as SymbolDeclutterer};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport{isNone as e,isSome as s}from\"../../../../../core/maybe.js\";import{GridIndex as o,tileCoordChange as t}from\"./util.js\";const l=32,i=8,n=64;class r{constructor(e,s,o){this.tileCoordRange=e,this._visibleTiles=s,this._createUnique=o,this._tiles=new Map,this._uniqueSymbolsReferences=new Map}get uniqueSymbols(){return e(this._uniqueSymbolLayerArray)&&(this._uniqueSymbolLayerArray=this._createUniqueSymbolLayerArray()),this._uniqueSymbolLayerArray}add(e,s){this._uniqueSymbolLayerArray=null;let t=this._tiles.get(e.id);t||(t={symbols:new Map},this._tiles.set(e.id,t));const r=new Map;if(s)for(const o of s)t.symbols.has(o)&&(r.set(o,t.symbols.get(o)),t.symbols.delete(o));else for(const[o,l]of e.layerData)t.symbols.has(o)&&(r.set(o,t.symbols.get(o)),t.symbols.delete(o));this._removeSymbols(r);const y=e.symbols,a=new Map;for(const[f,c]of y){let e=c.length;if(e>=l){let s=this.tileCoordRange;do{s/=2,e/=4}while(e>i&&s>n);const l=new o(this.tileCoordRange,this.tileCoordRange,s);a.set(f,{flat:c,index:l}),t.symbols.set(f,{flat:c,index:l});for(const e of c)l.getCell(e.xTile,e.yTile).push(e)}else a.set(f,{flat:c}),t.symbols.set(f,{flat:c})}this._addSymbols(e.key,y)}deleteStyleLayers(e){this._uniqueSymbolLayerArray=null;for(const[s,o]of this._tiles){const t=new Map;for(const s of e)o.symbols.has(s)&&(t.set(s,o.symbols.get(s)),o.symbols.delete(s));this._removeSymbols(t),0===o.symbols.size&&this._tiles.delete(s)}}removeTile(e){this._uniqueSymbolLayerArray=null;const s=this._tiles.get(e.id);if(!s)return;const o=new Map;for(const[t,l]of e.symbols)s.symbols.has(t)&&(o.set(t,s.symbols.get(t)),s.symbols.delete(t));this._removeSymbols(o),0===s.symbols.size&&this._tiles.delete(e.id)}_removeSymbols(e){for(const[s,{flat:o}]of e)for(const e of o){const o=e.unique,t=o.tileSymbols,l=t.length-1;for(let s=0;s<l;s++)if(t[s]===e){t[s]=t[l];break}if(t.length=l,0===l){const e=this._uniqueSymbolsReferences.get(s);e.delete(o),0===e.size&&this._uniqueSymbolsReferences.delete(s)}e.unique=null}}_addSymbols(s,o){if(0===o.size)return;const t=this._visibleTiles;for(const e of t)e.parentTile||e.key.world!==s.world||e.key.level===s.level&&!e.key.equals(s)||this._matchSymbols(e,s,o);for(const[l,i]of o)for(const s of i)if(e(s.unique)){const e=this._createUnique();s.unique=e,e.tileSymbols.push(s);let o=this._uniqueSymbolsReferences.get(l);o||(o=new Set,this._uniqueSymbolsReferences.set(l,o)),o.add(e)}}_matchSymbols(e,o,l){if(e.key.level>o.level){const s=e.key.level-o.level;if(e.key.row>>s!==o.row||e.key.col>>s!==o.col)return}if(o.level>e.key.level){const s=o.level-e.key.level;if(o.row>>s!==e.key.row||o.col>>s!==e.key.col)return}if(o.equals(e.key)){for(const s of e.childrenTiles)this._matchSymbols(s,o,l);return}const i=new Map;for(const[n,r]of l){const l=[];for(const s of r){const i=t(this.tileCoordRange,s.xTile,o.level,o.col,e.key.level,e.key.col),n=t(this.tileCoordRange,s.yTile,o.level,o.row,e.key.level,e.key.row);i>=0&&i<this.tileCoordRange&&n>=0&&n<this.tileCoordRange&&l.push({symbol:s,xTransformed:i,yTransformed:n})}const y=[],a=e.key.level<o.level?1:1<<e.key.level-o.level,f=this._tiles.get(e.id).symbols.get(n);if(f){const e=f.flat;for(const o of l){let t,l=!1;const i=o.xTransformed,n=o.yTransformed;t=s(f.index)?f.index.getCell(i,n):e;const r=o.symbol,c=r.hash;for(const e of t)if(c===e.hash&&Math.abs(i-e.xTile)<=a&&Math.abs(n-e.yTile)<=a){const s=e.unique;r.unique=s,s.tileSymbols.push(r),l=!0;break}l||y.push(r)}}y.length>0&&i.set(n,y)}for(const s of e.childrenTiles)this._matchSymbols(s,o,i)}_createUniqueSymbolLayerArray(){const e=this._uniqueSymbolsReferences,s=new Array(e.size);let o,t=0;for(const[l,i]of e){const e=new Array(i.size);o=0;for(const s of i)e[o++]=s;s[t]={styleLayerUID:l,uniqueSymbols:e},t++}return s}}export{r as SymbolRepository};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport{VTLUniqueSymbol as t}from\"./core.js\";import{CollisionJob as e}from\"./jobs.js\";import{SymbolDeclutterer as r}from\"./SymbolDeclutterer.js\";import{SymbolRepository as o}from\"./SymbolRepository.js\";import{writeOpacityToBuffers as s}from\"./util.js\";function i(i,p){const a=[],y=new o(4096,a,(()=>{const e=new t;return e.show=!1,e.parts.push({startTime:0,startOpacity:0,targetOpacity:0,show:!1}),e.parts.push({startTime:0,startOpacity:0,targetOpacity:0,show:!1}),e})),m=new r(a,y,((t,r,o)=>new e(t,r,o,i.styleRepository,i.key.level,0)),((t,e)=>{s(t,e,!1)}),(()=>0),(t=>{const e=p.getStyleLayerByUID(t).getLayoutProperty(\"visibility\");return!e||1!==e.getValue()}));a.push(i),y.add(i),m.setScreenSize(512,512),m.continue(1/0)}export{i as declutterSingleTile};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport{isSome as e}from\"../../../../core/maybe.js\";import{MIN_PRIORITY as t}from\"../../../../core/MemCache.js\";import{throwIfAborted as o}from\"../../../../core/promiseUtils.js\";import{f as s}from\"../../../../chunks/mat3f32.js\";import{create as i}from\"../../../../geometry/support/aaBoundingRect.js\";import{VectorTile as r}from\"./VectorTile.js\";import{TileHandler as n}from\"./TileHandler.js\";import{declutterSingleTile as l}from\"./decluttering/jobsUtil.js\";import a from\"../../tiling/TileKey.js\";class g extends n{constructor(e,t,o,s,i){super(e,t,o),this._memCache=s,this._loader=i,this._ongoingTileRequests=new Map,this._ongoingRequestToController=new Map}destroy(){this._ongoingRequestToController.forEach((e=>e.abort())),this._ongoingRequestToController.clear(),this._ongoingTileRequests.clear()}async getVectorTile(n,g,h,m){const u=new a(n,g,h,0);let c=this._memCache.get(u.id);if(e(c))return c.retain(),c;const _=await this._getVectorTileData(u);if(o(m),!this._layer)return null;if(c=this._memCache.get(u.id),e(c))return c.retain(),c;const T=this._layer.tileInfo.getTileBounds(i(),u);return c=new r(u,T[0],T[3],512,512,this._styleRepository,this._memCache),e(_)?(c.setData(_),c.retain(),this._memCache.put(u.id,c,c.memoryUsage*c.referenced,t)):c.setData(null),c.neededForCoverage=!0,c.transforms.tileUnitsToPixels=s(1/8,0,0,0,1/8,0,0,0,1),l(c,this._styleRepository),c}_getVectorTileData(e){const t=e.id;if(this._ongoingTileRequests.has(t))return this._ongoingTileRequests.get(t);const o=new AbortController,s={signal:o.signal},i=this._getParsedVectorTileData(e,s).then((e=>(this._ongoingTileRequests.delete(t),this._ongoingRequestToController.delete(t),e))).catch((()=>(this._ongoingTileRequests.delete(t),this._ongoingRequestToController.delete(t),null)));return this._ongoingTileRequests.set(t,i),this._ongoingRequestToController.set(t,o),i}_getParsedVectorTileData(e,t){return this.fetchTileData(e,t).then((o=>this.parseTileData({key:e,data:o},t)))}request(e,t){return this._loader.request(e,\"binary\",t)}}export{g as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nclass a{constructor(){this.name=this.constructor.name||\"UnnamedBrush\"}prepareState(a,r,t){}draw(a,r,t){}drawMany(a,r,t){for(const s of r)this.draw(a,s,t)}}export{a as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport{isNone as e}from\"../../../../core/maybe.js\";import t from\"../webgl/brushes/WGLBrush.js\";class r extends t{dispose(){}prepareState(e){const{context:t}=e;t.setColorMask(!0,!0,!0,!0),t.setStencilFunction(514,0,255)}draw(t,r){const{context:o}=t,{displayData:i}=r;if(e(i))return;if(\"loaded\"===i.state.name&&i.prepareForRendering(o,n,a),\"attached\"!==i.state.name)return;const s=i.state.resources,l=t.painter.materialManager.getProgram(t,{vsPath:\"raster/flow\",fsPath:\"raster/flow\",attributes:n});o.setFaceCullingEnabled(!1),o.setBlendingEnabled(!0),o.setBlendFunctionSeparate(1,771,1,1),o.useProgram(l),l.setUniform1f(\"u_time\",t.time/1e3),l.setUniform1f(\"u_fadeDuration\",i.flowStyle.renderSettings.fadeDuration),l.setUniform1f(\"u_lineSpeed\",i.flowStyle.renderSettings.lineSpeed),l.setUniformMatrix3fv(\"u_dvsMat3\",r.transforms.dvs),l.setUniformMatrix3fv(\"u_displayViewMat3\",t.state.displayViewMat3),l.setUniform4f(\"u_lineColor\",i.flowStyle.renderSettings.lineColor[0]*t.globalOpacity,i.flowStyle.renderSettings.lineColor[1]*t.globalOpacity,i.flowStyle.renderSettings.lineColor[2]*t.globalOpacity,i.flowStyle.renderSettings.lineColor[3]*t.globalOpacity),l.setUniform1f(\"u_lineHalfWidth\",i.flowStyle.renderSettings.lineRenderWidth/2),o.bindVAO(s.vertexArray),o.drawElements(4,s.indexBuffer.size,5125,0),i.flowStyle.animated&&r.requestRender()}}const n=new Map;n.set(\"a_positionAndSide\",0),n.set(\"a_timeInfo\",1),n.set(\"a_extrude\",2);const a={geometry:[{name:\"a_positionAndSide\",count:3,type:5126,offset:0,stride:32,normalized:!1},{name:\"a_timeInfo\",count:3,type:5126,offset:12,stride:32,normalized:!1},{name:\"a_extrude\",count:2,type:5126,offset:24,stride:32,normalized:!1}]};export{r as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nclass e{constructor(e){this.readFile=e}resolveIncludes(e){return this.resolve(e)}resolve(e,t=new Map){if(t.has(e))return t.get(e);const r=this.read(e);if(!r)throw new Error(`cannot find shader file ${e}`);const s=/^[^\\S\\n]*#include\\s+<(\\S+)>[^\\S\\n]?/gm;let n=s.exec(r);const l=[];for(;null!=n;)l.push({path:n[1],start:n.index,length:n[0].length}),n=s.exec(r);let a=0,h=\"\";return l.forEach((e=>{h+=r.slice(a,e.start),h+=t.has(e.path)?\"\":this.resolve(e.path,t),a=e.start+e.length})),h+=r.slice(a),t.set(e,h),h}read(e){return this.readFile(e)}}export{e as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nconst e={background:{\"background.frag\":\"uniform lowp vec4 u_color;\\nvoid main() {\\ngl_FragColor = u_color;\\n}\",\"background.vert\":\"attribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform mediump vec2 u_coord_range;\\nuniform mediump float u_depth;\\nvoid main() {\\nvec3 v_pos = u_dvsMat3 * vec3(u_coord_range * a_pos, 1.0);\\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\\n}\"},bitBlit:{\"bitBlit.frag\":\"uniform lowp sampler2D u_tex;\\nuniform lowp float u_opacity;\\nvarying mediump vec2 v_uv;\\nvoid main() {\\nlowp vec4 color = texture2D(u_tex, v_uv);\\ngl_FragColor = color *  u_opacity;\\n}\",\"bitBlit.vert\":\"attribute vec2 a_pos;\\nattribute vec2 a_tex;\\nvarying mediump vec2 v_uv;\\nvoid main(void) {\\ngl_Position = vec4(a_pos, 0.0, 1.0);\\nv_uv = a_tex;\\n}\"},blend:{\"blend.frag\":\"precision mediump float;\\nuniform sampler2D u_layerTexture;\\nuniform lowp float u_opacity;\\nuniform lowp float u_inFadeOpacity;\\n#ifndef NORMAL\\nuniform sampler2D u_backbufferTexture;\\n#endif\\nvarying mediump vec2 v_uv;\\nfloat rgb2v(in vec3 c) {\\nreturn max(c.x, max(c.y, c.z));\\n}\\nvec3 rgb2hsv(in vec3 c) {\\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\\nfloat d = q.x - min(q.w, q.y);\\nfloat e = 1.0e-10;\\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\\n}\\nvec3 hsv2rgb(in vec3 c) {\\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\nvec3 tint(in vec3 Cb, in vec3 Cs) {\\nfloat vIn = rgb2v(Cb);\\nvec3 hsvTint = rgb2hsv(Cs);\\nvec3 hsvOut = vec3(hsvTint.x, hsvTint.y, vIn * hsvTint.z);\\nreturn hsv2rgb(hsvOut);\\n}\\nfloat overlay(in float Cb, in float Cs) {\\nreturn (1.0 - step(0.5, Cs)) * (1.0 - 2.0 * (1.0 - Cs ) * (1.0 - Cb)) + step(0.5, Cs) * (2.0 * Cs * Cb);\\n}\\nfloat colorDodge(in float Cb, in float Cs) {\\nreturn (Cb == 0.0) ? 0.0 : (Cs == 1.0) ? 1.0 : min(1.0, Cb / (1.0 - Cs));\\n}\\nfloat colorBurn(in float Cb, in float Cs) {\\nreturn (Cb == 1.0) ? 1.0 : (Cs == 0.0) ? 0.0 : 1.0 - min(1.0, (1.0 - Cb) / Cs);\\n}\\nfloat hardLight(in float Cb, in float Cs) {\\nreturn (1.0 - step(0.5, Cs)) * (2.0 * Cs * Cb) + step(0.5, Cs) * (1.0 - 2.0 * (1.0 - Cs) * (1.0 - Cb));\\n}\\nfloat reflectBlend(in float Cb, in float Cs) {\\nreturn (Cs == 1.0) ? Cs : min(Cb * Cb / (1.0 - Cs), 1.0);\\n}\\nfloat softLight(in float Cb, in float Cs) {\\nif (Cs <= 0.5) {\\nreturn Cb - (1.0 - 2.0 * Cs) * Cb * (1.0 - Cb);\\n}\\nif (Cb <= 0.25) {\\nreturn Cb + (2.0 * Cs - 1.0) * Cb * ((16.0 * Cb - 12.0) * Cb + 3.0);\\n}\\nreturn Cb + (2.0 * Cs - 1.0) * (sqrt(Cb) - Cb);\\n}\\nfloat vividLight(in float Cb, in float Cs) {\\nreturn (1.0 - step(0.5, Cs)) * colorBurn(Cb, 2.0 * Cs) + step(0.5, Cs) * colorDodge(Cb, (2.0 * (Cs - 0.5)));\\n}\\nfloat minv3(in vec3 c) {\\nreturn min(min(c.r, c.g), c.b);\\n}\\nfloat maxv3(in vec3 c) {\\nreturn max(max(c.r, c.g), c.b);\\n}\\nfloat lumv3(in vec3 c) {\\nreturn dot(c, vec3(0.3, 0.59, 0.11));\\n}\\nfloat satv3(vec3 c) {\\nreturn maxv3(c) - minv3(c);\\n}\\nvec3 clipColor(vec3 color) {\\nfloat lum = lumv3(color);\\nfloat mincol = minv3(color);\\nfloat maxcol = maxv3(color);\\nif (mincol < 0.0) {\\ncolor = lum + ((color - lum) * lum) / (lum - mincol);\\n}\\nif (maxcol > 1.0) {\\ncolor = lum + ((color - lum) * (1.0 - lum)) / (maxcol - lum);\\n}\\nreturn color;\\n}\\nvec3 setLum(vec3 cbase, vec3 clum) {\\nfloat lbase = lumv3(cbase);\\nfloat llum = lumv3(clum);\\nfloat ldiff = llum - lbase;\\nvec3 color = cbase + vec3(ldiff);\\nreturn clipColor(color);\\n}\\nvec3 setLumSat(vec3 cbase, vec3 csat, vec3 clum)\\n{\\nfloat minbase = minv3(cbase);\\nfloat sbase = satv3(cbase);\\nfloat ssat = satv3(csat);\\nvec3 color;\\nif (sbase > 0.0) {\\ncolor = (cbase - minbase) * ssat / sbase;\\n} else {\\ncolor = vec3(0.0);\\n}\\nreturn setLum(color, clum);\\n}\\nvoid main() {\\nvec4 src = texture2D(u_layerTexture, v_uv);\\n#ifdef NORMAL\\ngl_FragColor = src *  u_opacity;\\n#else\\nvec4 dst = texture2D(u_backbufferTexture, v_uv);\\nvec3 Cs = src.a == 0.0 ? src.rgb : vec3(src.rgb / src.a);\\nvec3 Cb = dst.a == 0.0 ? dst.rgb : vec3(dst.rgb / dst.a);\\nfloat as = u_opacity * src.a;\\nfloat ab = dst.a;\\n#ifdef DESTINATION_OVER\\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb, as + ab - as * ab);\\n#endif\\n#ifdef SOURCE_IN\\nvec4 color = vec4(as * Cs * ab, as * ab);\\nvec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\\ngl_FragColor = color + fadeColor;\\n#endif\\n#ifdef DESTINATION_IN\\nvec4 color = vec4(ab * Cb * as, ab * as);\\nvec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\\ngl_FragColor = color + fadeColor;\\n#endif\\n#ifdef SOURCE_OUT\\ngl_FragColor = vec4(as * Cs * (1.0 - ab), as * (1.0 - ab));\\n#endif\\n#ifdef DESTINATION_OUT\\ngl_FragColor = vec4(ab * Cb * (1.0 - as), ab * (1.0 - as));\\n#endif\\n#ifdef SOURCE_ATOP\\ngl_FragColor = vec4(as * Cs * ab + ab * Cb * (1.0 - as), ab);\\n#endif\\n#ifdef DESTINATION_ATOP\\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * as, as);\\n#endif\\n#ifdef XOR\\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * (1.0 - as),\\nas * (1.0 - ab) + ab * (1.0 - as));\\n#endif\\n#ifdef MULTIPLY\\ngl_FragColor = vec4(as * Cs * ab * Cb + (1.0 - ab) * as * Cs + (1.0 - as) * ab * Cb,\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef SCREEN\\ngl_FragColor = vec4((Cs + Cb - Cs * Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef OVERLAY\\nvec3 f = vec3(overlay(Cb.r, Cs.r), overlay(Cb.g, Cs.g), overlay(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef DARKEN\\ngl_FragColor = vec4(min(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef LIGHTER\\ngl_FragColor = vec4(as * Cs + ab * Cb, as + ab);\\n#endif\\n#ifdef LIGHTEN\\ngl_FragColor = vec4(max(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef COLOR_DODGE\\nvec3 f = vec3(colorDodge(Cb.r, Cs.r), colorDodge(Cb.g, Cs.g), colorDodge(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef COLOR_BURN\\nvec3 f = vec3(colorBurn(Cb.r, Cs.r), colorBurn(Cb.g, Cs.g), colorBurn(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef HARD_LIGHT\\nvec3 f = vec3(hardLight(Cb.r, Cs.r), hardLight(Cb.g, Cs.g), hardLight(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef SOFT_LIGHT\\nvec3 f = vec3(softLight(Cb.r, Cs.r), softLight(Cb.g, Cs.g), softLight(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef DIFFERENCE\\ngl_FragColor = vec4(abs(Cb - Cs) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef EXCLUSION\\nvec3 f = Cs + Cb - 2.0 * Cs * Cb;\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef INVERT\\ngl_FragColor = vec4((1.0 - Cb) * as * ab + Cb * ab * (1.0 - as), ab);\\n#endif\\n#ifdef VIVID_LIGHT\\nvec3 f = vec3(vividLight(Cb.r, Cs.r),\\nvividLight(Cb.g, Cs.g),\\nvividLight(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef HUE\\nvec3 f = setLumSat(Cs,Cb,Cb);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef SATURATION\\nvec3 f = setLumSat(Cb,Cs,Cb);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef COLOR\\nvec3 f = setLum(Cs,Cb);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef LUMINOSITY\\nvec3 f = setLum(Cb,Cs);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef PLUS\\ngl_FragColor = clamp(vec4(src.r + Cb.r, src.g + Cb.g, src.b + Cb.b, as + ab), 0.0, 1.0);\\n#endif\\n#ifdef MINUS\\ngl_FragColor = vec4(clamp(vec3(Cb.r - src.r, Cb.g - src.g, Cb.b - src.b), 0.0, 1.0), ab * as);\\n#endif\\n#ifdef AVERAGE\\nvec3 f = (Cb + Cs) / 2.0;\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef REFLECT\\nvec3 f = vec3(reflectBlend(Cb.r, Cs.r),\\nreflectBlend(Cb.g, Cs.g),\\nreflectBlend(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#endif\\n}\",\"blend.vert\":\"attribute vec2 a_position;\\nvarying mediump vec2 v_uv;\\nvoid main(void) {\\ngl_Position = vec4(a_position , 0.0, 1.0);\\nv_uv = (a_position + 1.0) / 2.0;\\n}\"},filtering:{\"bicubic.glsl\":\"vec4 computeWeights(float v) {\\nfloat b = 1.0 / 6.0;\\nfloat v2 = v * v;\\nfloat v3 = v2 * v;\\nfloat w0 = b * (-v3 + 3.0 * v2 - 3.0 * v + 1.0);\\nfloat w1 = b * (3.0 * v3  - 6.0 * v2 + 4.0);\\nfloat w2 = b * (-3.0 * v3 + 3.0 * v2 + 3.0 * v + 1.0);\\nfloat w3 = b * v3;\\nreturn vec4(w0, w1, w2, w3);\\n}\\nvec4 bicubicOffsetsAndWeights(float v) {\\nvec4 w = computeWeights(v);\\nfloat g0 = w.x + w.y;\\nfloat g1 = w.z + w.w;\\nfloat h0 = 1.0 - (w.y / g0) + v;\\nfloat h1 = 1.0 + (w.w / g1) - v;\\nreturn vec4(h0, h1, g0, g1);\\n}\\nvec4 sampleBicubicBSpline(sampler2D sampler, vec2 coords, vec2 texSize) {\\nvec2 eX = vec2(1.0 / texSize.x, 0.0);\\nvec2 eY = vec2(0.0, 1.0 / texSize.y);\\nvec2 texel = coords * texSize - 0.5;\\nvec3 hgX = bicubicOffsetsAndWeights(fract(texel).x).xyz;\\nvec3 hgY = bicubicOffsetsAndWeights(fract(texel).y).xyz;\\nvec2 coords10 = coords + hgX.x * eX;\\nvec2 coords00 = coords - hgX.y * eX;\\nvec2 coords11 = coords10 + hgY.x * eY;\\nvec2 coords01 = coords00 + hgY.x * eY;\\ncoords10 = coords10 - hgY.y * eY;\\ncoords00 = coords00 - hgY.y * eY;\\nvec4 color00 = texture2D(sampler, coords00);\\nvec4 color10 = texture2D(sampler, coords10);\\nvec4 color01 = texture2D(sampler, coords01);\\nvec4 color11 = texture2D(sampler, coords11);\\ncolor00 = mix(color00, color01, hgY.z);\\ncolor10 = mix(color10, color11, hgY.z);\\ncolor00 = mix(color00, color10, hgX.z);\\nreturn color00;\\n}\",\"bilinear.glsl\":\"vec4 sampleBilinear(sampler2D sampler, vec2 coords, vec2 texSize) {\\nvec2 texelStart = floor(coords * texSize);\\nvec2 coord0 = texelStart / texSize;\\nvec2 coord1 = (texelStart +  vec2(1.0, 0.0)) / texSize;\\nvec2 coord2 = (texelStart +  vec2(0.0, 1.0)) / texSize;\\nvec2 coord3 = (texelStart +  vec2(1.0, 1.0)) / texSize;\\nvec4 color0 = texture2D(sampler, coord0);\\nvec4 color1 = texture2D(sampler, coord1);\\nvec4 color2 = texture2D(sampler, coord2);\\nvec4 color3 = texture2D(sampler, coord3);\\nvec2 blend = fract(coords * texSize);\\nvec4 color01 = mix(color0, color1, blend.x);\\nvec4 color23 = mix(color2, color3, blend.x);\\nvec4 color = mix(color01, color23, blend.y);\\n#ifdef NNEDGE\\nfloat alpha = floor(color0.a * color1.a * color2.a * color3.a + 0.5);\\ncolor = color * alpha + (1.0 - alpha) * texture2D(sampler, coords);\\n#endif\\nreturn color;\\n}\",\"epx.glsl\":\"vec4 sampleEPX(sampler2D sampler, float size, vec2 coords, vec2 texSize) {\\nvec2 invSize = 1.0 / texSize;\\nvec2 texel = coords * texSize;\\nvec2 texel_i = floor(texel);\\nvec2 texel_frac = fract(texel);\\nvec4 colorP = texture2D(sampler, texel_i * invSize);\\nvec4 colorP1 = vec4(colorP);\\nvec4 colorP2 = vec4(colorP);\\nvec4 colorP3 = vec4(colorP);\\nvec4 colorP4 = vec4(colorP);\\nvec4 colorA = texture2D(sampler, (texel_i - vec2(0.0, 1.0)) * invSize);\\nvec4 colorB = texture2D(sampler, (texel_i + vec2(1.0, 0.0)) * invSize);\\nvec4 colorC = texture2D(sampler, (texel_i - vec2(1.0, 0.0)) * invSize);\\nvec4 colorD = texture2D(sampler, (texel_i + vec2(0.0, 1.0)) * invSize);\\nif (colorC == colorA && colorC != colorD && colorA != colorB) {\\ncolorP1 = colorA;\\n}\\nif (colorA == colorB && colorA != colorC && colorB != colorD) {\\ncolorP2 = colorB;\\n}\\nif (colorD == colorC && colorD != colorB && colorC != colorA) {\\ncolorP3 = colorC;\\n}\\nif (colorB == colorD && colorB != colorA && colorD != colorC) {\\ncolorP4 = colorD;\\n}\\nvec4 colorP12 = mix(colorP1, colorP2, texel_frac.x);\\nvec4 colorP34 = mix(colorP1, colorP2, texel_frac.x);\\nreturn mix(colorP12, colorP34, texel_frac.y);\\n}\"},fx:{integrate:{\"integrate.frag\":\"precision mediump float;\\nuniform lowp sampler2D u_sourceTexture;\\nuniform lowp sampler2D u_maskTexture;\\nuniform mediump float u_zoomLevel;\\nuniform highp float u_timeDelta;\\nuniform highp float u_animationTime;\\nvarying highp vec2 v_texcoord;\\n#include <materials/utils.glsl>\\nvoid main()\\n{\\n#ifdef DELTA\\nvec4 texel = texture2D(u_sourceTexture, v_texcoord);\\nvec4 data0 = texture2D(u_maskTexture, v_texcoord);\\nfloat flags = data0.r * 255.0;\\nfloat groupMinZoom = data0.g * 255.0;\\nfloat isVisible = getFilterBit(flags, 0);\\nfloat wouldClip = step(groupMinZoom, u_zoomLevel);\\nfloat direction = wouldClip * 1.0 + (1.0 - wouldClip) * -1.0;\\nfloat dt = u_timeDelta / max(u_animationTime, 0.0001);\\nvec4 nextState = vec4(texel + direction * dt);\\ngl_FragColor =  vec4(nextState);\\n#elif defined(UPDATE)\\nvec4 texel = texture2D(u_sourceTexture, v_texcoord);\\ngl_FragColor = texel;\\n#endif\\n}\",\"integrate.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos;\\ngl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\\n}\"}},highlight:{\"blur.frag\":\"varying mediump vec2 v_texcoord;\\nuniform mediump vec4 u_direction;\\nuniform mediump mat4 u_channelSelector;\\nuniform mediump float u_sigma;\\nuniform sampler2D u_texture;\\nmediump float gauss1(mediump vec2 dir) {\\nreturn exp(-dot(dir, dir) / (2.0 * u_sigma * u_sigma));\\n}\\nmediump vec4 selectChannel(mediump vec4 sample) {\\nreturn u_channelSelector * sample;\\n}\\nvoid accumGauss1(mediump float i, inout mediump float tot, inout mediump float weight) {\\nmediump float w = gauss1(i * u_direction.xy);\\ntot += selectChannel(texture2D(u_texture, v_texcoord + i * u_direction.zw))[3] * w;\\nweight += w;\\n}\\nvoid main(void) {\\nmediump float tot = 0.0;\\nmediump float weight = 0.0;\\naccumGauss1(-5.0, tot, weight);\\naccumGauss1(-4.0, tot, weight);\\naccumGauss1(-3.0, tot, weight);\\naccumGauss1(-2.0, tot, weight);\\naccumGauss1(-1.0, tot, weight);\\naccumGauss1(0.0, tot, weight);\\naccumGauss1(1.0, tot, weight);\\naccumGauss1(2.0, tot, weight);\\naccumGauss1(3.0, tot, weight);\\naccumGauss1(4.0, tot, weight);\\naccumGauss1(5.0, tot, weight);\\ngl_FragColor = vec4(0.0, 0.0, 0.0, tot / weight);\\n}\",\"highlight.frag\":\"varying mediump vec2 v_texcoord;\\nuniform sampler2D u_texture;\\nuniform mediump float u_sigma;\\nuniform sampler2D u_shade;\\nuniform mediump vec2 u_minMaxDistance;\\nmediump float estimateDistance() {\\nmediump float y = texture2D(u_texture, v_texcoord)[3];\\nconst mediump float y0 = 0.5;\\nmediump float m0 = 1.0 / (sqrt(2.0 * 3.1415) * u_sigma);\\nmediump float d = (y - y0) / m0;\\nreturn d;\\n}\\nmediump vec4 shade(mediump float d) {\\nmediump float mappedDistance = (d - u_minMaxDistance.x) / (u_minMaxDistance.y - u_minMaxDistance.x);\\nmappedDistance = clamp(mappedDistance, 0.0, 1.0);\\nreturn texture2D(u_shade, vec2(mappedDistance, 0.5));\\n}\\nvoid main(void) {\\nmediump float d = estimateDistance();\\ngl_FragColor = shade(d);\\n}\",\"textured.vert\":\"attribute mediump vec2 a_position;\\nattribute mediump vec2 a_texcoord;\\nvarying mediump vec2 v_texcoord;\\nvoid main(void) {\\ngl_Position = vec4(a_position, 0.0, 1.0);\\nv_texcoord = a_texcoord;\\n}\"},magnifier:{\"magnifier.frag\":\"uniform lowp vec4 u_background;\\nuniform mediump sampler2D u_readbackTexture;\\nuniform mediump sampler2D u_maskTexture;\\nuniform mediump sampler2D u_overlayTexture;\\nuniform bool u_maskEnabled;\\nuniform bool u_overlayEnabled;\\nvarying mediump vec2 v_texCoord;\\nconst lowp float barrelFactor = 1.1;\\nlowp vec2 barrel(lowp vec2 uv) {\\nlowp vec2 uvn = uv * 2.0 - 1.0;\\nif (uvn.x == 0.0 && uvn.y == 0.0) {\\nreturn vec2(0.5, 0.5);\\n}\\nlowp float theta = atan(uvn.y, uvn.x);\\nlowp float r = pow(length(uvn), barrelFactor);\\nreturn r * vec2(cos(theta), sin(theta)) * 0.5 + 0.5;\\n}\\nvoid main(void)\\n{\\nlowp vec4 color = texture2D(u_readbackTexture, barrel(v_texCoord));\\ncolor = (color + (1.0 - color.a) * u_background);\\nlowp float mask = u_maskEnabled ? texture2D(u_maskTexture, v_texCoord).a : 1.0;\\ncolor *= mask;\\nlowp vec4 overlayColor = u_overlayEnabled ? texture2D(u_overlayTexture, v_texCoord) : vec4(0);\\ngl_FragColor = overlayColor + (1.0 - overlayColor.a) * color;\\n}\",\"magnifier.vert\":\"precision mediump float;\\nattribute mediump vec2 a_pos;\\nuniform mediump vec4 u_drawPos;\\nvarying mediump vec2 v_texCoord;\\nvoid main(void)\\n{\\nv_texCoord = a_pos;\\ngl_Position = vec4(u_drawPos.xy + vec2(a_pos - 0.5) * u_drawPos.zw, 0.0, 1.0);\\n}\"},materials:{\"attributeData.glsl\":\"uniform highp sampler2D u_attributeData0;\\nuniform highp sampler2D u_attributeData1;\\nuniform highp sampler2D u_attributeData2;\\nuniform highp sampler2D u_attributeData3;\\nuniform highp int u_attributeTextureSize;\\nhighp vec2 getAttributeDataCoords(in highp vec3 id) {\\nhighp vec3  texel = unpackDisplayIdTexel(id);\\nhighp float size = float(u_attributeTextureSize);\\nhighp float u32 = float(int(texel.r) + int(texel.g) * 256 + int(texel.b) * 256 * 256);\\nhighp float col = mod(u32, size);\\nhighp float row = (u32 - col) / size;\\nhighp float u = col / size;\\nhighp float v = row / size;\\nreturn vec2(u, v);\\n}\\nhighp vec4 getAttributeData0(in highp vec3 id) {\\nvec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData0, coords);\\n}\\nhighp vec4 getAttributeData1(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData1, coords);\\n}\\nhighp vec4 getAttributeData2(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData2, coords);\\n}\\nhighp vec4 getAttributeData3(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData3, coords);\\n}\\nfloat u88VVToFloat(in vec2 v) {\\nbool isMagic = v.x == 255.0 && v.y == 255.0;\\nif (isMagic) {\\nreturn NAN_MAGIC_NUMBER;\\n}\\nreturn (v.x + v.y * float(0x100)) - 32768.0;\\n}\",\"constants.glsl\":\"const float C_DEG_TO_RAD = 3.14159265359 / 180.0;\\nconst float C_256_TO_RAD = 3.14159265359 / 128.0;\\nconst float SIGNED_BYTE_TO_UNSIGNED = 128.0;\\nconst float POSITION_PRECISION = 1.0 / 8.0;\\nconst float FILL_POSITION_PRECISION = 1.0 / 1.0;\\nconst float SOFT_EDGE_RATIO = 1.0;\\nconst float THIN_LINE_WIDTH_FACTOR = 1.1;\\nconst float THIN_LINE_HALF_WIDTH = 1.0;\\nconst float EXTRUDE_SCALE_PLACEMENT_PADDING = 1.0 / 4.0;\\nconst float OFFSET_PRECISION = 1.0 / 8.0;\\nconst float OUTLINE_SCALE = 1.0 / 5.0;\\nconst float SDF_FONT_SIZE = 24.0;\\nconst float MAX_SDF_DISTANCE = 8.0;\\nconst float PLACEMENT_PADDING = 8.0;\\nconst float EPSILON = 0.0000001;\\nconst int MAX_FILTER_COUNT = 2;\\nconst int ATTR_VV_SIZE = 0;\\nconst int ATTR_VV_COLOR = 1;\\nconst int ATTR_VV_OPACITY = 2;\\nconst int ATTR_VV_ROTATION = 3;\\nconst highp float NAN_MAGIC_NUMBER = 1e-30;\\nconst int BITSET_GENERIC_LOCK_COLOR = 1;\\nconst int BITSET_MARKER_ALIGNMENT_MAP = 0;\\nconst int BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE = 2;\\nconst int BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY = 3;\\nconst int BITSET_TYPE_FILL_OUTLINE = 0;\\nconst int BITSET_LINE_SCALE_DASH = 2;\",fill:{\"common.glsl\":\"#ifdef PATTERN\\nuniform mediump vec2 u_mosaicSize;\\n#endif\\n#ifdef DOT_DENSITY\\nuniform lowp vec4 u_isActive[ 2 ];\\nuniform highp float u_dotValue;\\nuniform highp float u_tileDotsOverArea;\\nuniform highp float u_dotTextureDotCount;\\nuniform mediump float u_tileZoomFactor;\\n#endif\\nvarying highp vec3 v_id;\\nvarying lowp vec4 v_color;\\nvarying lowp float v_opacity;\\nvarying mediump vec4 v_aux1;\\n#ifdef PATTERN\\nvarying mediump vec2 v_tileTextureCoord;\\n#endif\\n#ifdef OUTLINED_FILL\\nvarying lowp float v_isOutline;\\n#endif\\n#ifdef DOT_DENSITY\\nvarying highp vec2 v_dotTextureCoords;\\nvarying highp vec4 v_dotThresholds[ 2 ];\\n#endif\",\"fill.frag\":\"precision highp float;\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/fill/common.glsl>\\n#ifdef PATTERN\\nuniform lowp sampler2D u_texture;\\n#endif\\n#ifdef DOT_DENSITY\\nuniform mediump mat4 u_dotColors[ 2 ];\\nuniform sampler2D u_dotTextures[ 2 ];\\nuniform vec4 u_dotBackgroundColor;\\n#endif\\n#ifdef OUTLINED_FILL\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.frag>\\nlowp vec4 drawLine() {\\nfloat v_lineWidth = v_aux1.x;\\nvec2  v_normal    = v_aux1.yz;\\nLineData inputs = LineData(\\nv_color,\\nv_normal,\\nv_lineWidth,\\nv_opacity,\\nv_id\\n);\\nreturn shadeLine(inputs);\\n}\\n#endif\\nlowp vec4 drawFill() {\\nlowp vec4 out_color = vec4(0.);\\n#ifdef ID\\nout_color = vec4(v_id, 0.0);\\n#elif defined(PATTERN)\\nmediump vec4 v_tlbr = v_aux1;\\nmediump vec2 normalizedTextureCoord = mod(v_tileTextureCoord, 1.0);\\nmediump vec2 samplePos = mix(v_tlbr.xy, v_tlbr.zw, normalizedTextureCoord);\\nlowp vec4 color = texture2D(u_texture, samplePos);\\nout_color = v_opacity * v_color * color;\\n#elif defined(DOT_DENSITY) && !defined(HIGHLIGHT)\\nvec4 textureThresholds0 = texture2D(u_dotTextures[0], v_dotTextureCoords);\\nvec4 textureThresholds1 = texture2D(u_dotTextures[1], v_dotTextureCoords);\\nvec4 difference0 = v_dotThresholds[0] - textureThresholds0;\\nvec4 difference1 = v_dotThresholds[1] - textureThresholds1;\\n#ifdef DD_DOT_BLENDING\\nvec4 isPositive0 = step(0.0, difference0);\\nvec4 isPositive1 = step(0.0, difference1);\\nfloat weightSum = dot(isPositive0, difference0) + dot(isPositive1, difference1);\\nfloat lessThanEqZero = step(weightSum, 0.0);\\nfloat greaterThanZero = 1.0 - lessThanEqZero ;\\nfloat divisor = (weightSum + lessThanEqZero);\\nvec4 weights0 = difference0 * isPositive0 / divisor;\\nvec4 weights1 = difference1 * isPositive1 / divisor;\\nvec4 dotColor = u_dotColors[0] * weights0 + u_dotColors[1] * weights1;\\nvec4 preEffectColor = greaterThanZero * dotColor + lessThanEqZero * u_dotBackgroundColor;\\n#else\\nfloat diffMax = max(max4(difference0), max4(difference1));\\nfloat lessThanZero = step(diffMax, 0.0);\\nfloat greaterOrEqZero = 1.0 - lessThanZero;\\nvec4 isMax0 = step(diffMax, difference0);\\nvec4 isMax1 = step(diffMax, difference1);\\nvec4 dotColor = u_dotColors[0] * isMax0 + u_dotColors[1] * isMax1;\\nvec4 preEffectColor = greaterOrEqZero * dotColor + lessThanZero * u_dotBackgroundColor;\\n#endif\\nout_color = preEffectColor;\\n#else\\nout_color = v_opacity * v_color;\\n#endif\\n#ifdef HIGHLIGHT\\nout_color.a = 1.0;\\n#endif\\nreturn out_color;\\n}\\nvoid main() {\\n#ifdef OUTLINED_FILL\\nif (v_isOutline > 0.5) {\\ngl_FragColor = drawLine();\\n} else {\\ngl_FragColor = drawFill();\\n}\\n#else\\ngl_FragColor = drawFill();\\n#endif\\n}\",\"fill.vert\":\"#define PACKED_LINE\\nprecision highp float;\\nattribute float a_bitset;\\n#ifdef DOT_DENSITY\\nattribute float a_inverseArea;\\nvec4 a_color = vec4(0.0, 0.0, 0.0, 1.0);\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\n#else\\nattribute vec4 a_color;\\nattribute vec4 a_aux2;\\nattribute vec4 a_aux3;\\n#ifndef SIMPLE\\nattribute vec4 a_aux1;\\nattribute vec2 a_zoomRange;\\n#else\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\n#endif\\n#endif\\nuniform vec2 u_tileOffset;\\n#include <materials/vcommon.glsl>\\n#include <materials/fill/common.glsl>\\n#ifdef DOT_DENSITY\\nvec4 dotThreshold(vec4 featureAttrOverFeatureArea, float dotValue, float tileDotsOverArea) {\\nreturn featureAttrOverFeatureArea * (1.0 / dotValue)  * (1.0 / tileDotsOverArea);\\n}\\n#endif\\n#ifdef OUTLINED_FILL\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.vert>\\nvoid drawLine(out lowp vec4 out_color, out highp vec3 out_pos) {\\nLineData outputs = buildLine(\\nout_pos,\\na_id,\\na_pos,\\na_color,\\n(a_aux3.xy - 128.) / 16.,\\n(a_aux3.zw - 128.) / 16.,\\n0.,\\na_aux2.z / 16.,\\na_bitset,\\nvec4(0.),\\nvec2(0.),\\na_aux2.w / 16.\\n);\\nv_id      = outputs.id;\\nv_color   = outputs.color;\\nv_opacity = outputs.opacity;\\nv_aux1    = vec4(outputs.lineHalfWidth, outputs.normal, 0.);\\nout_color = outputs.color;\\n}\\n#endif\\nvoid drawFill(out lowp vec4 out_color, out highp vec3 out_pos) {\\nfloat a_bitSet = a_bitset;\\nv_color   = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nv_opacity = getOpacity();\\nv_id      = norm(a_id);\\nout_color = v_color;\\nout_pos   = u_dvsMat3 * vec3(a_pos * FILL_POSITION_PRECISION, 1.);\\n#ifdef PATTERN\\nvec4  a_tlbr   = a_aux1;\\nfloat a_width  = a_aux2.x;\\nfloat a_height = a_aux2.y;\\nvec2  a_offset = a_aux2.zw;\\nvec2  a_scale  = a_aux3.xy;\\nfloat a_angle  = a_aux3.z;\\nvec2 scale = (1.0 / SIGNED_BYTE_TO_UNSIGNED) * a_scale;\\nfloat width = u_pixelRatio * u_zoomFactor * a_width * scale.x;\\nfloat height = u_pixelRatio * u_zoomFactor * a_height * scale.y;\\nfloat angle = C_256_TO_RAD * a_angle;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nmat3 patternMatrix = mat3(cosA / width, sinA / height, 0,\\n-sinA / width, cosA / height, 0,\\n0,            0,             1);\\nvec2 tileOffset = vec2(u_tileOffset.x * cosA - u_tileOffset.y * sinA, u_tileOffset.x * sinA + u_tileOffset.y * cosA);\\ntileOffset = mod(tileOffset, vec2(a_aux2.x, a_aux2.y));\\nvec2 symbolOffset = (a_offset - tileOffset - SIGNED_BYTE_TO_UNSIGNED) / vec2(width, height);\\nv_tileTextureCoord = (patternMatrix * vec3(a_pos * FILL_POSITION_PRECISION, 1.0)).xy - symbolOffset;\\nv_aux1 = a_tlbr / u_mosaicSize.xyxy;\\n#elif defined(DOT_DENSITY)\\nvec4 ddAttributeData0 = getAttributeData2(a_id) * u_isActive[0] * a_inverseArea;\\nvec4 ddAttributeData1 = getAttributeData3(a_id) * u_isActive[1] * a_inverseArea;\\nfloat size = u_tileZoomFactor * 512.0 * 1.0 / u_pixelRatio;\\nv_dotThresholds[0] = dotThreshold(ddAttributeData0, u_dotValue, u_tileDotsOverArea);\\nv_dotThresholds[1] = dotThreshold(ddAttributeData1, u_dotValue, u_tileDotsOverArea);\\nv_dotTextureCoords = (a_pos * FILL_POSITION_PRECISION + 0.5) / size;\\n#endif\\n}\\nvoid main()\\n{\\nINIT;\\nlowp vec4 color = vec4(0.);\\nhighp vec3 pos  = vec3(0.);\\n#ifdef OUTLINED_FILL\\nv_isOutline = getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE);\\nif (v_isOutline > 0.5) {\\ndrawLine(color, pos);\\n} else {\\ndrawFill(color, pos);\\n}\\n#else\\ndrawFill(color, pos);\\n#endif\\ngl_Position = vec4(clip(color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\"},icon:{\"common.glsl\":\"uniform lowp vec2 u_mosaicSize;\\nvarying lowp vec4 v_color;\\nvarying highp vec3 v_id;\\nvarying highp vec4 v_sizeTex;\\nvarying mediump vec3 v_pos;\\nvarying highp float v_filters;\\nvarying lowp float v_opacity;\\n#ifdef SDF\\nvarying lowp vec4 v_outlineColor;\\nvarying mediump float v_outlineWidth;\\nvarying mediump float v_distRatio;\\nvarying mediump float v_overridingOutlineColor;\\nvarying mediump float v_isThin;\\n#endif\",\"icon.frag\":\"precision mediump float;\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <util/encoding.glsl>\\n#include <materials/constants.glsl>\\n#include <materials/icon/common.glsl>\\nuniform lowp sampler2D u_texture;\\nvoid main()\\n{\\nvec2 v_size = v_sizeTex.xy;\\nvec2 v_tex  = v_sizeTex.zw;\\n#ifdef SDF\\nlowp vec4 fillPixelColor = v_color;\\nfloat d = 0.5 - rgba2float(texture2D(u_texture, v_tex));\\nfloat size = max(v_size.x, v_size.y);\\nfloat dist = d * size * SOFT_EDGE_RATIO * v_distRatio;\\nfillPixelColor *= clamp(0.5 - dist, 0.0, 1.0);\\nfloat outlineWidth = v_outlineWidth;\\n#ifdef HIGHLIGHT\\noutlineWidth = max(outlineWidth, 4.0 * v_isThin);\\n#endif\\nif (outlineWidth > 0.25) {\\nlowp vec4 outlinePixelColor = v_overridingOutlineColor * v_color + (1.0 - v_overridingOutlineColor) * v_outlineColor;\\nfloat clampedOutlineSize = min(outlineWidth, size);\\noutlinePixelColor *= clamp(0.5 - abs(dist) + clampedOutlineSize * 0.5, 0.0, 1.0);\\ngl_FragColor = v_opacity * ((1.0 - outlinePixelColor.a) * fillPixelColor + outlinePixelColor);\\n}\\nelse {\\ngl_FragColor = v_opacity * fillPixelColor;\\n}\\n#else\\nlowp vec4 texColor = texture2D(u_texture, v_tex);\\ngl_FragColor = v_opacity * texColor * v_color;\\n#endif\\n#ifdef HIGHLIGHT\\ngl_FragColor.a = step(1.0 / 255.0, gl_FragColor.a);\\n#endif\\n#ifdef ID\\nif (gl_FragColor.a < 1.0 / 255.0) {\\ndiscard;\\n}\\ngl_FragColor = vec4(v_id, 0.0);\\n#endif\\n}\",\"icon.vert\":\"precision highp float;\\nattribute vec4 a_color;\\nattribute vec4 a_outlineColor;\\nattribute vec4 a_sizeAndOutlineWidth;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nattribute vec2 a_bitSetAndDistRatio;\\nattribute vec2 a_zoomRange;\\n#include <materials/vcommon.glsl>\\n#include <materials/icon/common.glsl>\\nvec2 getMarkerSize(inout vec2 offset, inout vec2 baseSize, inout float outlineSize, in float referenceSize, in float bitSet) {\\n#ifdef VV_SIZE\\nfloat r = getSize(baseSize.y) / referenceSize;\\nbaseSize.xy *= r;\\noffset.xy *= r;\\nfloat scaleSymbolProportionally = getBit(bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\\noutlineSize *= scaleSymbolProportionally * (r - 1.0) + 1.0;\\n#endif\\nreturn baseSize;\\n}\\nvec3 getOffset(in vec2 in_offset, float a_bitSet) {\\nfloat isMapAligned = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\\nvec3  offset       = getRotation() * vec3(in_offset, 0.0);\\nreturn getMatrix(isMapAligned) * offset;\\n}\\nvoid main()\\n{\\nINIT;\\nvec2  a_size   = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\\nvec2  a_offset = a_vertexOffset / 16.0;\\nfloat a_outlineSize = a_sizeAndOutlineWidth.z * a_sizeAndOutlineWidth.z / 128.0;\\nfloat a_bitSet = a_bitSetAndDistRatio.x;\\nvec2 v_size = getMarkerSize(a_offset, a_size, a_outlineSize, a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0, a_bitSet);\\nvec2 v_tex      = a_texCoords / u_mosaicSize;\\nv_color    = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nv_opacity  = getOpacity();\\nv_id       = norm(a_id);\\nv_filters  = getFilterFlags();\\nv_pos      = u_dvsMat3 * vec3(a_pos * POSITION_PRECISION, 1.0) + getOffset(a_offset, a_bitSet);\\nv_sizeTex  = vec4(v_size.xy, v_tex.xy);\\n#ifdef SDF\\nv_isThin   = getBit(a_bitSet, BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE);\\n#ifdef VV_COLOR\\nv_overridingOutlineColor = v_isThin;\\n#else\\nv_overridingOutlineColor = 0.0;\\n#endif\\nv_outlineWidth = min(a_outlineSize, max(max(v_size.x, v_size.y) - 0.99, 0.0));\\nv_outlineColor = a_outlineColor;\\nv_distRatio = a_bitSetAndDistRatio.y / 126.0;\\n#endif\\ngl_Position = vec4(clip(v_color, v_pos, v_filters, a_zoomRange), 1.0);\\n}\"},label:{\"common.glsl\":\"uniform mediump float u_zoomLevel;\\nuniform mediump float u_mapRotation;\\nuniform mediump float u_mapAligned;\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump float v_antialiasingWidth;\\nvarying mediump float v_edgeDistanceOffset;\\nvarying mediump vec2 v_tex;\\nvarying mediump vec4 v_color;\\nvarying lowp vec4 v_animation;\",\"label.frag\":\"#include <materials/text/text.frag>\",\"label.vert\":\"precision highp float;\\n#include <materials/vcommon.glsl>\\n#include <materials/text/common.glsl>\\nattribute vec4 a_color;\\nattribute vec4 a_haloColor;\\nattribute vec4 a_texAndSize;\\nattribute vec4 a_refSymbolAndPlacementOffset;\\nattribute vec4 a_glyphData;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nuniform float u_isHalo;\\nuniform float u_mapRotation;\\nuniform float u_mapAligned;\\nfloat getZ(in float minZoom, in float maxZoom, in float angle) {\\nfloat glyphAngle = angle * 360.0 / 254.0;\\nfloat mapAngle = u_mapRotation * 360.0 / 254.0;\\nfloat diffAngle = min(360.0 - abs(mapAngle - glyphAngle), abs(mapAngle - glyphAngle));\\nfloat z = 0.0;\\nz += u_mapAligned * (2.0 * (1.0 - step(minZoom, u_currentZoom)));\\nz += u_mapAligned * 2.0 * step(90.0, diffAngle);\\nz += 2.0 * (1.0 - step(u_currentZoom, maxZoom));\\nreturn z;\\n}\\nvoid main()\\n{\\nINIT;\\nfloat groupMinZoom    = getMinZoom();\\nfloat glyphMinZoom    = a_glyphData.x;\\nfloat glyphMaxZoom    = a_glyphData.y;\\nfloat glyphAngle      = a_glyphData.z;\\nfloat a_minZoom          = max(groupMinZoom, glyphMinZoom);\\nfloat a_placementPadding = a_refSymbolAndPlacementOffset.x * EXTRUDE_SCALE_PLACEMENT_PADDING;\\nvec2  a_placementDir     = unpack_u8_nf32(a_refSymbolAndPlacementOffset.zw);\\nfloat a_refSymbolSize    = a_refSymbolAndPlacementOffset.y;\\nfloat fontSize           = a_texAndSize.z;\\nfloat haloSize           = a_texAndSize.w * OUTLINE_SCALE;\\nvec2  vertexOffset = a_vertexOffset * OFFSET_PRECISION;\\nvec3  pos          = vec3(a_pos * POSITION_PRECISION, 1.0);\\nfloat z            = getZ(a_minZoom, glyphMaxZoom, glyphAngle);\\nfloat fontScale    = fontSize / SDF_FONT_SIZE;\\nfloat halfSize     = getSize(a_refSymbolSize) / 2.0;\\nfloat animation    = pow(getAnimationState(), vec4(2.0)).r;\\nv_color     = animation * ((1.0 - u_isHalo) * a_color + (u_isHalo * a_haloColor));\\nv_opacity   = 1.0;\\nv_tex       = a_texCoords / u_mosaicSize;\\nv_edgeDistanceOffset = u_isHalo * haloSize / fontScale / MAX_SDF_DISTANCE;\\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\\nvec2 placementOffset = a_placementDir * (halfSize + a_placementPadding);\\nvec3 glyphOffset     = u_displayMat3 * vec3(vertexOffset + placementOffset, 0.0);\\nvec3 v_pos           = vec3((u_dvsMat3 * pos + glyphOffset).xy, z);\\ngl_Position = vec4(applyFilterLabels(v_color, v_pos, getFilterFlags()), 1.0);\\n#ifdef DEBUG\\nv_color = vec4(a_color.rgb, z == 0.0 ? 1.0 : 0.645);\\n#endif\\n}\"},line:{\"common.glsl\":\"varying lowp vec4 v_color;\\nvarying highp vec3 v_id;\\nvarying mediump vec2 v_normal;\\nvarying mediump float v_lineHalfWidth;\\nvarying lowp float v_opacity;\\n#ifdef PATTERN\\nvarying mediump vec4 v_tlbr;\\nvarying mediump vec2 v_patternSize;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nvarying highp float v_accumulatedDistance;\\n#endif\\n#ifdef SDF\\nvarying mediump float v_lineWidthRatio;\\n#endif\",\"line.frag\":\"precision lowp float;\\n#include <util/encoding.glsl>\\n#include <materials/constants.glsl>\\n#include <materials/line/common.glsl>\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.frag>\\nvoid main()\\n{\\nLineData inputs = LineData(\\nv_color,\\nv_normal,\\nv_lineHalfWidth,\\nv_opacity,\\n#ifndef OUTLINED_FILL\\n#ifdef PATTERN\\nv_tlbr,\\nv_patternSize,\\n#endif\\n#ifdef SDF\\nv_lineWidthRatio,\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nv_accumulatedDistance,\\n#endif\\n#endif\\nv_id\\n);\\ngl_FragColor = shadeLine(inputs);\\n}\",\"line.vert\":\"precision highp float;\\nattribute vec4 a_color;\\nattribute vec4 a_offsetAndNormal;\\nattribute vec2 a_accumulatedDistanceAndHalfWidth;\\nattribute vec4 a_tlbr;\\nattribute vec4 a_segmentDirection;\\nattribute vec2 a_aux;\\nattribute vec2 a_zoomRange;\\n#include <materials/vcommon.glsl>\\n#include <materials/line/common.glsl>\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.vert>\\nvoid main()\\n{\\nINIT;\\nhighp vec3 pos = vec3(0.);\\nLineData outputs = buildLine(\\npos,\\na_id,\\na_pos,\\na_color,\\na_offsetAndNormal.xy / 16.,\\na_offsetAndNormal.zw / 16.,\\na_accumulatedDistanceAndHalfWidth.x,\\na_accumulatedDistanceAndHalfWidth.y / 16.,\\na_segmentDirection.w,\\na_tlbr,\\na_segmentDirection.xy / 16.,\\na_aux.x / 16.\\n);\\nv_id              = outputs.id;\\nv_color           = outputs.color;\\nv_normal          = outputs.normal;\\nv_lineHalfWidth   = outputs.lineHalfWidth;\\nv_opacity         = outputs.opacity;\\n#ifndef OUTLINED_FILL\\n#ifdef PATTERN\\nv_tlbr          = outputs.tlbr;\\nv_patternSize   = outputs.patternSize;\\n#endif\\n#ifdef SDF\\nv_lineWidthRatio = outputs.lineWidthRatio;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nv_accumulatedDistance = outputs.accumulatedDistance;\\n#endif\\n#endif\\ngl_Position = vec4(clip(outputs.color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\"},shared:{line:{\"common.glsl\":\"#if !defined(OUTLINED_FILL) && defined(PATTERN)\\nuniform mediump vec2 u_mosaicSize;\\n#endif\\nstruct LineData {\\nlowp vec4 color;\\nmediump vec2 normal;\\nmediump float lineHalfWidth;\\nlowp float opacity;\\n#ifndef OUTLINED_FILL\\n#ifdef PATTERN\\nmediump vec4 tlbr;\\nmediump vec2 patternSize;\\n#endif\\n#ifdef SDF\\nmediump float lineWidthRatio;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nhighp float accumulatedDistance;\\n#endif\\n#endif\\nhighp vec3 id;\\n};\",\"line.frag\":\"uniform lowp float u_blur;\\n#if !defined(OUTLINED_FILL) && !defined(HIGHLIGHT)\\n#if defined(PATTERN) || defined(SDF)\\nuniform sampler2D u_texture;\\nuniform highp float u_pixelRatio;\\n#endif\\n#endif\\n#if defined(SDF) && !defined(HIGHLIGHT) && !defined(OUTLINED_FILL)\\nlowp vec4 getLineColor(LineData line) {\\nmediump float adjustedPatternWidth = line.patternSize.x * 2.0 * line.lineWidthRatio;\\nmediump float relativeTexX = fract(u_pixelRatio * line.accumulatedDistance / adjustedPatternWidth);\\nmediump float relativeTexY = 0.5 + 0.25 * line.normal.y;\\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexX, relativeTexY));\\nmediump float d = rgba2float(texture2D(u_texture, texCoord)) - 0.5;\\nfloat dist = d * line.lineHalfWidth;\\nreturn line.opacity * clamp(0.5 - dist, 0.0, 1.0) * line.color;\\n}\\n#elif defined(PATTERN) && !defined(HIGHLIGHT) && !defined(OUTLINED_FILL)\\nlowp vec4 getLineColor(LineData line) {\\nmediump float lineHalfWidth = line.lineHalfWidth;\\nmediump float adjustedPatternWidth = line.patternSize.x * 2.0 * lineHalfWidth / line.patternSize.y;\\nmediump float relativeTexX = fract(u_pixelRatio * line.accumulatedDistance / adjustedPatternWidth);\\nmediump float relativeTexY = 0.5 + 0.5 * line.normal.y;\\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexY, relativeTexX));\\nlowp vec4 color = texture2D(u_texture, texCoord);\\nreturn line.opacity * line.color * color;\\n}\\n#else\\nlowp vec4 getLineColor(LineData line) {\\nreturn line.opacity * line.color;\\n}\\n#endif\\nvec4 shadeLine(LineData line)\\n{\\nmediump float thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(line.lineHalfWidth, THIN_LINE_HALF_WIDTH), 1.0);\\nmediump float fragDist = length(line.normal) * line.lineHalfWidth;\\nlowp float alpha = clamp(thinLineFactor * (line.lineHalfWidth - fragDist) / (u_blur + thinLineFactor - 1.0), 0.0, 1.0);\\nlowp vec4 out_color = getLineColor(line) * alpha;\\n#ifdef HIGHLIGHT\\nout_color.a = step(1.0 / 255.0, out_color.a);\\n#endif\\n#ifdef ID\\nif (out_color.a < 1.0 / 255.0) {\\ndiscard;\\n}\\nout_color = vec4(line.id, 0.0);\\n#endif\\nreturn out_color;\\n}\",\"line.vert\":\"float getBaseLineHalfWidth(in float lineHalfWidth, in float referenceHalfWidth) {\\n#ifdef VV_SIZE\\nfloat lineWidth = 2.0 * lineHalfWidth;\\nreturn 0.5 * (lineHalfWidth / referenceHalfWidth) * getSize(lineWidth);\\n#else\\nreturn lineHalfWidth;\\n#endif\\n}\\nfloat getLineHalfWidth(in float baseWidth, in float aa) {\\nfloat halfWidth = max(baseWidth + aa, 0.45) + 0.1 * aa;\\n#ifdef HIGHLIGHT\\nhalfWidth = max(halfWidth, 2.0);\\n#endif\\nreturn halfWidth;\\n}\\nvec2 getDist(in vec2 offset, in float halfWidth) {\\nfloat thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(halfWidth, THIN_LINE_HALF_WIDTH), 1.0);\\nreturn thinLineFactor * halfWidth * offset;\\n}\\nLineData buildLine(\\nout vec3 out_pos,\\nin vec3 in_id,\\nin vec2 in_pos,\\nin vec4 in_color,\\nin vec2 in_offset,\\nin vec2 in_normal,\\nin float in_accumulatedDist,\\nin float in_lineHalfWidth,\\nin float in_bitSet,\\nin vec4 in_tlbr,\\nin vec2 in_segmentDirection,\\nin float in_referenceHalfWidth\\n)\\n{\\nfloat aa        = 0.5 * u_antialiasing;\\nfloat baseWidth = getBaseLineHalfWidth(in_lineHalfWidth, in_referenceHalfWidth);\\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\\nfloat z         = 2.0 * step(baseWidth, 0.0);\\nvec2  dist      = getDist(in_offset, halfWidth);\\nvec3  offset    = u_displayViewMat3 * vec3(dist, 0.0);\\nvec3  pos       = u_dvsMat3 * vec3(in_pos * POSITION_PRECISION, 1.0) + offset;\\n#ifdef OUTLINED_FILL\\nvec4  color     = in_color;\\nfloat opacity   = 1.0;\\n#else\\nvec4  color     = getColor(in_color, in_bitSet, 0);\\nfloat opacity   = getOpacity();\\n#ifdef SDF\\nconst float SDF_PATTERN_HALF_WIDTH = 15.5;\\nfloat scaleDash = getBit(in_bitSet, BITSET_LINE_SCALE_DASH);\\nfloat lineWidthRatio = (scaleDash * max(halfWidth - 0.55 * u_antialiasing, 0.25) + (1.0 - scaleDash)) / SDF_PATTERN_HALF_WIDTH;\\n#endif\\n#endif\\nout_pos = vec3(pos.xy, z);\\nreturn LineData(\\ncolor,\\nin_normal,\\nhalfWidth,\\nopacity,\\n#ifndef OUTLINED_FILL\\n#ifdef PATTERN\\nin_tlbr / u_mosaicSize.xyxy,\\nvec2(in_tlbr.z - in_tlbr.x, in_tlbr.w - in_tlbr.y),\\n#endif\\n#ifdef SDF\\nlineWidthRatio,\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nin_accumulatedDist * u_zoomFactor + dot(in_segmentDirection, dist),\\n#endif\\n#endif\\nnorm(in_id)\\n);\\n}\"}},text:{\"common.glsl\":\"uniform highp vec2 u_mosaicSize;\\nvarying highp vec3 v_id;\\nvarying mediump vec3 v_pos;\\nvarying lowp float v_opacity;\\nvarying lowp vec4 v_color;\\nvarying highp vec2 v_tex;\\nvarying mediump float v_antialiasingWidth;\\nvarying mediump float v_edgeDistanceOffset;\\nvarying lowp float v_transparency;\",\"text.frag\":\"precision mediump float;\\n#include <materials/text/common.glsl>\\nuniform lowp sampler2D u_texture;\\nvoid main()\\n{\\nfloat SDF_CUTOFF = (2.0 / 8.0);\\nfloat SDF_BASE_EDGE_DIST = 1.0 - SDF_CUTOFF;\\nlowp float dist = texture2D(u_texture, v_tex).a;\\nmediump float edge = SDF_BASE_EDGE_DIST - v_edgeDistanceOffset;\\n#ifdef HIGHLIGHT\\nedge /= 2.0;\\n#endif\\nlowp float aa = v_antialiasingWidth;\\nlowp float alpha = smoothstep(edge - aa, edge + aa, dist);\\ngl_FragColor = alpha * v_color * v_opacity;\\n#ifdef ID\\nif (gl_FragColor.a < 1.0 / 255.0) {\\ndiscard;\\n}\\ngl_FragColor = vec4(v_id, 0.0);\\n#endif\\n}\",\"text.vert\":\"precision highp float;\\n#include <materials/utils.glsl>\\n#include <materials/vcommon.glsl>\\n#include <materials/text/common.glsl>\\nattribute vec4 a_color;\\nattribute vec4 a_haloColor;\\nattribute vec4 a_texFontSize;\\nattribute vec4 a_aux;\\nattribute vec2 a_zoomRange;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nuniform float u_isHalo;\\nfloat getTextSize(inout vec2 offset, inout float baseSize, in float referenceSize) {\\n#ifdef VV_SIZE\\nfloat r = getSize(baseSize) / referenceSize;\\nbaseSize *= r;\\noffset.xy *= r;\\nreturn baseSize;\\n#endif\\nreturn baseSize;\\n}\\nvoid main()\\n{\\nINIT;\\nfloat a_referenceSize = a_aux.z * a_aux.z / 256.0;\\nfloat a_bitSet        = a_aux.w;\\nfloat a_fontSize      = a_texFontSize.z;\\nvec2  a_offset        = a_vertexOffset * OFFSET_PRECISION;\\nvec3  in_pos        = vec3(a_pos * POSITION_PRECISION, 1.0);\\nfloat fontSize      = getTextSize(a_offset, a_fontSize, a_referenceSize);\\nfloat fontScale     = fontSize / SDF_FONT_SIZE;\\nvec3  offset        = getRotation() * vec3(a_offset, 0.0);\\nmat3  extrudeMatrix = getBit(a_bitSet, 0) == 1.0 ? u_displayViewMat3 : u_displayMat3;\\nv_color   = u_isHalo * a_haloColor + (1.0 - u_isHalo) * getColor(a_color, a_bitSet, 1);\\nv_opacity = getOpacity();\\nv_id      = norm(a_id);\\nv_tex     = a_texCoords / u_mosaicSize;\\nv_pos     = u_dvsMat3 * in_pos + extrudeMatrix * offset;\\nv_edgeDistanceOffset = u_isHalo * OUTLINE_SCALE * a_texFontSize.w / fontScale / MAX_SDF_DISTANCE;\\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\\ngl_Position =  vec4(clip(v_color, v_pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\"},\"utils.glsl\":\"float rshift(in float u32, in int amount) {\\nreturn floor(u32 / pow(2.0, float(amount)));\\n}\\nfloat getBit(in float bitset, in int bitIndex) {\\nfloat offset = pow(2.0, float(bitIndex));\\nreturn mod(floor(bitset / offset), 2.0);\\n}\\nfloat getFilterBit(in float bitset, in int bitIndex) {\\nreturn getBit(bitset, bitIndex + 1);\\n}\\nfloat getHighlightBit(in float bitset) {\\nreturn getBit(bitset, 0);\\n}\\nhighp vec3 unpackDisplayIdTexel(in highp vec3 bitset) {\\nfloat isAggregate = getBit(bitset.b, 7);\\nreturn (1.0 - isAggregate) * bitset + isAggregate * (vec3(bitset.rgb) - vec3(0.0, 0.0, float(0x80)));\\n}\\nvec4 unpack(in float u32) {\\nfloat r = mod(rshift(u32, 0), 255.0);\\nfloat g = mod(rshift(u32, 8), 255.0);\\nfloat b = mod(rshift(u32, 16), 255.0);\\nfloat a = mod(rshift(u32, 24), 255.0);\\nreturn vec4(r, g, b, a);\\n}\\nvec3 norm(in vec3 v) {\\nreturn v /= 255.0;\\n}\\nvec4 norm(in vec4 v) {\\nreturn v /= 255.0;\\n}\\nfloat max4(vec4 target) {\\nreturn max(max(max(target.x, target.y), target.z), target.w);\\n}\\nvec2 unpack_u8_nf32(vec2 bytes) {\\nreturn (bytes - 127.0) / 127.0;\\n}\",\"vcommon.glsl\":\"#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/attributeData.glsl>\\n#include <materials/vv.glsl>\\nattribute vec2 a_pos;\\nattribute highp vec3 a_id;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp mat3 u_displayMat3;\\nuniform highp mat3 u_displayViewMat3;\\nuniform highp float u_pixelRatio;\\nuniform mediump float u_zoomFactor;\\nuniform mediump float u_antialiasing;\\nuniform mediump float u_currentZoom;\\nvec4 VV_ADATA = vec4(0.0);\\nvoid loadVisualVariableData(inout vec4 target) {\\n#ifdef OES_TEXTURE_FLOAT\\ntarget.rgba = getAttributeData2(a_id);\\n#else\\nvec4 data0 = getAttributeData2(a_id);\\nvec4 data1 = getAttributeData3(a_id);\\ntarget.r = u88VVToFloat(data0.rg * 255.0);\\ntarget.g = u88VVToFloat(data0.ba * 255.0);\\ntarget.b = u88VVToFloat(data1.rg * 255.0);\\ntarget.a = u88VVToFloat(data1.ba * 255.0);\\n#endif\\n}\\n#ifdef VV\\n#define INIT loadVisualVariableData(VV_ADATA)\\n#else\\n#define INIT\\n#endif\\nvec4 getColor(in vec4 a_color, in float a_bitSet, int index) {\\n#ifdef VV_COLOR\\nfloat isColorLocked   = getBit(a_bitSet, index);\\nreturn getVVColor(VV_ADATA[ATTR_VV_COLOR], a_color, isColorLocked);\\n#else\\nreturn a_color;\\n#endif\\n}\\nfloat getOpacity() {\\n#ifdef VV_OPACITY\\nreturn getVVOpacity(VV_ADATA[ATTR_VV_OPACITY]);\\n#else\\nreturn 1.0;\\n#endif\\n}\\nfloat getSize(in float in_size) {\\n#ifdef VV_SIZE\\nreturn getVVSize(in_size, VV_ADATA[ATTR_VV_SIZE]);\\n#else\\nreturn in_size;\\n#endif\\n}\\nmat3 getRotation() {\\n#ifdef VV_ROTATION\\nreturn getVVRotationMat3(mod(VV_ADATA[ATTR_VV_ROTATION], 360.0));\\n#else\\nreturn mat3(1.0);\\n#endif\\n}\\nfloat getFilterFlags() {\\n#ifdef IGNORES_SAMPLER_PRECISION\\nreturn ceil(getAttributeData0(a_id).x * 255.0);\\n#else\\nreturn getAttributeData0(a_id).x * 255.0;\\n#endif\\n}\\nvec4 getAnimationState() {\\nreturn getAttributeData1(a_id);\\n}\\nfloat getMinZoom() {\\nvec4 data0 = getAttributeData0(a_id) * 255.0;\\nreturn data0.g;\\n}\\nmat3 getMatrix(float isMapAligned) {\\nreturn isMapAligned * u_displayViewMat3 + (1.0 - isMapAligned) * u_displayMat3;\\n}\\nvec3 clip(inout vec4 color, inout vec3 pos, in float filterFlags, in vec2 minMaxZoom) {\\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 0));\\n#ifdef INSIDE\\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 1));\\n#elif defined(OUTSIDE)\\npos.z += 2.0 * getFilterBit(filterFlags, 1);\\n#elif defined(HIGHLIGHT)\\n#if !defined(HIGHLIGHT_ALL)\\npos.z += 2.0 * (1.0 - getHighlightBit(filterFlags));\\n#endif\\n#endif\\npos.z += 2.0 * (step(minMaxZoom.y, u_currentZoom) + (1.0 - step(minMaxZoom.x, u_currentZoom)));\\nreturn pos;\\n}\\nvec3 applyFilterLabels(inout vec4 color, inout vec3 pos, in float filterFlags) {\\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 0));\\n#ifndef OUTSIDE_LABELS_VISIBLE\\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 1));\\n#endif\\nreturn pos;\\n}\",\"vv.glsl\":\"#if defined(VV_SIZE_MIN_MAX_VALUE) || defined(VV_SIZE_SCALE_STOPS) || defined(VV_SIZE_FIELD_STOPS) || defined(VV_SIZE_UNIT_VALUE)\\n#define VV_SIZE\\n#endif\\n#if defined(VV_COLOR) || defined(VV_SIZE) || defined(VV_OPACITY) || defined(VV_ROTATION)\\n#define VV\\n#endif\\n#ifdef VV_COLOR\\nuniform highp float u_vvColorValues[8];\\nuniform vec4 u_vvColors[8];\\n#endif\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nuniform highp vec4 u_vvSizeMinMaxValue;\\n#endif\\n#ifdef VV_SIZE_SCALE_STOPS\\nuniform highp float u_vvSizeScaleStopsValue;\\n#endif\\n#ifdef VV_SIZE_FIELD_STOPS\\nuniform highp float u_vvSizeFieldStopsValues[6];\\nuniform float u_vvSizeFieldStopsSizes[6];\\n#endif\\n#ifdef VV_SIZE_UNIT_VALUE\\nuniform highp float u_vvSizeUnitValueWorldToPixelsRatio;\\n#endif\\n#ifdef VV_OPACITY\\nuniform highp float u_vvOpacityValues[8];\\nuniform float u_vvOpacities[8];\\n#endif\\n#ifdef VV_ROTATION\\nuniform lowp float u_vvRotationType;\\n#endif\\nbool isNan(float val) {\\nreturn (val == NAN_MAGIC_NUMBER);\\n}\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nfloat getVVMinMaxSize(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nfloat interpolationRatio = (sizeValue  - u_vvSizeMinMaxValue.x) / (u_vvSizeMinMaxValue.y - u_vvSizeMinMaxValue.x);\\ninterpolationRatio = clamp(interpolationRatio, 0.0, 1.0);\\nreturn u_vvSizeMinMaxValue.z + interpolationRatio * (u_vvSizeMinMaxValue.w - u_vvSizeMinMaxValue.z);\\n}\\n#endif\\n#ifdef VV_SIZE_FIELD_STOPS\\nconst int VV_SIZE_N = 6;\\nfloat getVVStopsSize(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nif (sizeValue <= u_vvSizeFieldStopsValues[0]) {\\nreturn u_vvSizeFieldStopsSizes[0];\\n}\\nfor (int i = 1; i < VV_SIZE_N; ++i) {\\nif (u_vvSizeFieldStopsValues[i] >= sizeValue) {\\nfloat f = (sizeValue - u_vvSizeFieldStopsValues[i-1]) / (u_vvSizeFieldStopsValues[i] - u_vvSizeFieldStopsValues[i-1]);\\nreturn mix(u_vvSizeFieldStopsSizes[i-1], u_vvSizeFieldStopsSizes[i], f);\\n}\\n}\\nreturn u_vvSizeFieldStopsSizes[VV_SIZE_N - 1];\\n}\\n#endif\\n#ifdef VV_SIZE_UNIT_VALUE\\nfloat getVVUnitValue(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nreturn u_vvSizeUnitValueWorldToPixelsRatio * sizeValue;\\n}\\n#endif\\n#ifdef VV_OPACITY\\nconst int VV_OPACITY_N = 8;\\nfloat getVVOpacity(float opacityValue) {\\nif (isNan(opacityValue)) {\\nreturn 1.0;\\n}\\nif (opacityValue <= u_vvOpacityValues[0]) {\\nreturn u_vvOpacities[0];\\n}\\nfor (int i = 1; i < VV_OPACITY_N; ++i) {\\nif (u_vvOpacityValues[i] >= opacityValue) {\\nfloat f = (opacityValue - u_vvOpacityValues[i-1]) / (u_vvOpacityValues[i] - u_vvOpacityValues[i-1]);\\nreturn mix(u_vvOpacities[i-1], u_vvOpacities[i], f);\\n}\\n}\\nreturn u_vvOpacities[VV_OPACITY_N - 1];\\n}\\n#endif\\n#ifdef VV_ROTATION\\nmat4 getVVRotation(float rotationValue) {\\nif (isNan(rotationValue)) {\\nreturn mat4(1, 0, 0, 0,\\n0, 1, 0, 0,\\n0, 0, 1, 0,\\n0, 0, 0, 1);\\n}\\nfloat rotation = rotationValue;\\nif (u_vvRotationType == 1.0) {\\nrotation = 90.0 - rotation;\\n}\\nfloat angle = C_DEG_TO_RAD * rotation;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nreturn mat4(cosA, sinA, 0, 0,\\n-sinA,  cosA, 0, 0,\\n0,     0, 1, 0,\\n0,     0, 0, 1);\\n}\\nmat3 getVVRotationMat3(float rotationValue) {\\nif (isNan(rotationValue)) {\\nreturn mat3(1, 0, 0,\\n0, 1, 0,\\n0, 0, 1);\\n}\\nfloat rotation = rotationValue;\\nif (u_vvRotationType == 1.0) {\\nrotation = 90.0 - rotation;\\n}\\nfloat angle = C_DEG_TO_RAD * -rotation;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nreturn mat3(cosA, -sinA, 0,\\nsinA, cosA, 0,\\n0,    0,    1);\\n}\\n#endif\\n#ifdef VV_COLOR\\nconst int VV_COLOR_N = 8;\\nvec4 getVVColor(float colorValue, vec4 fallback, float isColorLocked) {\\nif (isNan(colorValue) || isColorLocked == 1.0) {\\nreturn fallback;\\n}\\nif (colorValue <= u_vvColorValues[0]) {\\nreturn u_vvColors[0];\\n}\\nfor (int i = 1; i < VV_COLOR_N; ++i) {\\nif (u_vvColorValues[i] >= colorValue) {\\nfloat f = (colorValue - u_vvColorValues[i-1]) / (u_vvColorValues[i] - u_vvColorValues[i-1]);\\nreturn mix(u_vvColors[i-1], u_vvColors[i], f);\\n}\\n}\\nreturn u_vvColors[VV_COLOR_N - 1];\\n}\\n#endif\\nfloat getVVSize(in float size, in float vvSize)  {\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nreturn getVVMinMaxSize(vvSize, size);\\n#elif defined(VV_SIZE_SCALE_STOPS)\\nreturn u_vvSizeScaleStopsValue;\\n#elif defined(VV_SIZE_FIELD_STOPS)\\nfloat outSize = getVVStopsSize(vvSize, size);\\nreturn isNan(outSize) ? size : outSize;\\n#elif defined(VV_SIZE_UNIT_VALUE)\\nreturn getVVUnitValue(vvSize, size);\\n#else\\nreturn size;\\n#endif\\n}\"},\"post-processing\":{blit:{\"blit.frag\":\"precision mediump float;\\nuniform sampler2D u_texture;\\nvarying vec2 v_uv;\\nvoid main() {\\ngl_FragColor = texture2D(u_texture, v_uv);\\n}\"},bloom:{composite:{\"composite.frag\":\"precision mediump float;\\nvarying vec2 v_uv;\\nuniform sampler2D u_blurTexture1;\\nuniform sampler2D u_blurTexture2;\\nuniform sampler2D u_blurTexture3;\\nuniform sampler2D u_blurTexture4;\\nuniform sampler2D u_blurTexture5;\\nuniform float u_bloomStrength;\\nuniform float u_bloomRadius;\\nuniform float u_bloomFactors[NUMMIPS];\\nuniform vec3 u_bloomTintColors[NUMMIPS];\\nfloat lerpBloomFactor(const in float factor) {\\nfloat mirrorFactor = 1.2 - factor;\\nreturn mix(factor, mirrorFactor, u_bloomRadius);\\n}\\nvoid main() {\\ngl_FragColor = u_bloomStrength * (\\nlerpBloomFactor(u_bloomFactors[0]) * vec4(u_bloomTintColors[0], 1.0) * texture2D(u_blurTexture1, v_uv) +\\nlerpBloomFactor(u_bloomFactors[1]) * vec4(u_bloomTintColors[1], 1.0) * texture2D(u_blurTexture2, v_uv) +\\nlerpBloomFactor(u_bloomFactors[2]) * vec4(u_bloomTintColors[2], 1.0) * texture2D(u_blurTexture3, v_uv) +\\nlerpBloomFactor(u_bloomFactors[3]) * vec4(u_bloomTintColors[3], 1.0) * texture2D(u_blurTexture4, v_uv) +\\nlerpBloomFactor(u_bloomFactors[4]) * vec4(u_bloomTintColors[4], 1.0) * texture2D(u_blurTexture5, v_uv)\\n);\\n}\"},gaussianBlur:{\"gaussianBlur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nuniform vec2 u_direction;\\nvarying vec2 v_uv;\\n#define KERNEL_RADIUS RADIUS\\n#define SIGMA RADIUS\\nfloat gaussianPdf(in float x, in float sigma) {\\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\\n}\\nvoid main() {\\nvec2 invSize = 1.0 / u_texSize;\\nfloat fSigma = float(SIGMA);\\nfloat weightSum = gaussianPdf(0.0, fSigma);\\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\\nfloat x = float(i);\\nfloat w = gaussianPdf(x, fSigma);\\nvec2 uvOffset = u_direction * invSize * x;\\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\\npixelColorSum += (sample1 + sample2) * w;\\nweightSum += 2.0 * w;\\n}\\ngl_FragColor = pixelColorSum /weightSum;\\n}\"},luminosityHighPass:{\"luminosityHighPass.frag\":\"precision mediump float;\\nuniform sampler2D u_texture;\\nuniform vec3 u_defaultColor;\\nuniform float u_defaultOpacity;\\nuniform float u_luminosityThreshold;\\nuniform float u_smoothWidth;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 texel = texture2D(u_texture, v_uv);\\nvec3 luma = vec3(0.299, 0.587, 0.114);\\nfloat v = dot(texel.xyz, luma);\\nvec4 outputColor = vec4(u_defaultColor.rgb, u_defaultOpacity);\\nfloat alpha = smoothstep(u_luminosityThreshold, u_luminosityThreshold + u_smoothWidth, v);\\ngl_FragColor = mix(outputColor, texel, alpha);\\n}\"}},blur:{gaussianBlur:{\"gaussianBlur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nuniform vec2 u_direction;\\nuniform float u_sigma;\\nvarying vec2 v_uv;\\n#define KERNEL_RADIUS RADIUS\\nfloat gaussianPdf(in float x, in float sigma) {\\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\\n}\\nvoid main() {\\nvec2 invSize = 1.0 / u_texSize;\\nfloat fSigma = u_sigma;\\nfloat weightSum = gaussianPdf(0.0, fSigma);\\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\\nfloat x = float(i);\\nfloat w = gaussianPdf(x, fSigma);\\nvec2 uvOffset = u_direction * invSize * x;\\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\\npixelColorSum += (sample1 + sample2) * w;\\nweightSum += 2.0 * w;\\n}\\ngl_FragColor = pixelColorSum /weightSum;\\n}\"},\"radial-blur\":{\"radial-blur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nconst float sampleDist = 1.0;\\nconst float sampleStrength = 2.2;\\nvoid main(void) {\\nfloat samples[10];\\nsamples[0] = -0.08;\\nsamples[1] = -0.05;\\nsamples[2] = -0.03;\\nsamples[3] = -0.02;\\nsamples[4] = -0.01;\\nsamples[5] =  0.01;\\nsamples[6] =  0.02;\\nsamples[7] =  0.03;\\nsamples[8] =  0.05;\\nsamples[9] =  0.08;\\nvec2 dir = 0.5 - v_uv;\\nfloat dist = sqrt(dir.x * dir.x + dir.y * dir.y);\\ndir = dir / dist;\\nvec4 color = texture2D(u_colorTexture,v_uv);\\nvec4 sum = color;\\nfor (int i = 0; i < 10; i++) {\\nsum += texture2D(u_colorTexture, v_uv + dir * samples[i] * sampleDist);\\n}\\nsum *= 1.0 / 11.0;\\nfloat t = dist * sampleStrength;\\nt = clamp(t, 0.0, 1.0);\\ngl_FragColor = mix(color, sum, t);\\n}\"}},dra:{\"dra.frag\":\"precision mediump float;\\nuniform sampler2D u_minColor;\\nuniform sampler2D u_maxColor;\\nuniform sampler2D u_texture;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 minColor = texture2D(u_minColor, vec2(0.5));\\nvec4 maxColor = texture2D(u_maxColor, vec2(0.5));\\nvec4 color = texture2D(u_texture, v_uv);\\nvec3 minColorUnpremultiply = minColor.rgb / minColor.a;\\nvec3 maxColorUnpremultiply = maxColor.rgb / maxColor.a;\\nvec3 colorUnpremultiply = color.rgb / color.a;\\nvec3 range = maxColorUnpremultiply - minColorUnpremultiply;\\ngl_FragColor = vec4(color.a * (colorUnpremultiply - minColorUnpremultiply) / range, color.a);\\n}\",\"min-max\":{\"min-max.frag\":\"#extension GL_EXT_draw_buffers : require\\nprecision mediump float;\\n#define CELL_SIZE 2\\nuniform sampler2D u_minTexture;\\nuniform sampler2D u_maxTexture;\\nuniform vec2 u_srcResolution;\\nuniform vec2 u_dstResolution;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec2 srcPixel = floor(gl_FragCoord.xy) * float(CELL_SIZE);\\nvec2 onePixel = vec2(1.0) / u_srcResolution;\\nvec2 uv = (srcPixel + 0.5) / u_srcResolution;\\nvec4 minColor = vec4(1.0);\\nvec4 maxColor = vec4(0.0);\\nfor (int y = 0; y < CELL_SIZE; ++y) {\\nfor (int x = 0; x < CELL_SIZE; ++x) {\\nvec2 offset = uv + vec2(x, y) * onePixel;\\nminColor = min(minColor, texture2D(u_minTexture, offset));\\nmaxColor = max(maxColor, texture2D(u_maxTexture, offset));\\n}\\n}\\ngl_FragData[0] = minColor;\\ngl_FragData[1] = maxColor;\\n}\"}},\"drop-shadow\":{composite:{\"composite.frag\":\"precision mediump float;\\nuniform sampler2D u_layerFBOTexture;\\nuniform sampler2D u_blurTexture;\\nuniform vec4 u_shadowColor;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 layerColor = texture2D(u_layerFBOTexture, v_uv);\\nvec4 blurColor = texture2D(u_blurTexture, v_uv);\\ngl_FragColor = ((1.0 - layerColor.a) * blurColor.a * u_shadowColor + layerColor);\\n}\"},\"drop-shadow.vert\":\"precision mediump float;\\nattribute vec2 a_position;\\nuniform highp mat3 u_displayViewMat3;\\nuniform highp vec2 u_offset;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec3 offset = u_displayViewMat3 * vec3(u_offset, 0.0);\\ngl_Position = vec4(a_position, 0.0, 1.0) + vec4(offset, 0.0);\\nv_uv = (a_position + 1.0) / 2.0;\\n}\"},\"edge-detect\":{\"frei-chen\":{\"frei-chen.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nvarying vec2 v_uv;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[9];\\nconst mat3 g0 = mat3( 0.3535533845424652, 0, -0.3535533845424652, 0.5, 0, -0.5, 0.3535533845424652, 0, -0.3535533845424652 );\\nconst mat3 g1 = mat3( 0.3535533845424652, 0.5, 0.3535533845424652, 0, 0, 0, -0.3535533845424652, -0.5, -0.3535533845424652 );\\nconst mat3 g2 = mat3( 0, 0.3535533845424652, -0.5, -0.3535533845424652, 0, 0.3535533845424652, 0.5, -0.3535533845424652, 0 );\\nconst mat3 g3 = mat3( 0.5, -0.3535533845424652, 0, -0.3535533845424652, 0, 0.3535533845424652, 0, 0.3535533845424652, -0.5 );\\nconst mat3 g4 = mat3( 0, -0.5, 0, 0.5, 0, 0.5, 0, -0.5, 0 );\\nconst mat3 g5 = mat3( -0.5, 0, 0.5, 0, 0, 0, 0.5, 0, -0.5 );\\nconst mat3 g6 = mat3( 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.6666666865348816, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204 );\\nconst mat3 g7 = mat3( -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, 0.6666666865348816, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408 );\\nconst mat3 g8 = mat3( 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408 );\\nvoid main() {\\nG[0] = g0,\\nG[1] = g1,\\nG[2] = g2,\\nG[3] = g3,\\nG[4] = g4,\\nG[5] = g5,\\nG[6] = g6,\\nG[7] = g7,\\nG[8] = g8;\\nmat3 I;\\nfloat cnv[9];\\nvec3 sample;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D(u_colorTexture, v_uv + texel * vec2(i - 1.0,j - 1.0)).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 9; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\nfloat M = (cnv[0] + cnv[1]) + (cnv[2] + cnv[3]);\\nfloat S = (cnv[4] + cnv[5]) + (cnv[6] + cnv[7]) + (cnv[8] + M);\\ngl_FragColor = vec4(vec3(sqrt(M / S)), texture2D(u_colorTexture, v_uv).a);\\n}\"},sobel:{\"sobel.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nuniform vec2 u_texSize;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[2];\\nconst mat3 g0 = mat3( 1.0, 2.0, 1.0, 0.0, 0.0, 0.0, -1.0, -2.0, -1.0 );\\nconst mat3 g1 = mat3( 1.0, 0.0, -1.0, 2.0, 0.0, -2.0, 1.0, 0.0, -1.0 );\\nvoid main() {\\nmat3 I;\\nfloat cnv[2];\\nvec3 sample;\\nG[0] = g0;\\nG[1] = g1;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 2; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\ngl_FragColor = vec4(vec3(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1])), texture2D(u_colorTexture, v_uv).a);\\n}\"}},\"edge-enhance\":{\"edge-enhance.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nuniform vec2 u_texSize;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[2];\\nconst mat3 g0 = mat3( 1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, 0.0, -1.0 );\\nconst mat3 g1 = mat3( 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -1.0, -1.0, -1.0 );\\nvoid main() {\\nmat3 I;\\nfloat cnv[2];\\nvec3 sample;\\nG[0] = g0;\\nG[1] = g1;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 2; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\nvec4 color = texture2D(u_colorTexture, v_uv);\\ngl_FragColor = vec4(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1]) * color);\\n}\"},filterEffect:{\"filterEffect.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform mat4 u_coefficients;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 color = texture2D(u_colorTexture, v_uv);\\nvec4 rgbw = u_coefficients * vec4(color.a > 0.0 ? color.rgb / color.a : vec3(0.0), 1.0);\\nfloat a = color.a;\\ngl_FragColor = vec4(a * rgbw.rgb, a);\\n}\"},pp:{\"pp.vert\":\"precision mediump float;\\nattribute vec2 a_position;\\nvarying vec2 v_uv;\\nvoid main() {\\ngl_Position = vec4(a_position, 0.0, 1.0);\\nv_uv = (a_position + 1.0) / 2.0;\\n}\"}},raster:{bitmap:{\"bitmap.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\nuniform sampler2D u_texture;\\nuniform highp vec2 u_coordScale;\\nuniform lowp float u_opacity;\\n#include <filtering/bicubic.glsl>\\nvoid main() {\\n#ifdef BICUBIC\\nvec4 color = sampleBicubicBSpline(u_texture, v_texcoord, u_coordScale);\\n#else\\nvec4 color = texture2D(u_texture, v_texcoord);\\n#endif\\nfloat alpha = u_opacity * color.a;\\ngl_FragColor = vec4(alpha * color.rgb, alpha);\\n}\",\"bitmap.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\"},common:{\"common.glsl\":\"uniform sampler2D u_image;\\nuniform int u_bandCount;\\nuniform bool u_isFloatTexture;\\nuniform bool u_flipY;\\nuniform float u_opacity;\\nuniform int u_resampling;\\nuniform vec2 u_srcImageSize;\\n#ifdef APPLY_PROJECTION\\n#include <raster/common/projection.glsl>\\n#endif\\n#ifdef BICUBIC\\n#include <filtering/bicubic.glsl>\\n#endif\\n#ifdef BILINEAR\\n#include <filtering/bilinear.glsl>\\n#endif\\nvec2 getPixelLocation(vec2 coords) {\\nvec2 targetLocation = u_flipY ? vec2(coords.s, 1.0 - coords.t) : coords;\\n#ifdef APPLY_PROJECTION\\ntargetLocation = projectPixelLocation(targetLocation);\\n#endif\\nreturn targetLocation;\\n}\\nbool isOutside(vec2 coords){\\nif (coords.t>1.00001 ||coords.t<-0.00001 || coords.s>1.00001 ||coords.s<-0.00001) {\\nreturn true;\\n} else {\\nreturn false;\\n}\\n}\\nvec4 getPixel(vec2 pixelLocation) {\\n#ifdef BICUBIC\\nvec4 color = sampleBicubicBSpline(u_image, pixelLocation, u_srcImageSize);\\n#elif defined(BILINEAR)\\nvec4 color = sampleBilinear(u_image, pixelLocation, u_srcImageSize);\\n#else\\nvec4 color = texture2D(u_image, pixelLocation);\\n#endif\\nreturn color;\\n}\",\"contrastBrightness.glsl\":\"uniform float u_contrastOffset;\\nuniform float u_brightnessOffset;\\nvec4 adjustContrastBrightness(vec4 currentPixel, bool isFloat) {\\nvec4 pixelValue = isFloat ? currentPixel * 255.0 : currentPixel;\\nfloat maxI = 255.0;\\nfloat mid = 128.0;\\nfloat c = u_contrastOffset;\\nfloat b = u_brightnessOffset;\\nvec4 v;\\nif (c > 0.0 && c < 100.0) {\\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) / (2.0 * (100.0 - c)) + mid;\\n} else if (c <= 0.0 && c > -100.0) {\\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) * (100.0 + c) / 20000.0 + mid;\\n} else if (c == 100.0) {\\nv = (200.0 * pixelValue - 100.0 * maxI + (maxI + 1.0) * (100.0 - c) + 2.0 * maxI * b);\\nv = (sign(v) + 1.0) / 2.0;\\n} else if (c == -100.0) {\\nv = vec4(mid, mid, mid, currentPixel.a);\\n}\\nreturn vec4(v.r / 255.0, v.g / 255.0, v.b / 255.0, currentPixel.a);\\n}\",\"projection.glsl\":\"uniform sampler2D u_transformGrid;\\nuniform vec2 u_transformSpacing;\\nuniform vec2 u_transformGridSize;\\nuniform vec2 u_targetImageSize;\\nvec2 projectPixelLocation(vec2 coords) {\\nvec2 index_image = floor(coords * u_targetImageSize);\\nvec2 oneTransformPixel = vec2(0.25 / u_transformGridSize.s, 1.0 / u_transformGridSize.t);\\nvec2 index_transform = floor(index_image / u_transformSpacing) / u_transformGridSize;\\nvec2 pos = fract((index_image + vec2(0.5, 0.5)) / u_transformSpacing);\\nvec2 srcLocation;\\nvec2 transform_location = index_transform + oneTransformPixel * 0.5;\\nif (pos.s <= pos.t) {\\nvec4 ll_abc = texture2D(u_transformGrid, vec2(transform_location.s, transform_location.t));\\nvec4 ll_def = texture2D(u_transformGrid, vec2(transform_location.s + oneTransformPixel.s, transform_location.t));\\nsrcLocation.s = dot(ll_abc.rgb, vec3(pos, 1.0));\\nsrcLocation.t = dot(ll_def.rgb, vec3(pos, 1.0));\\n} else {\\nvec4 ur_abc = texture2D(u_transformGrid, vec2(transform_location.s + 2.0 * oneTransformPixel.s, transform_location.t));\\nvec4 ur_def = texture2D(u_transformGrid, vec2(transform_location.s + 3.0 * oneTransformPixel.s, transform_location.t));\\nsrcLocation.s = dot(ur_abc.rgb, vec3(pos, 1.0));\\nsrcLocation.t = dot(ur_def.rgb, vec3(pos, 1.0));\\n}\\nreturn srcLocation;\\n}\"},flow:{\"flow.frag\":\"precision highp float;\\nvarying float v_side;\\nvarying float v_time;\\nvarying float v_totalTime;\\nvarying float v_timeSeed;\\nuniform float u_time;\\nuniform float u_fadeDuration;\\nuniform float u_lineSpeed;\\nuniform vec4 u_lineColor;\\nuniform float u_lineHalfWidth;\\nvoid main(void) {\\nvec4 color = u_lineColor;\\nfloat edgeWidth = min(2.0 * u_lineHalfWidth - 1.0, 1.0);\\nfloat edgeStart = (u_lineHalfWidth - edgeWidth) / u_lineHalfWidth;\\nif (edgeStart < 0.95) {\\nfloat s = step(edgeStart, abs(v_side));\\ncolor.a *= (1.0 - s) + s * (1.0 - (abs(v_side) - edgeStart) / (1.0 - edgeStart));\\n}\\nfloat t = mod(v_timeSeed * (v_totalTime + u_fadeDuration) + u_time * u_lineSpeed, v_totalTime + u_fadeDuration) - v_time;\\ncolor.a *= step(0.0, t) * exp(-2.3 * t / u_fadeDuration);\\ncolor.rgb *= color.a;\\ngl_FragColor = color;\\n}\",\"flow.vert\":\"precision highp float;\\nattribute vec3 a_positionAndSide;\\nattribute vec3 a_timeInfo;\\nattribute vec2 a_extrude;\\nuniform mat3 u_dvsMat3;\\nuniform mat3 u_displayViewMat3;\\nuniform float u_lineHalfWidth;\\nvarying float v_side;\\nvarying float v_time;\\nvarying float v_totalTime;\\nvarying float v_timeSeed;\\nvoid main(void) {\\nvec2 position = a_positionAndSide.xy;\\nfloat side = a_positionAndSide.z;\\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(a_extrude * u_lineHalfWidth, 0.0)).xy;\\ngl_Position = vec4(xy, 0.0, 1.0);\\nv_side = side;\\nv_time = a_timeInfo.x;\\nv_totalTime = a_timeInfo.y;\\nv_timeSeed = a_timeInfo.z;\\n}\"},hillshade:{\"hillshade.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nuniform int u_hillshadeType;\\nuniform float u_sinZcosAs[6];\\nuniform float u_sinZsinAs[6];\\nuniform float u_cosZs[6];\\nuniform float u_weights[6];\\nuniform vec2 u_factor;\\nuniform float u_minValue;\\nuniform float u_maxValue;\\n#include <raster/lut/colorize.glsl>\\nfloat getNeighborHoodAlpha(float a, float b, float c, float d, float e, float f, float g, float h, float i){\\nif (a == 0.0 || a == 0.0 || a==0.0 || a == 0.0 || a == 0.0 || a==0.0 || a == 0.0 || a == 0.0 || a==0.0) {\\nreturn 0.0;\\n}\\nelse {\\nreturn e;\\n}\\n}\\nvec3 rgb2hsv(vec3 c) {\\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\\nfloat d = q.x - min(q.w, q.y);\\nfloat e = 1.0e-10;\\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\\n}\\nvec3 hsv2rgb(vec3 c) {\\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\nvec4 overlay(float val, float minValue, float maxValue, float hillshade) {\\nval = clamp((val - minValue) / (maxValue - minValue), 0.0, 1.0);\\nvec4 rgb = colorize(vec4(val, val, val, 1.0), 255.0);\\nvec3 hsv = rgb2hsv(rgb.xyz);\\nhsv.z = hillshade;\\nreturn vec4(hsv2rgb(hsv), 1.0) * rgb.a;\\n}\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\nif (currentPixel.a == 0.0) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec2 axy = vec2(-1.0, -1.0);\\nvec2 bxy = vec2(0.0, -1.0);\\nvec2 cxy = vec2(1.0, -1.0);\\nvec2 dxy = vec2(-1.0, 0.0);\\nvec2 fxy = vec2(1.0, 0.0);\\nvec2 gxy = vec2(-1.0, 1.0);\\nvec2 hxy = vec2(0.0, 1.0);\\nvec2 ixy = vec2(1.0, 1.0);\\nvec2 onePixel = 1.0 / u_srcImageSize;\\nif (pixelLocation.s < onePixel.s) {\\naxy[0] = 1.0;\\ndxy[0] = 1.0;\\ngxy[0] = 1.0;\\n}\\nif (pixelLocation.t < onePixel.t) {\\naxy[1] = 1.0;\\nbxy[1] = 1.0;\\ncxy[1] = 1.0;\\n}\\nif (pixelLocation.s > 1.0 - onePixel.s) {\\ncxy[0] = -1.0;\\nfxy[0] = -1.0;\\nixy[0] = -1.0;\\n}\\nif (pixelLocation.t > 1.0 - onePixel.t) {\\ngxy[1] = -1.0;\\nhxy[1] = -1.0;\\nixy[1] = -1.0;\\n}\\nvec4 va = texture2D(u_image, pixelLocation + onePixel * axy);\\nvec4 vb = texture2D(u_image, pixelLocation + onePixel * bxy);\\nvec4 vc = texture2D(u_image, pixelLocation + onePixel * cxy);\\nvec4 vd = texture2D(u_image, pixelLocation + onePixel * dxy);\\nvec4 ve = texture2D(u_image, pixelLocation);\\nvec4 vf = texture2D(u_image, pixelLocation + onePixel * fxy);\\nvec4 vg = texture2D(u_image, pixelLocation + onePixel * gxy);\\nvec4 vh = texture2D(u_image, pixelLocation + onePixel * hxy);\\nvec4 vi = texture2D(u_image, pixelLocation + onePixel * ixy);\\nfloat dzx = (vc + 2.0 * vf + vi - va - 2.0 * vd - vg).r * u_factor.s;\\nfloat dzy = (vg + 2.0 * vh + vi - va - 2.0 * vb - vc).r * u_factor.t;\\nfloat dzd = sqrt(1.0 + dzx * dzx + dzy * dzy);\\nfloat hillshade = 0.0;\\nif (u_hillshadeType == 0){\\nfloat cosDelta = u_sinZsinAs[0] * dzy - u_sinZcosAs[0] * dzx;\\nfloat z = (u_cosZs[0] + cosDelta) / dzd;\\nif (z < 0.0)  z = 0.0;\\nhillshade = z;\\n} else {\\nfor (int k = 0; k < 6; k++) {\\nfloat cosDelta = u_sinZsinAs[k] * dzy - u_sinZcosAs[k] * dzx;\\nfloat z = (u_cosZs[k] + cosDelta) / dzd;\\nif (z < 0.0) z = 0.0;\\nhillshade = hillshade + z * u_weights[k];\\nif (k == 5) break;\\n}\\n}\\nfloat alpha = getNeighborHoodAlpha(va.a, vb.a, vc.a, vd.a, ve.a, vf.a, vg.a, vh.a, vi.a);\\n#ifdef APPLY_COLORMAP\\ngl_FragColor = overlay(ve.r, u_minValue, u_maxValue, hillshade) * alpha * u_opacity;\\n#else\\ngl_FragColor = vec4(hillshade, hillshade, hillshade, 1.0) * alpha * u_opacity;\\n#endif\\n}\",\"hillshade.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\"},lut:{\"colorize.glsl\":\"uniform sampler2D u_colormap;\\nuniform float u_colormapOffset;\\nuniform float u_colormapMaxIndex;\\nvec4 colorize(vec4 currentPixel, float scaleFactor) {\\nfloat clrIndex = clamp(currentPixel.r * scaleFactor - u_colormapOffset, 0.0, u_colormapMaxIndex);\\nvec2 clrPosition = vec2((clrIndex + 0.5) / (u_colormapMaxIndex + 1.0), 0.0);\\nvec4 color = texture2D(u_colormap, clrPosition);\\nvec4 result = vec4(color.rgb, color.a * currentPixel.a);\\nreturn result;\\n}\",\"lut.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\n#include <raster/lut/colorize.glsl>\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\nvec4 result = colorize(currentPixel, 1.0);\\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * u_opacity;\\n}\",\"lut.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform highp float u_scale;\\nuniform highp vec2 u_offset;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos * u_scale + u_offset;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\"},magdir:{\"magdir.frag\":\"precision mediump float;\\nvarying vec4 v_color;\\nuniform lowp float u_opacity;\\nvoid main() {\\ngl_FragColor = v_color * u_opacity;\\n}\",\"magdir.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nattribute vec2 a_offset;\\nattribute vec2 a_vv;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform vec2 u_symbolSize;\\nuniform vec2 u_symbolPercentRange;\\nuniform vec2 u_dataRange;\\nuniform float u_rotation;\\nuniform vec4 u_colors[12];\\nvarying vec4 v_color;\\nvoid main()\\n{\\nfloat angle = a_offset.y + u_rotation;\\n#ifndef ROTATION_GEOGRAPHIC\\nangle = 3.14159265359 * 2.0 - angle - 3.14159265359 / 2.0;\\n#endif\\nvec2 offset = vec2(cos(angle), sin(angle)) * a_offset.x;\\n#ifdef DATA_RANGE\\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\\n#else\\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\\n#endif\\nvec2 pos = a_pos + offset * sizePercentage * u_symbolSize;\\nv_color = u_colors[int(a_vv.x)];\\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\\n}\"},reproject:{\"reproject.frag\":\"precision mediump float;\\nvarying vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\\n}\",\"reproject.vert\":\"precision mediump float;\\nattribute vec2 a_position;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_position;\\ngl_Position = vec4(2.0 * (a_position - 0.5), 0.0, 1.0);\\n}\"},scalar:{\"scalar.frag\":\"precision mediump float;\\nuniform lowp float u_opacity;\\nvarying vec2 v_pos;\\nconst vec4 outlineColor = vec4(0.2, 0.2, 0.2, 1.0);\\nconst float outlineSize = 0.02;\\nconst float innerRadius = 0.25;\\nconst float outerRadius = 0.42;\\nconst float innerSquareLength = 0.15;\\nvoid main() {\\nmediump float dist = length(v_pos);\\nmediump float fillalpha1 = smoothstep(outerRadius, outerRadius + outlineSize, dist);\\nfillalpha1 *= (1.0-smoothstep(outerRadius + outlineSize, outerRadius + 0.1 + outlineSize, dist));\\n#ifdef INNER_CIRCLE\\nmediump float fillalpha2 = smoothstep(innerRadius, innerRadius + outlineSize, dist);\\nfillalpha2 *= (1.0-smoothstep(innerRadius + outlineSize, innerRadius + 0.1 + outlineSize, dist));\\n#else\\nmediump float fillalpha2 = (abs(v_pos.x) < innerSquareLength ? 1.0 : 0.0) * (abs(v_pos.y) < innerSquareLength ? 1.0 : 0.0);\\n#endif\\ngl_FragColor = (fillalpha2 + fillalpha1) * outlineColor * u_opacity;\\n}\",\"scalar.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nattribute vec2 a_offset;\\nattribute vec2 a_vv;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform vec2 u_symbolSize;\\nuniform vec2 u_symbolPercentRange;\\nuniform vec2 u_dataRange;\\nvarying vec2 v_pos;\\nvoid main()\\n{\\n#ifdef DATA_RANGE\\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\\n#else\\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\\n#endif\\nvec2 size = u_symbolSize * sizePercentage;\\nvec2 pos = a_pos + a_offset * size;\\nv_pos = a_offset;\\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\\n}\"},stretch:{\"stretch.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nuniform float u_minCutOff[3];\\nuniform float u_maxCutOff[3];\\nuniform float u_minOutput;\\nuniform float u_maxOutput;\\nuniform float u_factor[3];\\nuniform bool u_useGamma;\\nuniform float u_gamma[3];\\nuniform float u_gammaCorrection[3];\\n#include <raster/lut/colorize.glsl>\\nfloat stretchOneValue(float val, float minCutOff, float maxCutOff, float minOutput, float maxOutput, float factor, bool useGamma, float gamma, float gammaCorrection) {\\nif (val >= maxCutOff) {\\nreturn maxOutput;\\n} else if (val <= minCutOff) {\\nreturn minOutput;\\n}\\nfloat stretchedVal;\\nif (useGamma) {\\nfloat tempf = 1.0;\\nfloat outRange = maxOutput - minOutput;\\nfloat relativeVal = (val - minCutOff) / (maxCutOff - minCutOff);\\nif (gamma > 1.0) {\\ntempf -= pow(1.0 / outRange, relativeVal * gammaCorrection);\\n}\\nstretchedVal = (tempf * outRange * pow(relativeVal, 1.0 / gamma) + minOutput) / 255.0;\\n} else {\\nstretchedVal = minOutput + (val - minCutOff) * factor;\\n}\\nreturn stretchedVal;\\n}\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\n#ifdef NOOP\\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\\nreturn;\\n#endif\\nif (u_bandCount == 1) {\\nfloat grayVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\\n#ifdef APPLY_COLORMAP\\nvec4 result = colorize(vec4(grayVal, grayVal, grayVal, 1.0), u_useGamma ? 255.0 : 1.0);\\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * currentPixel.a * u_opacity;\\n#else\\ngl_FragColor = vec4(grayVal, grayVal, grayVal, 1.0) * currentPixel.a * u_opacity;\\n#endif\\n} else {\\nfloat redVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\\nfloat greenVal = stretchOneValue(currentPixel.g, u_minCutOff[1], u_maxCutOff[1], u_minOutput, u_maxOutput, u_factor[1], u_useGamma, u_gamma[1], u_gammaCorrection[1]);\\nfloat blueVal = stretchOneValue(currentPixel.b, u_minCutOff[2], u_maxCutOff[2], u_minOutput, u_maxOutput, u_factor[2], u_useGamma, u_gamma[2], u_gammaCorrection[2]);\\ngl_FragColor = vec4(redVal, greenVal, blueVal, 1.0) * currentPixel.a * u_opacity;\\n}\\n}\",\"stretch.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform highp float u_scale;\\nuniform highp vec2 u_offset;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos * u_scale + u_offset;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\"}},stencil:{\"stencil.frag\":\"void main() {\\ngl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\\n}\",\"stencil.vert\":\"attribute vec2 a_pos;\\nvoid main() {\\ngl_Position = vec4(a_pos, 0.0, 1.0);\\n}\"},tileInfo:{\"tileInfo.frag\":\"uniform mediump sampler2D u_texture;\\nvarying mediump vec2 v_tex;\\nvoid main(void) {\\nlowp vec4 color = texture2D(u_texture, v_tex);\\ngl_FragColor = 0.75 * color;\\n}\",\"tileInfo.vert\":\"attribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform mediump float u_depth;\\nuniform mediump vec2 u_coord_ratio;\\nuniform mediump vec2 u_delta;\\nuniform mediump vec2 u_dimensions;\\nvarying mediump vec2 v_tex;\\nvoid main() {\\nmediump vec2 offset = u_coord_ratio * vec2(u_delta + a_pos * u_dimensions);\\nvec3 v_pos = u_dvsMat3 * vec3(offset, 1.0);\\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\\nv_tex = a_pos;\\n}\"},util:{\"encoding.glsl\":\"const vec4 rgba2float_factors = vec4(\\n255.0 / (256.0),\\n255.0 / (256.0 * 256.0),\\n255.0 / (256.0 * 256.0 * 256.0),\\n255.0 / (256.0 * 256.0 * 256.0 * 256.0)\\n);\\nfloat rgba2float(vec4 rgba) {\\nreturn dot(rgba, rgba2float_factors);\\n}\"}};export{e as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport\"../../../../../webgl/BufferObject.js\";import\"../../../../../webgl/FramebufferObject.js\";import\"../../../../../../core/has.js\";import\"../../../../../webgl/checkWebGLError.js\";import\"../../../../../webgl/enums.js\";import\"../../../../../../chunks/builtins.js\";import r from\"../../../../../webgl/ShaderCompiler.js\";import\"../../../../../webgl/Texture.js\";import\"../../../../../webgl/VertexArrayObject.js\";import e from\"./shaderRepository.js\";function t(r){let t=e;return r.split(\"/\").forEach((r=>{t&&(t=t[r])})),t}const o=new r(t);function s(r){return o.resolveIncludes(r)}export{s as resolveIncludes};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport{resolveIncludes as r}from\"./sources/resolver.js\";const e={shaders:{vertexShader:r(\"background/background.vert\"),fragmentShader:r(\"background/background.frag\")},attributes:new Map([[\"a_pos\",0]])};export{e as background};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport{Program as e}from\"./Program.js\";function n(e){let n=\"\";for(const t in e){const o=e[t];if(\"boolean\"==typeof o)o&&(n+=`#define ${t}\\n`);else if(\"number\"==typeof o)n+=`#define ${t} ${o.toFixed()}\\n`;else if(\"object\"==typeof o){const e=o.options;let r=0;for(const t in e)n+=`#define ${e[t]} ${(r++).toFixed()}\\n`;n+=`#define ${t} ${e[o.value]}\\n`}}return n}function t(n,t,o,r){o=o||{},r=r||\"\";const f=\"function\"==typeof t.shaders?t.shaders(o):t.shaders;return new e(n,r+f.vertexShader,r+f.fragmentShader,t.attributes)}export{t as createProgram,n as glslifyDefineMap};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport{resolveIncludes as e}from\"./sources/resolver.js\";const r={shaders:{vertexShader:e(\"tileInfo/tileInfo.vert\"),fragmentShader:e(\"tileInfo/tileInfo.frag\")},attributes:new Map([[\"a_pos\",0]])};export{r as tileInfo};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport{nextPowerOfTwo as t}from\"../../../../../core/mathUtils.js\";import{isSome as r}from\"../../../../../core/maybe.js\";import{c as e}from\"../../../../../chunks/mat3f32.js\";import{f as o}from\"../../../../../chunks/vec4f32.js\";import i from\"../../../../webgl/BufferObject.js\";import\"../../../../webgl/FramebufferObject.js\";import\"../../../../../core/has.js\";import\"../../../../webgl/checkWebGLError.js\";import\"../../../../webgl/enums.js\";import\"../../../../../chunks/builtins.js\";import\"../../../../webgl/Texture.js\";import s from\"../../../../webgl/VertexArrayObject.js\";import{VTL_TEXTURE_BINDING_UNIT_SPRITES as a,VTL_HIGH_RES_CUTOFF as n}from\"../definitions.js\";import{WGLDrawPhase as c}from\"../enums.js\";import{u32to4Xu8 as m}from\"../number.js\";import f from\"./WGLBrush.js\";class l extends f{constructor(){super(...arguments),this._color=o(1,0,0,1),this._patternMatrix=e(),this._programOptions={id:!1,pattern:!1}}dispose(){this._vao&&(this._vao.dispose(),this._vao=null)}drawMany(e,o){const{context:i,painter:s,styleLayerUID:f}=e;this._loadWGLResources(e);const l=e.displayLevel,u=e.styleLayer,p=u.backgroundMaterial,_=s.vectorTilesMaterialManager,h=u.getPaintValue(\"background-color\",l),d=u.getPaintValue(\"background-opacity\",l),g=u.getPaintValue(\"background-pattern\",l),b=void 0!==g,j=h[3]*d,v=1|window.devicePixelRatio,x=e.spriteMosaic;let y,M;const w=v>n?2:1,U=e.drawPhase===c.HITTEST,k=this._programOptions;k.id=U,k.pattern=b;const L=_.getMaterialProgram(i,p,k);if(i.bindVAO(this._vao),i.useProgram(L),b){const t=x.getMosaicItemPosition(g,!0);if(r(t)){const{tl:e,br:o,page:s}=t;y=o[0]-e[0],M=o[1]-e[1];const n=x.getPageSize(s);r(n)&&(x.bind(i,9729,s,a),L.setUniform4f(\"u_tlbr\",e[0],e[1],o[0],o[1]),L.setUniform2fv(\"u_mosaicSize\",n),L.setUniform1i(\"u_texture\",a))}L.setUniform1f(\"u_opacity\",d)}else this._color[0]=j*h[0],this._color[1]=j*h[1],this._color[2]=j*h[2],this._color[3]=j,L.setUniform4fv(\"u_color\",this._color);if(L.setUniform1f(\"u_depth\",u.z||0),U){const t=m(f+1);L.setUniform4fv(\"u_id\",t)}for(const r of o){if(L.setUniform1f(\"u_coord_range\",r.rangeX),L.setUniformMatrix3fv(\"u_dvsMat3\",r.transforms.dvs),b){const e=Math.max(2**(Math.round(l)-r.key.level),1),o=w*r.width*e,i=o/t(y),s=o/t(M);this._patternMatrix[0]=i,this._patternMatrix[4]=s,L.setUniformMatrix3fv(\"u_pattern_matrix\",this._patternMatrix)}i.setStencilFunction(514,r.stencilRef,255),i.drawArrays(5,0,4)}}_loadWGLResources(t){if(this._vao)return;const{context:r,styleLayer:e}=t,o=e.backgroundMaterial,a=new Int8Array([0,0,1,0,0,1,1,1]),n=i.createVertex(r,35044,a),c=new s(r,o.getAttributeLocations(),o.getLayoutInfo(),{geometry:n});this._vao=c}}export{l as WGLBrushVTLBackground};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport{isNone as e}from\"../../../../../core/maybe.js\";import{WGLDrawPhase as t}from\"../enums.js\";import{u32to4Xu8 as r}from\"../number.js\";import a from\"./WGLBrush.js\";class i extends a{constructor(){super(...arguments),this._programOptions={id:!1}}dispose(){}drawMany(a,i){const{context:n,displayLevel:s,requiredLevel:o,state:l,drawPhase:c,painter:u,spriteMosaic:d,styleLayerUID:f}=a;if(!i.some((e=>{var t,r;return null!=(t=null==(r=e.layerData.get(f))?void 0:r.circleIndexCount)&&t})))return;const m=a.styleLayer,p=m.circleMaterial,y=u.vectorTilesMaterialManager,v=1.2,g=m.getPaintValue(\"circle-translate\",s),M=m.getPaintValue(\"circle-translate-anchor\",s),x=c===t.HITTEST,_=this._programOptions;_.id=x;const U=y.getMaterialProgram(n,p,_);n.useProgram(U),U.setUniformMatrix3fv(\"u_displayMat3\",1===M?l.displayMat3:l.displayViewMat3),U.setUniform2fv(\"u_circleTranslation\",g),U.setUniform1f(\"u_depth\",m.z),U.setUniform1f(\"u_antialiasingWidth\",v);let h=-1;if(x){const e=r(f+1);U.setUniform4fv(\"u_id\",e)}for(const t of i){if(!t.layerData.has(f))continue;t.key.level!==h&&(h=t.key.level,p.setDataUniforms(U,s,m,h,d));const r=t.layerData.get(f);if(!r.circleIndexCount)continue;r.prepareForRendering(n);const a=r.circleVertexArrayObject;e(a)||(n.bindVAO(a),U.setUniformMatrix3fv(\"u_dvsMat3\",t.transforms.dvs),o!==t.key.level?n.setStencilFunction(514,t.stencilRef,255):n.setStencilFunction(516,255,255),n.drawElements(4,r.circleIndexCount,5125,Uint32Array.BYTES_PER_ELEMENT*r.circleIndexStart),t.triangleCount+=r.circleIndexCount/3)}}}export{i as WGLBrushVTLCircle};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport{isNone as t,isSome as e}from\"../../../../../core/maybe.js\";import{VTL_TEXTURE_BINDING_UNIT_SPRITES as i,VTL_HIGH_RES_CUTOFF as a}from\"../definitions.js\";import{WGLDrawPhase as n}from\"../enums.js\";import{u32to4Xu8 as r}from\"../number.js\";import o from\"./WGLBrush.js\";const l=1/65536;class s extends o{constructor(){super(...arguments),this._fillProgramOptions={id:!1,pattern:!1},this._outlineProgramOptions={id:!1}}dispose(){}drawMany(t,e){const{displayLevel:i,drawPhase:a,renderPass:o,spriteMosaic:l,styleLayerUID:s}=t;let f=!1;for(const n of e)if(n.layerData.has(s)){const t=n.layerData.get(s);if(t.fillIndexCount>0||t.outlineIndexCount>0){f=!0;break}}if(!f)return;const u=t.styleLayer,c=u.getPaintProperty(\"fill-pattern\"),d=void 0!==c,m=d&&c.isDataDriven;let p;if(d&&!m){const t=c.getValue(i);p=l.getMosaicItemPosition(t,!0)}const y=!d&&u.getPaintValue(\"fill-antialias\",i);let g=!0,M=1;if(!d){const t=u.getPaintProperty(\"fill-color\"),e=u.getPaintProperty(\"fill-opacity\");if(!(null!=t&&t.isDataDriven||null!=e&&e.isDataDriven)){const t=u.getPaintValue(\"fill-color\",i);M=u.getPaintValue(\"fill-opacity\",i)*t[3],M>=1&&(g=!1)}}if(g&&\"opaque\"===o)return;let _;a===n.HITTEST&&(_=r(s+1));const v=u.getPaintValue(\"fill-translate\",i),P=u.getPaintValue(\"fill-translate-anchor\",i);(g||\"translucent\"!==o)&&this._drawFill(t,s,u,e,v,P,d,p,m,_);const x=!u.hasDataDrivenOutlineColor&&u.outlineUsesFillColor&&M<1;y&&\"opaque\"!==o&&!x&&this._drawOutline(t,s,u,e,v,P,_)}_drawFill(r,o,s,f,u,c,d,m,p,y){if(d&&!p&&t(m))return;const{context:g,displayLevel:M,state:_,drawPhase:v,painter:P,pixelRatio:x,spriteMosaic:U}=r,h=s.fillMaterial,E=P.vectorTilesMaterialManager,T=x>a?2:1,D=v===n.HITTEST,w=this._fillProgramOptions;w.id=D,w.pattern=d;const I=E.getMaterialProgram(g,h,w);if(g.useProgram(I),e(m)){const{page:t}=m,a=U.getPageSize(t);e(a)&&(U.bind(g,9729,t,i),I.setUniform2fv(\"u_mosaicSize\",a),I.setUniform1i(\"u_texture\",i))}I.setUniformMatrix3fv(\"u_displayMat3\",1===c?_.displayMat3:_.displayViewMat3),I.setUniform2fv(\"u_fillTranslation\",u),I.setUniform1f(\"u_depth\",s.z+l),D&&I.setUniform4fv(\"u_id\",y);let S=-1;for(const a of f){if(!a.layerData.has(o))continue;a.key.level!==S&&(S=a.key.level,h.setDataUniforms(I,M,s,S,U));const n=a.layerData.get(o);if(!n.fillIndexCount)continue;n.prepareForRendering(g);const r=n.fillVertexArrayObject;if(!t(r)){if(g.bindVAO(r),I.setUniformMatrix3fv(\"u_dvsMat3\",a.transforms.dvs),g.setStencilFunction(514,a.stencilRef,255),d){const t=Math.max(2**(Math.round(M)-a.key.level),1),e=a.rangeX/(T*a.width*t);I.setUniform1f(\"u_patternFactor\",e)}if(p){const t=n.patternMap;if(!t)continue;for(const[a,n]of t){const t=U.getPageSize(a);e(t)&&(U.bind(g,9729,a,i),I.setUniform2fv(\"u_mosaicSize\",t),I.setUniform1i(\"u_texture\",i),g.drawElements(4,n[1],5125,Uint32Array.BYTES_PER_ELEMENT*n[0]))}}else g.drawElements(4,n.fillIndexCount,5125,Uint32Array.BYTES_PER_ELEMENT*n.fillIndexStart);a.triangleCount+=n.fillIndexCount/3}}}_drawOutline(e,i,a,r,o,s,f){const{context:u,displayLevel:c,state:d,drawPhase:m,painter:p,pixelRatio:y,spriteMosaic:g}=e,M=a.outlineMaterial,_=p.vectorTilesMaterialManager,v=.75/y,P=m===n.HITTEST,x=this._outlineProgramOptions;x.id=P;const U=_.getMaterialProgram(u,M,x);u.useProgram(U),U.setUniformMatrix3fv(\"u_displayMat3\",1===s?d.displayMat3:d.displayViewMat3),U.setUniform2fv(\"u_fillTranslation\",o),U.setUniform1f(\"u_depth\",a.z+l),U.setUniform1f(\"u_outline_width\",v),P&&U.setUniform4fv(\"u_id\",f);let h=-1;for(const n of r){if(!n.layerData.has(i))continue;n.key.level!==h&&(h=n.key.level,M.setDataUniforms(U,c,a,h,g));const e=n.layerData.get(i);if(e.prepareForRendering(u),!e.outlineIndexCount)continue;const r=e.outlineVertexArrayObject;t(r)||(u.bindVAO(r),U.setUniformMatrix3fv(\"u_dvsMat3\",n.transforms.dvs),u.setStencilFunction(514,n.stencilRef,255),u.drawElements(4,e.outlineIndexCount,5125,Uint32Array.BYTES_PER_ELEMENT*e.outlineIndexStart),n.triangleCount+=e.outlineIndexCount/3)}}}export{s as WGLBrushVTLFill};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport{isSome as e,isNone as t}from\"../../../../../core/maybe.js\";import{VTL_TEXTURE_BINDING_UNIT_SPRITES as i}from\"../definitions.js\";import{WGLDrawPhase as n}from\"../enums.js\";import{u32to4Xu8 as a}from\"../number.js\";import r from\"./WGLBrush.js\";class o extends r{constructor(){super(...arguments),this._programOptions={id:!1,pattern:!1,sdf:!1}}dispose(){}drawMany(r,o){const{context:s,displayLevel:l,state:f,drawPhase:m,painter:u,pixelRatio:c,spriteMosaic:d,styleLayerUID:p}=r;if(!o.some((e=>{var t,i;return null!=(t=null==(i=e.layerData.get(p))?void 0:i.lineIndexCount)&&t})))return;const g=r.styleLayer,y=g.lineMaterial,M=u.vectorTilesMaterialManager,v=g.getPaintValue(\"line-translate\",l),_=g.getPaintValue(\"line-translate-anchor\",l),U=g.getPaintProperty(\"line-pattern\"),x=void 0!==U,P=x&&U.isDataDriven;let E,D;if(x&&!P){const e=U.getValue(l);E=d.getMosaicItemPosition(e)}let V=!1;if(!x){const e=g.getPaintProperty(\"line-dasharray\");if(D=void 0!==e,V=D&&e.isDataDriven,D&&!V){const t=e.getValue(l),i=g.getDashKey(t,g.getLayoutValue(\"line-cap\",l));E=d.getMosaicItemPosition(i)}}const h=1/c,I=m===n.HITTEST,S=this._programOptions;S.id=I,S.pattern=x,S.sdf=D;const T=M.getMaterialProgram(s,y,S);if(s.useProgram(T),T.setUniformMatrix3fv(\"u_displayViewMat3\",f.displayViewMat3),T.setUniformMatrix3fv(\"u_displayMat3\",1===_?f.displayMat3:f.displayViewMat3),T.setUniform2fv(\"u_lineTranslation\",v),T.setUniform1f(\"u_depth\",g.z),T.setUniform1f(\"u_antialiasing\",h),I){const e=a(p+1);T.setUniform4fv(\"u_id\",e)}if(E&&e(E)){const{page:t}=E,n=d.getPageSize(t);e(n)&&(d.bind(s,9729,t,i),T.setUniform2fv(\"u_mosaicSize\",n),T.setUniform1i(\"u_texture\",i))}let w=-1;for(const n of o){if(!n.layerData.has(p))continue;n.key.level!==w&&(w=n.key.level,y.setDataUniforms(T,l,g,w,d));const a=2**(l-w)/c;T.setUniform1f(\"u_zoomFactor\",a);const r=n.layerData.get(p);if(!r.lineIndexCount)continue;r.prepareForRendering(s);const o=r.lineVertexArrayObject;if(!t(o)){if(s.bindVAO(o),T.setUniformMatrix3fv(\"u_dvsMat3\",n.transforms.dvs),s.setStencilFunction(514,n.stencilRef,255),P||V){const t=r.patternMap;if(!t)continue;for(const[n,a]of t){const t=d.getPageSize(n);e(t)&&(d.bind(s,9729,n,i),T.setUniform2fv(\"u_mosaicSize\",t),T.setUniform1i(\"u_texture\",i),s.drawElements(4,a[1],5125,Uint32Array.BYTES_PER_ELEMENT*a[0]))}}else s.drawElements(4,r.lineIndexCount,5125,Uint32Array.BYTES_PER_ELEMENT*r.lineIndexStart);n.triangleCount+=r.lineIndexCount/3}}}}export{o as WGLBrushVTLLine};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport{isNone as e}from\"../../../../../core/maybe.js\";import{c as t,f as a}from\"../../../../../chunks/vec2f32.js\";import{FADE_DURATION as i}from\"../../vectorTiles/decluttering/config.js\";import{VTL_TEXTURE_BINDING_UNIT_SPRITES as r,VTL_TEXTURE_BINDING_UNIT_GLYPHS as s}from\"../definitions.js\";import{WGLDrawPhase as n}from\"../enums.js\";import{degToByte as o}from\"../GeometryUtils.js\";import{u32to4Xu8 as l}from\"../number.js\";import f from\"./WGLBrush.js\";const c=1/65536;class p extends f{constructor(){super(...arguments),this._iconProgramOptions={id:!1,sdf:!1},this._sdfProgramOptions={id:!1},this._spritesTextureSize=t()}dispose(){}drawMany(e,t){const{drawPhase:a,styleLayerUID:i}=e,r=e.styleLayer;let s;a===n.HITTEST&&(s=l(i+1)),this._drawIcons(e,r,t,s),this._drawText(e,r,t,s)}_drawIcons(t,a,s,l){const{context:f,displayLevel:c,drawPhase:p,painter:u,spriteMosaic:m,state:g,styleLayerUID:y}=t,d=a.iconMaterial,_=u.vectorTilesMaterialManager;let h,M=!1;for(const e of s)if(e.layerData.has(y)&&(h=e.layerData.get(y),h.iconPerPageElementsMap.size>0)){M=!0;break}if(!M)return;const U=a.getPaintValue(\"icon-translate\",c),P=a.getPaintValue(\"icon-translate-anchor\",c);let x=a.getLayoutValue(\"icon-rotation-alignment\",c);2===x&&(x=0===a.getLayoutValue(\"symbol-placement\",c)?1:0);const v=0===x,T=a.getLayoutValue(\"icon-keep-upright\",c)&&v,E=h.isIconSDF,D=p===n.HITTEST,V=this._iconProgramOptions;V.id=D,V.sdf=E;const S=_.getMaterialProgram(f,d,V);f.useProgram(S),S.setUniformMatrix3fv(\"u_displayViewMat3\",0===x?g.displayViewMat3:g.displayMat3),S.setUniformMatrix3fv(\"u_displayMat3\",1===P?g.displayMat3:g.displayViewMat3),S.setUniform2fv(\"u_iconTranslation\",U),S.setUniform1f(\"u_depth\",a.z),S.setUniform1f(\"u_mapRotation\",o(g.rotation)),S.setUniform1f(\"u_keepUpright\",T?1:0),S.setUniform1f(\"u_level\",10*c),S.setUniform1i(\"u_texture\",r),S.setUniform1f(\"u_fadeDuration\",i/1e3),D&&S.setUniform4fv(\"u_id\",l);let w=-1;for(const i of s){if(!i.layerData.has(y))continue;if(i.key.level!==w&&(w=i.key.level,d.setDataUniforms(S,c,a,w,m)),h=i.layerData.get(y),0===h.iconPerPageElementsMap.size)continue;h.prepareForRendering(f),h.updateOpacityInfo();const r=h.iconVertexArrayObject;if(!e(r)){f.bindVAO(r),S.setUniformMatrix3fv(\"u_dvsMat3\",i.transforms.dvs),S.setUniform1f(\"u_time\",(performance.now()-h.lastOpacityUpdate)/1e3);for(const[e,a]of h.iconPerPageElementsMap)this._renderIconRange(t,S,a,e,i)}}}_renderIconRange(e,t,a,i,s){const{context:n,spriteMosaic:o}=e;this._spritesTextureSize[0]=o.getWidth(i)/4,this._spritesTextureSize[1]=o.getHeight(i)/4,t.setUniform2fv(\"u_mosaicSize\",this._spritesTextureSize),o.bind(n,9729,i,r),n.setStencilTestEnabled(!0),n.setStencilFunction(516,255,255),n.setStencilWriteMask(0),n.drawElements(4,a[1],5125,Uint32Array.BYTES_PER_ELEMENT*a[0]),s.triangleCount+=a[1]/3}_drawText(t,r,l,f){const{context:p,displayLevel:u,drawPhase:m,glyphMosaic:g,painter:y,pixelRatio:d,spriteMosaic:_,state:h,styleLayerUID:M}=t,U=r.textMaterial,P=y.vectorTilesMaterialManager;let x,v=!1;for(const e of l)if(e.layerData.has(M)&&(x=e.layerData.get(M),x.glyphPerPageElementsMap.size>0)){v=!0;break}if(!v)return;const T=r.getPaintProperty(\"text-opacity\");if(T&&!T.isDataDriven&&0===T.getValue(u))return;const E=r.getPaintProperty(\"text-color\"),D=!E||E.isDataDriven||E.getValue(u)[3]>0,V=r.getPaintProperty(\"text-halo-width\"),S=r.getPaintProperty(\"text-halo-color\"),w=(!V||V.isDataDriven||V.getValue(u)>0)&&(!S||S.isDataDriven||S.getValue(u)[3]>0);if(!D&&!w)return;const L=24/8;let z=r.getLayoutValue(\"text-rotation-alignment\",u);2===z&&(z=0===r.getLayoutValue(\"symbol-placement\",u)?1:0);const b=0===z,k=r.getLayoutValue(\"text-keep-upright\",u)&&b,I=m===n.HITTEST,O=.8*L/d;this._glyphTextureSize||(this._glyphTextureSize=a(g.width/4,g.height/4));const R=r.getPaintValue(\"text-translate\",u),j=r.getPaintValue(\"text-translate-anchor\",u),A=this._sdfProgramOptions;A.id=I;const F=P.getMaterialProgram(p,U,A);p.useProgram(F),F.setUniformMatrix3fv(\"u_displayViewMat3\",0===z?h.displayViewMat3:h.displayMat3),F.setUniformMatrix3fv(\"u_displayMat3\",1===j?h.displayMat3:h.displayViewMat3),F.setUniform2fv(\"u_textTranslation\",R),F.setUniform1f(\"u_depth\",r.z+c),F.setUniform2fv(\"u_mosaicSize\",this._glyphTextureSize),F.setUniform1f(\"u_mapRotation\",o(h.rotation)),F.setUniform1f(\"u_keepUpright\",k?1:0),F.setUniform1f(\"u_level\",10*u),F.setUniform1i(\"u_texture\",s),F.setUniform1f(\"u_antialiasingWidth\",O),F.setUniform1f(\"u_fadeDuration\",i/1e3),I&&F.setUniform4fv(\"u_id\",f);let W=-1;for(const a of l){if(!a.layerData.has(M))continue;if(a.key.level!==W&&(W=a.key.level,U.setDataUniforms(F,u,r,W,_)),x=a.layerData.get(M),0===x.glyphPerPageElementsMap.size)continue;x.prepareForRendering(p),x.updateOpacityInfo();const t=x.textVertexArrayObject;if(e(t))continue;p.bindVAO(t),F.setUniformMatrix3fv(\"u_dvsMat3\",a.transforms.dvs),p.setStencilTestEnabled(!0),p.setStencilFunction(516,255,255),p.setStencilWriteMask(0);const i=(performance.now()-x.lastOpacityUpdate)/1e3;F.setUniform1f(\"u_time\",i),x.glyphPerPageElementsMap.forEach(((e,t)=>{this._renderGlyphRange(p,e,t,g,F,w,D,a)}))}}_renderGlyphRange(e,t,a,i,r,n,o,l){i.bind(e,9729,a,s),n&&(r.setUniform1f(\"u_halo\",1),e.drawElements(4,t[1],5125,Uint32Array.BYTES_PER_ELEMENT*t[0]),l.triangleCount+=t[1]/3),o&&(r.setUniform1f(\"u_halo\",0),e.drawElements(4,t[1],5125,Uint32Array.BYTES_PER_ELEMENT*t[0]),l.triangleCount+=t[1]/3)}}export{p as WGLBrushVTLSymbol};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport r from\"./flow/BrushFlow.js\";import s from\"./webgl/brushes/BrushBitmap.js\";import e from\"./webgl/brushes/BrushClip.js\";import l from\"./webgl/brushes/WGLBrushInfo.js\";import o from\"./webgl/brushes/WGLBrushStencil.js\";import{WGLBrushVTLBackground as t}from\"./webgl/brushes/WGLBrushVTLBackground.js\";import{WGLBrushVTLCircle as m}from\"./webgl/brushes/WGLBrushVTLCircle.js\";import{WGLBrushVTLFill as i}from\"./webgl/brushes/WGLBrushVTLFill.js\";import{WGLBrushVTLLine as b}from\"./webgl/brushes/WGLBrushVTLLine.js\";import{WGLBrushVTLSymbol as u}from\"./webgl/brushes/WGLBrushVTLSymbol.js\";import h from\"./webgl/brushes/WGLGeometryBrushFill.js\";import p from\"./webgl/brushes/WGLGeometryBrushLabel.js\";import f from\"./webgl/brushes/WGLGeometryBrushLine.js\";import B from\"./webgl/brushes/WGLGeometryBrushMarker.js\";import L from\"./webgl/brushes/WGLGeometryBrushText.js\";import g from\"./webgl/brushes/raster/BrushRasterBitmap.js\";import w from\"./webgl/brushes/raster/BrushVectorField.js\";const j={marker:B,line:f,fill:h,text:L,label:p,clip:e,stencil:o,bitmap:s,raster:g,rasterVF:w,flow:r,tileInfo:l,vtlBackground:t,vtlFill:i,vtlLine:b,vtlCircle:m,vtlSymbol:u},G={vtlBackground:t,vtlFill:i,vtlLine:b,vtlCircle:m,vtlSymbol:u};export{j as brushes,G as vtlBrushes};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nconst e={background:{\"background.frag\":\"#ifdef PATTERN\\nuniform lowp float u_opacity;\\nuniform lowp sampler2D u_texture;\\nvarying mediump vec4 v_tlbr;\\nvarying mediump vec2 v_tileTextureCoord;\\n#else\\nuniform lowp vec4 u_color;\\n#endif\\n#ifdef ID\\nvarying mediump vec4 v_id;\\n#endif\\nvoid main() {\\n#ifdef PATTERN\\nmediump vec2 normalizedTextureCoord = mod(v_tileTextureCoord, 1.0);\\nmediump vec2 samplePos = mix(v_tlbr.xy, v_tlbr.zw, normalizedTextureCoord);\\nlowp vec4 color = texture2D(u_texture, samplePos);\\ngl_FragColor = u_opacity * color;\\n#else\\ngl_FragColor = u_color;\\n#endif\\n#ifdef ID\\nif (gl_FragColor.a < 1.0 / 255.0) {\\ndiscard;\\n}\\ngl_FragColor = v_id;\\n#endif\\n}\",\"background.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\n#ifdef ID\\nuniform mediump vec4 u_id;\\nvarying mediump vec4 v_id;\\n#endif\\nuniform highp mat3 u_dvsMat3;\\nuniform mediump float u_coord_range;\\nuniform mediump float u_depth;\\n#ifdef PATTERN\\nuniform mediump mat3 u_pattern_matrix;\\nvarying mediump vec2 v_tileTextureCoord;\\nuniform mediump vec4 u_tlbr;\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump vec4 v_tlbr;\\n#endif\\nvoid main() {\\ngl_Position = vec4((u_dvsMat3 * vec3(u_coord_range * a_pos, 1.0)).xy, u_depth, 1.0);\\n#ifdef PATTERN\\nv_tileTextureCoord = (u_pattern_matrix * vec3(a_pos, 1.0)).xy;\\nv_tlbr             = u_tlbr / u_mosaicSize.xyxy;\\n#endif\\n#ifdef ID\\nv_id = u_id / 255.0;\\n#endif\\n}\"},circle:{\"circle.frag\":\"precision lowp float;\\nvarying lowp vec4 v_color;\\nvarying lowp vec4 v_stroke_color;\\nvarying mediump float v_blur;\\nvarying mediump float v_stroke_width;\\nvarying mediump float v_radius;\\nvarying mediump vec2 v_offset;\\n#ifdef ID\\nvarying mediump vec4 v_id;\\n#endif\\nvoid main()\\n{\\nmediump float dist = length(v_offset);\\nmediump float alpha = smoothstep(0.0, -v_blur, dist - 1.0);\\nlowp float color_mix_ratio = v_stroke_width < 0.01 ? 0.0 : smoothstep(-v_blur, 0.0, dist - v_radius / (v_radius + v_stroke_width));\\ngl_FragColor = alpha * mix(v_color, v_stroke_color, color_mix_ratio);\\n#ifdef ID\\nif (gl_FragColor.a < 1.0 / 255.0) {\\ndiscard;\\n}\\ngl_FragColor = v_id;\\n#endif\\n}\",\"circle.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\n#pragma header\\nvarying lowp vec4 v_color;\\nvarying lowp vec4 v_stroke_color;\\nvarying mediump float v_blur;\\nvarying mediump float v_stroke_width;\\nvarying mediump float v_radius;\\nvarying mediump vec2 v_offset;\\n#ifdef ID\\nuniform mediump vec4 u_id;\\nvarying mediump vec4 v_id;\\n#endif\\nuniform highp mat3 u_dvsMat3;\\nuniform highp mat3 u_displayMat3;\\nuniform mediump vec2 u_circleTranslation;\\nuniform mediump float u_depth;\\nuniform mediump float u_antialiasingWidth;\\nvoid main()\\n{\\n#pragma main\\nv_color = color * opacity;\\nv_stroke_color = stroke_color * stroke_opacity;\\nv_stroke_width = stroke_width;\\nv_radius = radius;\\nv_blur = max(blur, u_antialiasingWidth / (radius + stroke_width));\\nmediump vec2 offset = vec2(mod(a_pos, 2.0) * 2.0 - 1.0);\\nv_offset = offset;\\n#ifdef ID\\nv_id = u_id / 255.0;\\n#endif\\nmediump vec3 pos = u_dvsMat3 * vec3(a_pos * 0.5, 1.0) + u_displayMat3 * vec3((v_radius + v_stroke_width) * offset + u_circleTranslation, 0.0);\\ngl_Position = vec4(pos.xy, u_depth, 1.0);\\n}\"},fill:{\"fill.frag\":\"precision lowp float;\\n#ifdef PATTERN\\nuniform lowp sampler2D u_texture;\\nvarying mediump vec2 v_tileTextureCoord;\\nvarying mediump vec4 v_tlbr;\\n#endif\\n#ifdef ID\\nvarying mediump vec4 v_id;\\n#endif\\nvarying lowp vec4 v_color;\\nvec4 mixColors(vec4 color1, vec4 color2) {\\nfloat compositeAlpha = color2.a + color1.a * (1.0 - color2.a);\\nvec3 compositeColor = color2.rgb + color1.rgb * (1.0 - color2.a);\\nreturn vec4(compositeColor, compositeAlpha);\\n}\\nvoid main()\\n{\\n#ifdef PATTERN\\nmediump vec2 normalizedTextureCoord = fract(v_tileTextureCoord);\\nmediump vec2 samplePos = mix(v_tlbr.xy, v_tlbr.zw, normalizedTextureCoord);\\nlowp vec4 color = texture2D(u_texture, samplePos);\\ngl_FragColor = v_color[3] * color;\\n#else\\ngl_FragColor = v_color;\\n#endif\\n#ifdef ID\\nif (gl_FragColor.a < 1.0 / 255.0) {\\ndiscard;\\n}\\ngl_FragColor = v_id;\\n#endif\\n}\",\"fill.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\n#pragma header\\nuniform highp mat3 u_dvsMat3;\\nuniform highp mat3 u_displayMat3;\\nuniform mediump float u_depth;\\nuniform mediump vec2 u_fillTranslation;\\n#ifdef PATTERN\\n#include <util/util.glsl>\\nuniform mediump vec2 u_mosaicSize;\\nuniform mediump float u_patternFactor;\\nvarying mediump vec2 v_tileTextureCoord;\\nvarying mediump vec4 v_tlbr;\\n#endif\\n#ifdef ID\\nuniform mediump vec4 u_id;\\nvarying mediump vec4 v_id;\\n#endif\\nvarying lowp vec4 v_color;\\nvoid main()\\n{\\n#pragma main\\nv_color = color * opacity;\\n#ifdef ID\\nv_id = u_id / 255.0;\\n#endif\\n#ifdef PATTERN\\nfloat patternWidth = nextPOT(tlbr.z - tlbr.x);\\nfloat patternHeight = nextPOT(tlbr.w - tlbr.y);\\nfloat scaleX = 1.0 / (patternWidth * u_patternFactor);\\nfloat scaleY = 1.0 / (patternHeight * u_patternFactor);\\nmat3 patterMat = mat3(scaleX, 0.0,    0.0,\\n0.0,    -scaleY, 0.0,\\n0.0,    0.0,    1.0);\\nv_tileTextureCoord = (patterMat * vec3(a_pos, 1.0)).xy;\\nv_tlbr             = tlbr / u_mosaicSize.xyxy;\\n#endif\\nvec3 pos = u_dvsMat3 * vec3(a_pos, 1.0) + u_displayMat3 * vec3(u_fillTranslation, 0.0);\\ngl_Position = vec4(pos.xy, u_depth, 1.0);\\n}\"},icon:{\"icon.frag\":\"precision mediump float;\\nuniform lowp sampler2D u_texture;\\n#ifdef SDF\\nuniform lowp vec4 u_color;\\nuniform lowp vec4 u_outlineColor;\\n#endif\\nvarying mediump vec2 v_tex;\\nvarying lowp float v_opacity;\\nvarying mediump vec2 v_size;\\nvarying lowp vec4 v_color;\\n#ifdef SDF\\nvarying mediump flaot v_halo_width;\\n#endif\\n#ifdef ID\\nvarying mediump vec4 v_id;\\n#endif\\n#include <util/encoding.glsl>\\nvec4 mixColors(vec4 color1, vec4 color2) {\\nfloat compositeAlpha = color2.a + color1.a * (1.0 - color2.a);\\nvec3 compositeColor = color2.rgb + color1.rgb * (1.0 - color2.a);\\nreturn vec4(compositeColor, compositeAlpha);\\n}\\nvoid main()\\n{\\n#ifdef SDF\\nlowp vec4 fillPixelColor = v_color;\\nfloat d = rgba2float(texture2D(u_texture, v_tex)) - 0.5;\\nconst float softEdgeRatio = 0.248062016;\\nfloat size = max(v_size.x, v_size.y);\\nfloat dist = d * softEdgeRatio * size;\\nfillPixelColor *= clamp(0.5 - dist, 0.0, 1.0);\\nif (v_halo_width > 0.25) {\\nlowp vec4 outlinePixelColor = u_outlineColor;\\nconst float outlineLimitRatio = (16.0 / 86.0);\\nfloat clampedOutlineSize = softEdgeRatio * min(v_halo_width, outlineLimitRatio * max(v_size.x, v_size.y));\\noutlinePixelColor *= clamp(0.5 - (abs(dist) - clampedOutlineSize), 0.0, 1.0);\\ngl_FragColor = v_opacity * mixColors(fillPixelColor, outlinePixelColor);\\n}\\nelse {\\ngl_FragColor = v_opacity * fillPixelColor;\\n}\\n#else\\nlowp vec4 texColor = texture2D(u_texture, v_tex);\\ngl_FragColor = v_opacity * texColor;\\n#endif\\n#ifdef ID\\nif (gl_FragColor.a < 1.0 / 255.0) {\\ndiscard;\\n}\\ngl_FragColor = v_id;\\n#endif\\n}\",\"icon.vert\":\"attribute vec2 a_pos;\\nattribute vec2 a_vertexOffset;\\nattribute vec4 a_texAngleRange;\\nattribute vec4 a_levelInfo;\\nattribute float a_opacityInfo;\\n#pragma header\\n#ifdef ID\\nuniform mediump vec4 u_id;\\nvarying mediump vec4 v_id;\\n#endif\\nvarying lowp vec4 v_color;\\n#ifdef SDF\\nvarying mediump float v_halo_width;\\n#endif\\nuniform highp mat3 u_dvsMat3;\\nuniform highp mat3 u_displayMat3;\\nuniform highp mat3 u_displayViewMat3;\\nuniform mediump vec2 u_iconTranslation;\\nuniform vec2 u_mosaicSize;\\nuniform mediump float u_depth;\\nuniform mediump float u_mapRotation;\\nuniform mediump float u_level;\\nuniform lowp float u_keepUpright;\\nuniform mediump float u_fadeDuration;\\nvarying mediump vec2 v_tex;\\nvarying lowp float v_opacity;\\nvarying mediump vec2 v_size;\\nconst float C_OFFSET_PRECISION = 1.0 / 8.0;\\nconst float C_256_TO_RAD = 3.14159265359 / 128.0;\\nconst float C_DEG_TO_RAD = 3.14159265359 / 180.0;\\nconst float tileCoordRatio = 1.0 / 8.0;\\nuniform highp float u_time;\\nvoid main()\\n{\\n#pragma main\\nv_color = color;\\nv_opacity = opacity;\\n#ifdef SDF\\nv_halo_width = halo_width;\\n#endif\\nfloat modded = mod(a_opacityInfo, 128.0);\\nfloat targetOpacity = (a_opacityInfo - modded) / 128.0;\\nfloat startOpacity = modded / 127.0;\\nfloat interpolatedOpacity = clamp(startOpacity + 2.0 * (targetOpacity - 0.5) * u_time / u_fadeDuration, 0.0, 1.0);\\nv_opacity *= interpolatedOpacity;\\nmediump float a_angle         = a_levelInfo[1];\\nmediump float a_minLevel      = a_levelInfo[2];\\nmediump float a_maxLevel      = a_levelInfo[3];\\nmediump vec2 a_tex            = a_texAngleRange.xy;\\nmediump float delta_z = 0.0;\\nmediump float rotated = mod(a_angle + u_mapRotation, 256.0);\\ndelta_z += (1.0 - step(u_keepUpright, 0.0)) * step(64.0, rotated) * (1.0 - step(192.0, rotated));\\ndelta_z += 1.0 - step(a_minLevel, u_level);\\ndelta_z += step(a_maxLevel, u_level);\\ndelta_z += step(v_opacity, 0.0);\\nvec2 offset = C_OFFSET_PRECISION * a_vertexOffset;\\nv_size = abs(offset);\\n#ifdef SDF\\noffset = (120.0 / 86.0) * offset;\\n#endif\\nmediump vec3 pos = u_dvsMat3 * vec3(a_pos, 1.0) + u_displayViewMat3 * vec3(size * offset, 0.0) + u_displayMat3 * vec3(u_iconTranslation, 0.0);\\ngl_Position = vec4(pos.xy, u_depth + delta_z, 1.0);\\n#ifdef ID\\nv_id = u_id / 255.0;\\n#endif\\nv_tex = a_tex.xy / u_mosaicSize;\\n}\"},line:{\"line.frag\":\"precision lowp float;\\nvarying mediump vec2 v_normal;\\nvarying highp float v_accumulatedDistance;\\nvarying mediump float v_lineHalfWidth;\\nvarying lowp vec4 v_color;\\nvarying mediump float v_blur;\\n#if defined (PATTERN) || defined(SDF)\\nvarying mediump vec4 v_tlbr;\\nvarying mediump vec2 v_patternSize;\\nvarying mediump float v_widthRatio;\\nuniform sampler2D u_texture;\\nuniform mediump float u_antialiasing;\\n#endif\\n#ifdef SDF\\n#include <util/encoding.glsl>\\n#endif\\n#ifdef ID\\nvarying mediump vec4 v_id;\\n#endif\\nvoid main()\\n{\\nmediump float fragDist = length(v_normal) * v_lineHalfWidth;\\nlowp float alpha = clamp((v_lineHalfWidth - fragDist) / v_blur, 0.0, 1.0);\\n#ifdef PATTERN\\nmediump float relativeTexX = mod(v_accumulatedDistance / (v_patternSize.x * v_widthRatio), 1.0);\\nmediump float relativeTexY = 0.5 + v_normal.y * v_lineHalfWidth / (v_patternSize.y * v_widthRatio);\\nmediump vec2 texCoord = mix(v_tlbr.xy, v_tlbr.zw, vec2(relativeTexX, relativeTexY));\\nlowp vec4 color = texture2D(u_texture, texCoord);\\ngl_FragColor = alpha * v_color[3] * color;\\n#elif defined(SDF)\\nmediump float relativeTexX = mod((v_accumulatedDistance * 0.5) / (v_patternSize.x * v_widthRatio), 1.0);\\nmediump float relativeTexY =  0.5 + 0.25 * v_normal.y;\\nmediump vec2 texCoord = mix(v_tlbr.xy, v_tlbr.zw, vec2(relativeTexX, relativeTexY));\\nmediump float d = rgba2float(texture2D(u_texture, texCoord)) - 0.5;\\nfloat dist = d * v_lineHalfWidth;\\ngl_FragColor = alpha * clamp(0.5 - dist, 0.0, 1.0) * v_color;\\n#else\\ngl_FragColor = alpha * v_color;\\n#endif\\n#ifdef ID\\nif (gl_FragColor.a < 1.0 / 255.0) {\\ndiscard;\\n}\\ngl_FragColor = v_id;\\n#endif\\n}\",\"line.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nattribute vec4 a_extrude_offset;\\nattribute vec4 a_dir_normal;\\nattribute vec2 a_accumulatedDistance;\\n#pragma header\\nuniform highp mat3 u_dvsMat3;\\nuniform highp mat3 u_displayMat3;\\nuniform highp mat3 u_displayViewMat3;\\nuniform mediump float u_zoomFactor;\\nuniform mediump vec2 u_lineTranslation;\\nuniform mediump float u_antialiasing;\\nuniform mediump float u_depth;\\nvarying mediump vec2 v_normal;\\nvarying highp float v_accumulatedDistance;\\nconst float scale = 1.0 / 31.0;\\nconst mediump float tileCoordRatio = 8.0;\\n#if defined (SDF)\\nconst mediump float sdfPatternHalfWidth = 15.5;\\n#endif\\n#if defined (PATTERN) || defined(SDF)\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump vec4 v_tlbr;\\nvarying mediump vec2 v_patternSize;\\nvarying mediump float v_widthRatio;\\n#endif\\n#ifdef ID\\nuniform mediump vec4 u_id;\\nvarying mediump vec4 v_id;\\n#endif\\nvarying lowp vec4 v_color;\\nvarying mediump float v_lineHalfWidth;\\nvarying mediump float v_blur;\\nvoid main()\\n{\\n#pragma main\\nv_color = color * opacity;\\nv_blur = blur + u_antialiasing;\\nv_normal = a_dir_normal.zw * scale;\\n#if defined (PATTERN) || defined(SDF)\\nv_tlbr          = tlbr / u_mosaicSize.xyxy;\\nv_patternSize   = vec2(tlbr.z - tlbr.x, tlbr.y - tlbr.w);\\n#if defined (PATTERN)\\nv_widthRatio = width / v_patternSize.y;\\n#else\\nv_widthRatio = width / sdfPatternHalfWidth / 2.0;\\n#endif\\n#endif\\nv_lineHalfWidth = (width + u_antialiasing) * 0.5;\\nmediump vec2 dir = a_dir_normal.xy * scale;\\nmediump vec2 offset_ = a_extrude_offset.zw * scale * offset;\\nmediump vec2 dist = v_lineHalfWidth * scale * a_extrude_offset.xy;\\nmediump vec3 pos = u_dvsMat3 * vec3(a_pos + offset_ * tileCoordRatio / u_zoomFactor, 1.0) + u_displayViewMat3 * vec3(dist, 0.0) + u_displayMat3 * vec3(u_lineTranslation, 0.0);\\ngl_Position = vec4(pos.xy, u_depth, 1.0);\\n#if defined (PATTERN) || defined(SDF)\\nv_accumulatedDistance = a_accumulatedDistance.x * u_zoomFactor / tileCoordRatio + dot(dir, dist + offset_);\\n#endif\\n#ifdef ID\\nv_id = u_id / 255.0;\\n#endif\\n}\"},outline:{\"outline.frag\":\"varying lowp vec4 v_color;\\nvarying mediump vec2 v_normal;\\n#ifdef ID\\nvarying mediump vec4 v_id;\\n#endif\\nvoid main()\\n{\\nlowp float dist = abs(v_normal.y);\\nlowp float alpha = smoothstep(1.0, 0.0, dist);\\ngl_FragColor = alpha * v_color;\\n#ifdef ID\\nif (gl_FragColor.a < 1.0 / 255.0) {\\ndiscard;\\n}\\ngl_FragColor = v_id;\\n#endif\\n}\",\"outline.vert\":\"attribute vec2 a_pos;\\nattribute vec2 a_offset;\\nattribute vec2 a_xnormal;\\n#pragma header\\nvarying lowp vec4 v_color;\\n#ifdef ID\\nuniform mediump vec4 u_id;\\nvarying mediump vec4 v_id;\\n#endif\\nuniform highp mat3 u_dvsMat3;\\nuniform highp mat3 u_displayMat3;\\nuniform mediump vec2 u_fillTranslation;\\nuniform mediump float u_depth;\\nuniform mediump float u_outline_width;\\nvarying lowp vec2 v_normal;\\nconst float scale = 1.0 / 15.0;\\nvoid main()\\n{\\n#pragma main\\nv_color = color * opacity;\\n#ifdef ID\\nv_id = u_id / 255.0;\\n#endif\\nv_normal = a_xnormal;\\nmediump vec2 dist = u_outline_width * scale * a_offset;\\nmediump vec3 pos = u_dvsMat3 * vec3(a_pos, 1.0) + u_displayMat3 * vec3(dist + u_fillTranslation, 0.0);\\ngl_Position = vec4(pos.xy, u_depth, 1.0);\\n}\"},text:{\"text.frag\":\"uniform lowp sampler2D u_texture;\\nvarying lowp vec2 v_tex;\\nvarying lowp vec4 v_color;\\nvarying mediump float v_edgeWidth;\\nvarying mediump float v_edgeDistance;\\n#ifdef ID\\nvarying mediump vec4 v_id;\\n#endif\\nvoid main()\\n{\\nlowp float dist = texture2D(u_texture, v_tex).a;\\nmediump float alpha = smoothstep(v_edgeDistance - v_edgeWidth, v_edgeDistance + v_edgeWidth, dist);\\ngl_FragColor = alpha * v_color;\\n#ifdef ID\\nif (gl_FragColor.a < 1.0 / 255.0) {\\ndiscard;\\n}\\ngl_FragColor = v_id;\\n#endif\\n}\",\"text.vert\":\"attribute vec2 a_pos;\\nattribute vec2 a_vertexOffset;\\nattribute vec4 a_texAngleRange;\\nattribute vec4 a_levelInfo;\\nattribute float a_opacityInfo;\\n#pragma header\\nvarying lowp vec4 v_color;\\n#ifdef ID\\nuniform mediump vec4 u_id;\\nvarying mediump vec4 v_id;\\n#endif\\nuniform highp mat3 u_dvsMat3;\\nuniform highp mat3 u_displayMat3;\\nuniform highp mat3 u_displayViewMat3;\\nuniform mediump vec2 u_textTranslation;\\nuniform vec2 u_mosaicSize;\\nuniform mediump float u_depth;\\nuniform mediump float u_mapRotation;\\nuniform mediump float u_level;\\nuniform lowp float u_keepUpright;\\nuniform mediump float u_fadeDuration;\\nvarying lowp vec2 v_tex;\\nconst float offsetPrecision = 1.0 / 8.0;\\nconst mediump float edgePos = 0.75;\\nuniform mediump float u_antialiasingWidth;\\nvarying mediump float v_edgeDistance;\\nvarying mediump float v_edgeWidth;\\nuniform lowp float u_halo;\\nconst float sdfFontScale = 1.0 / 24.0;\\nconst float sdfPixel = 3.0;\\nuniform highp float u_time;\\nvoid main()\\n{\\n#pragma main\\nif (u_halo > 0.5)\\n{\\nv_color = halo_color * opacity;\\nhalo_width *= sdfPixel;\\nhalo_blur *= sdfPixel;\\n}\\nelse\\n{\\nv_color = color * opacity;\\nhalo_width = 0.0;\\nhalo_blur = 0.0;\\n}\\nfloat modded = mod(a_opacityInfo, 128.0);\\nfloat targetOpacity = (a_opacityInfo - modded) / 128.0;\\nfloat startOpacity = modded / 127.0;\\nfloat interpolatedOpacity = clamp(startOpacity + 2.0 * (targetOpacity - 0.5) * u_time / u_fadeDuration, 0.0, 1.0);\\nv_color *= interpolatedOpacity;\\nmediump float a_angle       = a_levelInfo[1];\\nmediump float a_minLevel    = a_levelInfo[2];\\nmediump float a_maxLevel    = a_levelInfo[3];\\nmediump vec2 a_tex          = a_texAngleRange.xy;\\nmediump float a_visMinAngle    = a_texAngleRange.z;\\nmediump float a_visMaxAngle    = a_texAngleRange.w;\\nmediump float delta_z = 0.0;\\nmediump float angle = mod(a_angle + u_mapRotation, 256.0);\\nif (a_visMinAngle < a_visMaxAngle)\\n{\\ndelta_z += (1.0 - step(u_keepUpright, 0.0)) * (step(a_visMaxAngle, angle) + (1.0 - step(a_visMinAngle, angle)));\\n}\\nelse\\n{\\ndelta_z += (1.0 - step(u_keepUpright, 0.0)) * (step(a_visMaxAngle, angle) * (1.0 - step(a_visMinAngle, angle)));\\n}\\ndelta_z += 1.0 - step(a_minLevel, u_level);\\ndelta_z += step(a_maxLevel, u_level);\\ndelta_z += step(v_color[3], 0.0);\\nv_tex = a_tex.xy / u_mosaicSize;\\n#ifdef ID\\nv_id = u_id / 255.0;\\n#endif\\nv_edgeDistance = edgePos - halo_width / size;\\nv_edgeWidth = (u_antialiasingWidth + halo_blur) / size;\\nmediump vec3 pos = u_dvsMat3 * vec3(a_pos, 1.0) + sdfFontScale * u_displayViewMat3 * vec3(offsetPrecision * size * a_vertexOffset, 0.0) + u_displayMat3 * vec3(u_textTranslation, 0.0);\\ngl_Position = vec4(pos.xy, u_depth + delta_z, 1.0);\\n}\"},util:{\"encoding.glsl\":\"const vec4 rgba2float_factors = vec4(\\n255.0 / (256.0),\\n255.0 / (256.0 * 256.0),\\n255.0 / (256.0 * 256.0 * 256.0),\\n255.0 / (256.0 * 256.0 * 256.0 * 256.0)\\n);\\nfloat rgba2float(vec4 rgba) {\\nreturn dot(rgba, rgba2float_factors);\\n}\",\"util.glsl\":\"float nextPOT(in float x) {\\nreturn pow(2.0, ceil(log2(abs(x))));\\n}\"}};export{e as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport\"../../../../../webgl/BufferObject.js\";import\"../../../../../webgl/FramebufferObject.js\";import\"../../../../../../core/has.js\";import\"../../../../../webgl/checkWebGLError.js\";import\"../../../../../webgl/enums.js\";import\"../../../../../../chunks/builtins.js\";import r from\"../../../../../webgl/ShaderCompiler.js\";import\"../../../../../webgl/Texture.js\";import\"../../../../../webgl/VertexArrayObject.js\";import e from\"./shaderRepository.js\";function t(r){let t=e;return r.split(\"/\").forEach((r=>{t&&(t=t[r])})),t}const o=new r(t);function s(r){return o.resolveIncludes(r)}export{s as resolveIncludes};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport\"../../../../webgl/BufferObject.js\";import\"../../../../webgl/FramebufferObject.js\";import\"../../../../../core/has.js\";import\"../../../../webgl/checkWebGLError.js\";import\"../../../../webgl/enums.js\";import\"../../../../../chunks/builtins.js\";import{glslifyDefineMap as e}from\"../../../../webgl/programUtils.js\";import\"../../../../webgl/Texture.js\";import\"../../../../webgl/VertexArrayObject.js\";import{resolveIncludes as r}from\"./sources/resolver.js\";const t=r=>e({ID:r.id,PATTERN:r.pattern}),a={shaders:e=>({vertexShader:t(e)+r(\"background/background.vert\"),fragmentShader:t(e)+r(\"background/background.frag\")})},i=r=>e({ID:r.id}),s={shaders:e=>({vertexShader:i(e)+r(\"circle/circle.vert\"),fragmentShader:i(e)+r(\"circle/circle.frag\")})},d=r=>e({ID:r.id,PATTERN:r.pattern}),o={shaders:e=>({vertexShader:d(e)+r(\"fill/fill.vert\"),fragmentShader:d(e)+r(\"fill/fill.frag\")})},l=r=>e({ID:r.id}),n={shaders:e=>({vertexShader:l(e)+r(\"outline/outline.vert\"),fragmentShader:l(e)+r(\"outline/outline.frag\")})},f=r=>e({ID:r.id,SDF:r.sdf}),g={shaders:e=>({vertexShader:f(e)+r(\"icon/icon.vert\"),fragmentShader:f(e)+r(\"icon/icon.frag\")})},c=r=>e({ID:r.id,PATTERN:r.pattern,SDF:r.sdf}),h={shaders:e=>({vertexShader:c(e)+r(\"line/line.vert\"),fragmentShader:c(e)+r(\"line/line.frag\")})},m=r=>e({ID:r.id}),b={shaders:e=>({vertexShader:m(e)+r(\"text/text.vert\"),fragmentShader:m(e)+r(\"text/text.frag\")})};export{a as background,s as circle,o as fill,g as icon,h as line,n as outline,b as text};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport\"../../../../webgl/BufferObject.js\";import\"../../../../webgl/FramebufferObject.js\";import{Program as e}from\"../../../../webgl/Program.js\";import\"../../../../webgl/enums.js\";import\"../../../../webgl/Texture.js\";import\"../../../../webgl/VertexArrayObject.js\";import{text as r,outline as t,line as a,icon as s,fill as n,circle as i,background as o}from\"./Programs.js\";class c{constructor(){this._programByKey=new Map}dispose(){this._programByKey.forEach((e=>e.dispose())),this._programByKey.clear()}getMaterialProgram(r,t,a){const s=t.key<<3|this._getMaterialOptionsValue(t.type,a);if(this._programByKey.has(s))return this._programByKey.get(s);const n=this._getProgramTemplate(t.type),{shaders:i}=n,{vertexShader:o,fragmentShader:c}=i(a),p=t.getShaderHeader(),u=t.getShaderMain(),g=o.replace(\"#pragma header\",p).replace(\"#pragma main\",u),m=new e(r,g,c,t.getAttributeLocations());return this._programByKey.set(s,m),m}_getMaterialOptionsValue(e,r){switch(e){case 0:{const e=r;return(e.pattern?1:0)<<1|(e.id?1:0)}case 1:{const e=r;return(e.pattern?1:0)<<1|(e.id?1:0)}case 2:return r.id?1:0;case 3:{const e=r;return(e.sdf?1:0)<<2|(e.pattern?1:0)<<1|(e.id?1:0)}case 4:{const e=r;return(e.sdf?1:0)<<1|(e.id?1:0)}case 5:return r.id?1:0;case 6:return r.id?1:0;default:return 0}}_getProgramTemplate(e){switch(e){case 0:return o;case 5:return i;case 1:return n;case 4:return s;case 3:return a;case 2:return t;case 6:return r;default:return null}}}export{c as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport{disposeMaybe as e}from\"../../../../core/maybe.js\";import{vtlBrushes as t}from\"../brushes.js\";import r from\"./shaders/VTLMaterialManager.js\";const s=1e-6;class a{constructor(e,t){this.spriteMosaic=e,this.glyphMosaic=t,this._brushCache=new Map,this._vtlMaterialManager=new r}dispose(){this._brushCache&&(this._brushCache.forEach((e=>e.dispose())),this._brushCache=null),this._vtlMaterialManager=e(this._vtlMaterialManager),this.spriteMosaic.dispose(),this.glyphMosaic.dispose()}get vectorTilesMaterialManager(){return this._vtlMaterialManager}drawTile(e,t,r){const{context:s}=e,a=r.layers;r.backgroundBucketIds.length>0&&(e.renderPass=\"background\",r.backgroundBucketIds.forEach((s=>this._renderStyleLayer(r.getLayerById(s),e,t,!0)))),s.setBlendingEnabled(!1),s.setDepthTestEnabled(!0),s.setDepthWriteEnabled(!0),s.setDepthFunction(515),e.renderPass=\"opaque\";for(let i=a.length-1;i>=0;i--)this._renderStyleLayer(a[i],e,t,!1);s.setDepthWriteEnabled(!1),s.setBlendingEnabled(!0),s.setBlendFunctionSeparate(1,771,1,771),e.renderPass=\"translucent\";for(let i=0;i<a.length;i++)this._renderStyleLayer(a[i],e,t,!1);s.setDepthTestEnabled(!1),e.renderPass=\"symbol\";for(let i=0;i<a.length;i++)this._renderStyleLayer(a[i],e,t,!1);s.bindVAO()}_renderStyleLayer(e,t,r,a=!1){if(!(a||e&&r.layerData.has(e.uid)))return;const i=e.getLayoutProperty(\"visibility\");if(i&&1===i.getValue())return;const{renderPass:n}=t;let l;switch(e.type){case 0:if(\"background\"!==n)return;l=\"vtlBackground\";break;case 1:if(\"opaque\"!==n&&\"translucent\"!==t.renderPass)return;l=\"vtlFill\";break;case 2:if(\"translucent\"!==n)return;l=\"vtlLine\";break;case 4:if(\"symbol\"!==n)return;l=\"vtlCircle\";break;case 3:if(\"symbol\"!==n)return;l=\"vtlSymbol\"}const h=t.displayLevel;void 0!==e.minzoom&&e.minzoom>h+s||void 0!==e.maxzoom&&e.maxzoom<=h-s||(t.styleLayerUID=e.uid,t.styleLayer=e,this.drawWithBrush(t,r,l))}drawWithBrush(e,r,s){if(!this._brushCache.has(s)){const e=t[s];this._brushCache.set(s,new e)}this._brushCache.get(s).drawMany(e,[r])}}export{a as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../chunks/tslib.es6.js\";import t from\"../../../core/Error.js\";import{isNone as i,disposeMaybe as r,destroyMaybe as l}from\"../../../core/maybe.js\";import{isAborted as s}from\"../../../core/promiseUtils.js\";import{whenTrueOnce as o}from\"../../../core/watchUtils.js\";import{property as n}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/arrayUtils.js\";import\"../../../core/has.js\";import\"../../../core/accessorSupport/ensureType.js\";import{subclass as a}from\"../../../core/accessorSupport/decorators/subclass.js\";import h from\"../../2d/engine/vectorTiles/SchemaHelper.js\";import c from\"../../2d/engine/vectorTiles/TileHandler3D.js\";import d from\"../../2d/engine/vectorTiles/VTLPainter3D.js\";import p from\"../../2d/engine/vectorTiles/style/StyleRepository.js\";import{LayerView3D as m}from\"./LayerView3D.js\";import{TiledLayerView3D as y}from\"./TiledLayerView3D.js\";import{test as f}from\"../terrain/terrainUtils.js\";import u from\"../../layers/LayerView.js\";let g=class extends(y(m(u))){constructor(){super(...arguments),this.type=\"vector-tile-3d\"}initialize(){if(i(this.layer.fullExtent))return void this.addResolvingPromise(Promise.reject(new t(\"vectortilelayerview:full-extent-undefined\",\"This layer view's layer does not define a fullExtent.\")));const e=f.force512VTL?this.layer.tileInfo:this.layer.compatibleTileInfo256,r=this._getTileInfoSupportError(e,this.layer.fullExtent);if(r)return this.addResolvingPromise(Promise.reject(r));const{basemapTerrain:l,spatialReference:n,pixelRatio:a}=this.view,m=o(this.view,\"basemapTerrain.tilingSchemeLocked\").then((()=>{const e=l.tilingScheme,t=e.pixelSize;let i;this.schemaHelper=new h(t,n.isGeographic),i=256===t?this.layer.compatibleTileInfo256:this.view.spatialReference.isGeographic?this.layer.compatibleTileInfo512:this.layer.tileInfo;const r=this._getTileInfoCompatibilityError(i,e);if(r)throw r;this._set(\"tileInfo\",i)}));this._tileHandlerController=new AbortController;const y=this.view.resourceController;this._memCache=y.memoryController.newCache(this.layer.uid,(e=>{e.release()}));const{style:u}=this.layer.currentStyleInfo,g=new p(u),_=l.mapTileRequester;this._tileHandler=new c(this.layer,g,a,this._memCache,_);const v=this._tileHandlerController.signal,H=e=>y.schedule(e),w=this._tileHandler.start({signal:v,schedule:H}),C=this._tileHandler.spriteMosaic;C.then((e=>{!s(v)&&this._tileHandler&&(this.painter=new d(e,this._tileHandler.glyphMosaic))})),w.then((()=>this._tileHandlerController=null));const T=()=>{this._tileHandlerController&&this._tileHandlerController.abort(),this._tileHandlerController=new AbortController,this._memCache.clear();const{style:e}=this.layer.currentStyleInfo,t=new p(e),i=new c(this.layer,t,a,this._memCache,_),r=i.start({signal:this._tileHandlerController.signal,schedule:H}),l=i.spriteMosaic;r.then((()=>this._tileHandlerController=null)),this.updatingHandles.addPromise(Promise.all([r,l]).then((([,e])=>{const t=this._tileHandler,r=this.painter;this.painter=new d(e,i.glyphMosaic),this._tileHandler=i,this.emit(\"data-changed\"),t.destroy(),r&&r.dispose()})))};this.updatingHandles.add(this,\"layer.currentStyleInfo\",T),this.updatingHandles.add(this,\"view.pixelRatio\",T);const j=Promise.all([m,w,C]);this.addResolvingPromise(j)}destroy(){this.painter=r(this.painter),this._tileHandlerController&&(this._tileHandlerController.abort(),this._tileHandlerController=null),l(this._tileHandler),this._memCache=l(this._memCache),this._tileHandler=null}get dataLevelRange(){const e=this.tileInfo.lods,t=e[0].scale,i=e[e.length-1].scale,r=this.levelRangeFromScaleRange(t,i);return 1===r.minLevel&&256===this.tileInfo.size[0]&&(r.minLevel=0),r}async fetchTile(e,t,i,r){return this._tileHandler.getVectorTile(e,t,i,r)}};e([n({aliasOf:\"layer.fullExtent\"})],g.prototype,\"fullExtent\",void 0),e([n()],g.prototype,\"layer\",void 0),e([n()],g.prototype,\"tileInfo\",void 0),e([n()],g.prototype,\"dataLevelRange\",null),e([n()],g.prototype,\"updatingProgressValue\",void 0),g=e([a(\"esri.views.3d.layers.VectorTileLayerView3D\")],g);const _=g;export{_ as default};\n"],"names":["h","e","i","t","s","a","r","n","l","o","c","f","M","U","m","I","V","b","u","g","y","p","d"],"mappings":"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"}