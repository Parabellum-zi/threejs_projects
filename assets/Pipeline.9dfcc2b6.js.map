{"version":3,"file":"Pipeline.9dfcc2b6.js","sources":["../../src/components/Pipeline.vue"],"sourcesContent":["<template>\n  <div ref=\"sceneContainer\" id=\"sceneContainer\"></div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted } from \"vue\";\n\n// import * as dat from \"dat.gui\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\n\nonMounted(() => {\n  initScene();\n  initCamera();\n  initRenderer();\n  initControls();\n  initPointLight();\n  // initObject();\n  drawCylinder();\n  resize();\n  animate();\n});\n\nlet scene = reactive({});\nlet camera = reactive({});\nlet renderer = reactive({});\nlet orbitControls = reactive({});\nconst sceneContainer = ref(null);\n// let geometry = reactive({});\n// let gui = new dat.GUI();\n// let clock = new THREE.Clock();\nlet texture;\nlet textureOuter;\nlet CylinderMesh;\nlet stripMesh;\n\nfunction initScene() {\n  // 创建场景\n  scene = new THREE.Scene();\n}\n\nfunction initCamera() {\n  // 设置相机\n  camera = new THREE.PerspectiveCamera(\n    75,\n    window.innerWidth / window.innerHeight,\n    0.1,\n    10000\n  ); // 视野角度 , 宽高比， 近截面（near）和远截面（far）\n  camera.position.set(100, 60, 90); // 设置相机位置\n  // camera.position.z = 7;\n  scene.add(camera);\n}\n\nfunction initRenderer() {\n  // 设置渲染器\n  // renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });    // alpha: true 设置背景透明\n  renderer = new THREE.WebGLRenderer({ antialias: true });\n  renderer.setSize(\n    sceneContainer.value.clientWidth,\n    sceneContainer.value.clientHeight\n  );\n  // renderer.setClearColor(0xffffff); // 设置背景色\n  // 兼容高清屏幕\n  renderer.setPixelRatio(window.devicePixelRatio);\n  // 消除canvas的外边框\n  renderer.domElement.style.outline = \"none\";\n  sceneContainer.value.appendChild(renderer.domElement);\n  renderer.setClearColor(new THREE.Color(\"#21282a\"), 1);\n}\n\nfunction initControls() {\n  orbitControls = new OrbitControls(camera, renderer.domElement);\n  orbitControls.enableDamping = true; // 惯性\n  orbitControls.dampingFactor = 0.25; // 动态阻尼系数\n  orbitControls.enableZoom = true; // 缩放\n  orbitControls.enablePan = true; // 右键拖拽\n  // orbitControls.maxAzimuthAngle = Math.PI / 6; // 水平旋转范围\n  // orbitControls.minAzimuthAngle = -Math.PI / 6;\n  // orbitControls.maxPolarAngle = Math.PI / 6; // 垂直旋转范围\n  // orbitControls.minPolarAngle = -Math.PI / 6;\n  const axesHelper = new THREE.AxesHelper(10000);\n  scene.add(axesHelper);\n}\n\nfunction initPointLight() {\n  const pointLight = new THREE.PointLight(0xffffff, 0.1);\n  pointLight.position.x = 2;\n  pointLight.position.y = 3;\n  pointLight.position.z = 4;\n  scene.add(pointLight);\n}\n\nfunction resize() {\n  const sizes = {\n    width: window.innerWidth,\n    height: window.innerHeight,\n  };\n  window.addEventListener(\"resize\", () => {\n    // Update sizes\n    sizes.width = window.innerWidth;\n    sizes.height = window.innerHeight;\n\n    // Update camera\n    camera.aspect = sizes.width / sizes.height;\n    camera.updateProjectionMatrix();\n\n    // Update renderer\n    renderer.setSize(sizes.width, sizes.height);\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n  });\n}\n\nconst animate = function (time) {\n  time *= 0.001;\n  //  关键  箭头贴图动画\n  texture.offset.x = -(time * 1) % 1; // 贴图运动速度\n  // texture.offset.x += 0.001;\n  // 加载时场景旋转\n  // const cameraSpeed = time * 0.3;\n  // const cameraRadius = 5;\n  // camera.position.x = Math.cos(cameraSpeed) * cameraRadius;\n  // camera.position.y = 1;\n  // camera.position.z = Math.sin(cameraSpeed) * cameraRadius;\n  // camera.lookAt(CylinderMesh.position);\n  textureOuter.offset.x = -(time * 0.2) % 1;\n  resize();\n  // const elapsedTime = clock.getElapsedTime();\n  requestAnimationFrame(animate);\n  renderer.render(scene, camera);\n};\n\nfunction drawCylinder() {\n  // 创建 箭头的 canvas\n  /*  const ctx = document.createElement(\"canvas\").getContext(\"2d\");\n  ctx.canvas.width = 64;\n  ctx.canvas.height = 64;\n  ctx.fillStyle = \"rgba(105,181,201,0.1)\";\n  // ctx.fillRect(100, 0, 64, 64);\n  ctx.fillRect(0, 0, 0, 0); //管透明度\n  ctx.translate(32, 32);\n  ctx.rotate(Math.PI * 0.5);\n  ctx.fillStyle = \"rgb(0,255,255)\";\n  ctx.textAlign = \"center\";\n  ctx.textBaseline = \"middle\";\n  ctx.font = \"48px sans-serif\";\n  ctx.fillText(\"➡︎\", 0, 0);\n\n  texture = new THREE.CanvasTexture(ctx.canvas);*/\n  texture = new THREE.TextureLoader().load(\"images/allow2.png\");\n\n  texture.wrapS = THREE.RepeatWrapping;\n  texture.wrapT = THREE.RepeatWrapping;\n  texture.repeat.x = 4; // x方向的箭头密度\n  texture.repeat.y = 1; // y方向的箭头密度\n  // texture.repeat.z = -40;\n  texture.rotation = Math.PI * 0.5;\n\n  // 创建管道\n  const radiusTop = 6;\n  const radiusBottom = 6;\n  const height = 100; // 修改管线长度\n  const radiusSegments = 30; // 管壁平滑度， 越大越平滑\n  const heightSegments = 200;\n  const openEnded = false;\n  const geometry = new THREE.CylinderBufferGeometry(\n    radiusTop,\n    radiusBottom,\n    height,\n    radiusSegments,\n    heightSegments,\n    openEnded\n  );\n\n  textureOuter = new THREE.TextureLoader().load(\"images/XX1.png\");\n  textureOuter.wrapS = THREE.RepeatWrapping;\n  textureOuter.wrapT = THREE.RepeatWrapping;\n  textureOuter.repeat.x = 1;\n  textureOuter.repeat.y = 1;\n  // texture.repeat.z = -40;\n  textureOuter.rotation = Math.PI * 0.5;\n  console.log(textureOuter);\n  const material = new THREE.MeshBasicMaterial({\n    map: textureOuter,\n    side: THREE.DoubleSide,\n    depthWrite: false,\n    depthTest: false,\n    transparent: true,\n\n    // opacity: 0.4,\n    // color: 0x4488ff,\n    // transparent: true,\n    // opacity: 0.35,\n    // depthWrite: false, // 为true内部流动的液体会被遮挡无法显示\n  });\n  CylinderMesh = new THREE.Mesh(geometry, material);\n  scene.add(CylinderMesh);\n  CylinderMesh.rotation.z = Math.PI * 0.5; // 箭头方向\n  // CylinderMesh.rotation.x = Math.PI * 0.5 //修改箭头在管壁的位置\n\n  // 管中心平面\n  const stripGeo = new THREE.PlaneBufferGeometry(radiusTop * 1.7, height);\n  const stripMat = new THREE.MeshBasicMaterial({\n    map: texture,\n    opacity: 0.5,\n    side: THREE.DoubleSide,\n    depthWrite: false,\n    depthTest: false,\n    transparent: true,\n  });\n  stripMesh = new THREE.Mesh(stripGeo, stripMat);\n  stripMesh.rotation.z = Math.PI * 0.5;\n  stripMesh.rotation.x = Math.PI * 0.5;\n  scene.add(stripMesh);\n\n  // stripMesh.rotation.y = Math.PI * 0.5;\n}\n</script>\n\n<style scoped>\n#sceneContainer {\n  width: 100%;\n  height: 100%;\n}\n\n#sceneContainer,\ncanvas {\n  position: fixed;\n  top: 0;\n  left: 0;\n  outline: none;\n}\n</style>\n"],"names":["THREE.Scene","THREE.PerspectiveCamera","THREE.WebGLRenderer","THREE.Color","THREE.AxesHelper","THREE.PointLight","THREE.TextureLoader","THREE.RepeatWrapping","THREE.CylinderBufferGeometry","THREE.MeshBasicMaterial","THREE.DoubleSide","THREE.Mesh","THREE.PlaneBufferGeometry"],"mappings":"wWAWA,EAAU,IAAM,CACd,IACA,IACA,IACA,IACA,IAEA,IACA,IACA,MAGF,GAAI,GAAQ,EAAS,IACjB,EAAS,EAAS,IAClB,EAAW,EAAS,IACpB,EAAgB,EAAS,IAC7B,KAAM,GAAiB,EAAI,MAI3B,GAAI,GACA,EACA,EACA,EAEJ,YAAqB,CAEnB,EAAQ,GAAIA,GAGd,YAAsB,CAEpB,EAAS,GAAIC,GACX,GACA,OAAO,WAAa,OAAO,YAC3B,GACA,KAEF,EAAO,SAAS,IAAI,IAAK,GAAI,IAE7B,EAAM,IAAI,GAGZ,YAAwB,CAGtB,EAAW,GAAIC,GAAoB,CAAE,UAAW,KAChD,EAAS,QACP,EAAe,MAAM,YACrB,EAAe,MAAM,cAIvB,EAAS,cAAc,OAAO,kBAE9B,EAAS,WAAW,MAAM,QAAU,OACpC,EAAe,MAAM,YAAY,EAAS,YAC1C,EAAS,cAAc,GAAIC,GAAY,WAAY,GAGrD,YAAwB,CACtB,EAAgB,GAAI,GAAc,EAAQ,EAAS,YACnD,EAAc,cAAgB,GAC9B,EAAc,cAAgB,IAC9B,EAAc,WAAa,GAC3B,EAAc,UAAY,GAK1B,KAAM,GAAa,GAAIC,GAAiB,KACxC,EAAM,IAAI,GAGZ,YAA0B,CACxB,KAAM,GAAa,GAAIC,GAAiB,SAAU,IAClD,EAAW,SAAS,EAAI,EACxB,EAAW,SAAS,EAAI,EACxB,EAAW,SAAS,EAAI,EACxB,EAAM,IAAI,GAGZ,YAAkB,CAChB,KAAM,GAAQ,CACZ,MAAO,OAAO,WACd,OAAQ,OAAO,aAEjB,OAAO,iBAAiB,SAAU,IAAM,CAEtC,EAAM,MAAQ,OAAO,WACrB,EAAM,OAAS,OAAO,YAGtB,EAAO,OAAS,EAAM,MAAQ,EAAM,OACpC,EAAO,yBAGP,EAAS,QAAQ,EAAM,MAAO,EAAM,QACpC,EAAS,cAAc,KAAK,IAAI,OAAO,iBAAkB,MAI7D,KAAM,GAAU,SAAU,EAAM,CAC9B,GAAQ,KAER,EAAQ,OAAO,EAAI,CAAE,GAAO,GAAK,EASjC,EAAa,OAAO,EAAI,CAAE,GAAO,IAAO,EACxC,IAEA,sBAAsB,GACtB,EAAS,OAAO,EAAO,IAGzB,YAAwB,CAiBtB,EAAU,GAAIC,KAAsB,KAAK,qBAEzC,EAAQ,MAAQC,EAChB,EAAQ,MAAQA,EAChB,EAAQ,OAAO,EAAI,EACnB,EAAQ,OAAO,EAAI,EAEnB,EAAQ,SAAW,KAAK,GAAK,GAG7B,KAAM,GAAY,EACZ,EAAe,EACf,EAAS,IACT,EAAiB,GACjB,EAAiB,IACjB,EAAY,GACZ,EAAW,GAAIC,GACnB,EACA,EACA,EACA,EACA,EACA,GAGF,EAAe,GAAIF,KAAsB,KAAK,kBAC9C,EAAa,MAAQC,EACrB,EAAa,MAAQA,EACrB,EAAa,OAAO,EAAI,EACxB,EAAa,OAAO,EAAI,EAExB,EAAa,SAAW,KAAK,GAAK,GAClC,QAAQ,IAAI,GACZ,KAAM,GAAW,GAAIE,GAAwB,CAC3C,IAAK,EACL,KAAMC,EACN,WAAY,GACZ,UAAW,GACX,YAAa,KAQf,EAAe,GAAIC,GAAW,EAAU,GACxC,EAAM,IAAI,GACV,EAAa,SAAS,EAAI,KAAK,GAAK,GAIpC,KAAM,GAAW,GAAIC,GAA0B,EAAY,IAAK,GAC1D,EAAW,GAAIH,GAAwB,CAC3C,IAAK,EACL,QAAS,GACT,KAAMC,EACN,WAAY,GACZ,UAAW,GACX,YAAa,KAEf,EAAY,GAAIC,GAAW,EAAU,GACrC,EAAU,SAAS,EAAI,KAAK,GAAK,GACjC,EAAU,SAAS,EAAI,KAAK,GAAK,GACjC,EAAM,IAAI"}