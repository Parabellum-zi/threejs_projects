{"version":3,"file":"TextGeometry.d7612f96.js","sources":["../../node_modules/three/examples/jsm/geometries/TextGeometry.js"],"sourcesContent":["/**\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel\n *  bevelOffset: <float> // how far from text outline does bevel start\n * }\n */\n\nimport {\n\tExtrudeGeometry\n} from 'three';\n\nclass TextGeometry extends ExtrudeGeometry {\n\n\tconstructor( text, parameters = {} ) {\n\n\t\tconst font = parameters.font;\n\n\t\tif ( font === undefined ) {\n\n\t\t\tsuper(); // generate default extrude geometry\n\n\t\t} else {\n\n\t\t\tconst shapes = font.generateShapes( text, parameters.size );\n\n\t\t\t// translate parameters to ExtrudeGeometry API\n\n\t\t\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\n\n\t\t\t// defaults\n\n\t\t\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\t\t\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\t\t\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\t\t\tsuper( shapes, parameters );\n\n\t\t}\n\n\t\tthis.type = 'TextGeometry';\n\n\t}\n\n}\n\n\nexport { TextGeometry };\n"],"names":[],"mappings":"gDAqBA,eAA2B,EAAgB,CAE1C,YAAa,EAAM,EAAa,GAAK,CAEpC,KAAM,GAAO,EAAW,KAExB,GAAK,IAAS,OAEb,YAEM,CAEN,KAAM,GAAS,EAAK,eAAgB,EAAM,EAAW,MAIrD,EAAW,MAAQ,EAAW,SAAW,OAAY,EAAW,OAAS,GAIpE,EAAW,iBAAmB,QAAY,GAAW,eAAiB,IACtE,EAAW,YAAc,QAAY,GAAW,UAAY,GAC5D,EAAW,eAAiB,QAAY,GAAW,aAAe,IAEvE,MAAO,EAAQ,GAIhB,KAAK,KAAO"}