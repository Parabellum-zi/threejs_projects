{"version":3,"file":"PixelBlock.8a9b6130.js","sources":["../../node_modules/@arcgis/core/layers/support/PixelBlock.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport{_ as t}from\"../../chunks/tslib.es6.js\";import\"../../core/has.js\";import e from\"../../core/Error.js\";import{JSONSupport as s}from\"../../core/JSONSupport.js\";import{clone as i}from\"../../core/lang.js\";import r from\"../../core/Logger.js\";import{isNone as l}from\"../../core/maybe.js\";import{property as a}from\"../../core/accessorSupport/decorators/property.js\";import{cast as o}from\"../../core/accessorSupport/decorators/cast.js\";import{subclass as h}from\"../../core/accessorSupport/decorators/subclass.js\";var n;const p=r.getLogger(\"esri.layers.support.PixelBlock\");let c=n=class extends s{constructor(t){super(t),this.width=null,this.height=null,this.pixelType=\"f32\",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.pixels=null,this.statistics=null}static createEmptyBand(t,e){return new(n.getPixelArrayConstructor(t))(e)}static getPixelArrayConstructor(t){let e;switch(t){case\"u1\":case\"u2\":case\"u4\":case\"u8\":e=Uint8Array;break;case\"u16\":e=Uint16Array;break;case\"u32\":case\"u32\":e=Uint32Array;break;case\"s8\":e=Int8Array;break;case\"s16\":e=Int16Array;break;case\"s32\":e=Int32Array;break;case\"f32\":case\"c64\":case\"c128\":case\"unknown\":e=Float32Array;break;case\"f64\":e=Float64Array}return e}castPixelType(t){if(!t)return\"f32\";let e=t.toLowerCase();return[\"u1\",\"u2\",\"u4\"].indexOf(e)>-1?e=\"u8\":-1===[\"unknown\",\"u8\",\"s8\",\"u16\",\"s16\",\"u32\",\"s32\",\"f32\",\"f64\"].indexOf(e)&&(e=\"f32\"),e}getPlaneCount(){return this.pixels&&this.pixels.length}addData(t){if(!t.pixels||t.pixels.length!==this.width*this.height)throw new e(\"pixelblock:invalid-or-missing-pixels\",\"add data requires valid pixels array that has same length defined by pixel block width * height\");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(t.statistics||{minValue:null,maxValue:null})}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case\"s8\":case\"s16\":case\"u16\":case\"s32\":case\"u32\":case\"f32\":case\"f64\":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){this.statistics=this.pixels.map((t=>this._calculateBandStatistics(t,this.mask)));const t=this.mask;let e=0;if(t)for(let s=0;s<t.length;s++)t[s]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||\"f64\"===t||\"f32\"===t)return;let e;switch(t){case\"u8\":e=[0,255];break;case\"u16\":e=[0,65535];break;case\"u32\":e=[0,4294967295];break;case\"s8\":e=[-128,127];break;case\"s16\":e=[-32768,32767];break;case\"s32\":e=[-2147483648,2147483647];break;default:e=[-34e38,34e38]}const[s,i]=e,r=this.pixels,l=this.width*this.height,a=r.length;let o,h,p;const c=[];for(let u=0;u<a;u++){p=n.createEmptyBand(t,l),o=r[u];for(let t=0;t<l;t++)h=o[t],p[t]=h>i?i:h<s?s:h;c.push(p)}this.pixels=c,this.pixelType=t}extractBands(t){if(l(t)||0===t.length||null==this.pixels||0===this.pixels.length)return this;const e=this.pixels.length,s=t.some((t=>t>=this.pixels.length)),i=e===t.length&&!t.some(((t,e)=>t!==e));return s||i?this:new n({pixelType:this.pixelType,width:this.width,height:this.height,mask:this.mask,validPixelCount:this.validPixelCount,maskIsAlpha:this.maskIsAlpha,pixels:t.map((t=>this.pixels[t])),statistics:this.statistics&&t.map((t=>this.statistics[t]))})}clone(){const t=new n({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let e;this.mask&&(this.mask instanceof Uint8Array?t.mask=new Uint8Array(this.mask):t.mask=this.mask.slice(0));const s=n.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const i=this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=i?this.pixels[e].slice(0,this.pixels[e].length):new s(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=i(this.statistics[e]);return t}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:s,pixels:i}=this;if(!t||!i||!i.length)return void p.error(\"getAsRGBA()\",\"Unable to convert to RGBA. The input pixel block is empty.\");let r,l,a,o;r=l=a=i[0],i.length>=3?(l=i[1],a=i[2]):2===i.length&&(l=i[1]);const h=new Uint32Array(t),n=this.width*this.height;if(r.length===n)if(e&&e.length===n)if(s)for(o=0;o<n;o++)e[o]&&(h[o]=e[o]<<24|a[o]<<16|l[o]<<8|r[o]);else for(o=0;o<n;o++)e[o]&&(h[o]=255<<24|a[o]<<16|l[o]<<8|r[o]);else for(o=0;o<n;o++)h[o]=255<<24|a[o]<<16|l[o]<<8|r[o];else p.error(\"getAsRGBA()\",\"Unable to convert to RGBA. The pixelblock is invalid.\")}_fillFromNon8Bit(t){const{pixels:e,mask:s,statistics:i}=this;if(!t||!e||!e.length)return void p.error(\"getAsRGBA()\",\"Unable to convert to RGBA. The input pixel block is empty.\");const r=this.pixelType;let l=1,a=0,o=1;if(i&&i.length>0)a=i.map((t=>t.minValue)).reduce(((t,e)=>Math.min(t,e))),o=i.map((t=>t.maxValue-t.minValue)).reduce(((t,e)=>Math.max(t,e))),l=255/o;else{let t=255;\"s8\"===r?(a=-128,t=127):\"u16\"===r?t=65535:\"s16\"===r?(a=-32768,t=32767):\"u32\"===r?t=4294967295:\"s32\"===r?(a=-2147483648,t=2147483647):\"f32\"===r?(a=-34e38,t=34e38):\"f64\"===r&&(a=-Number.MAX_VALUE,t=Number.MAX_VALUE),l=255/(t-a)}const h=new Uint32Array(t),n=this.width*this.height;let c,u,m,x,f;if(c=u=m=e[0],c.length!==n)return p.error(\"getAsRGBA()\",\"Unable to convert to RGBA. The pixelblock is invalid.\");if(e.length>=2)if(u=e[1],e.length>=3&&(m=e[2]),s&&s.length===n)for(x=0;x<n;x++)s[x]&&(h[x]=255<<24|(m[x]-a)*l<<16|(u[x]-a)*l<<8|(c[x]-a)*l);else for(x=0;x<n;x++)h[x]=255<<24|(m[x]-a)*l<<16|(u[x]-a)*l<<8|(c[x]-a)*l;else if(s&&s.length===n)for(x=0;x<n;x++)f=(c[x]-a)*l,s[x]&&(h[x]=255<<24|f<<16|f<<8|f);else for(x=0;x<n;x++)f=(c[x]-a)*l,h[x]=255<<24|f<<16|f<<8|f}_fillFrom32Bit(t){const{pixels:e,mask:s}=this;if(!t||!e||!e.length)return p.error(\"getAsRGBAFloat()\",\"Unable to convert to RGBA. The input pixel block is empty.\");let i,r,l,a;i=r=l=e[0],e.length>=3?(r=e[1],l=e[2]):2===e.length&&(r=e[1]);const o=this.width*this.height;if(i.length!==o)return p.error(\"getAsRGBAFloat()\",\"Unable to convert to RGBA. The pixelblock is invalid.\");let h=0;if(s&&s.length===o)for(a=0;a<o;a++)t[h++]=i[a],t[h++]=r[a],t[h++]=l[a],t[h++]=1&s[a];else for(a=0;a<o;a++)t[h++]=i[a],t[h++]=r[a],t[h++]=l[a],t[h++]=1}_calculateBandStatistics(t,e){let s=1/0,i=-1/0;const r=t.length;let l,a=0;if(e)for(l=0;l<r;l++)e[l]&&(a=t[l],s=a<s?a:s,i=a>i?a:i);else for(l=0;l<r;l++)a=t[l],s=a<s?a:s,i=a>i?a:i;return{minValue:s,maxValue:i}}};t([a({json:{write:!0}})],c.prototype,\"width\",void 0),t([a({json:{write:!0}})],c.prototype,\"height\",void 0),t([a({json:{write:!0}})],c.prototype,\"pixelType\",void 0),t([o(\"pixelType\")],c.prototype,\"castPixelType\",null),t([a({json:{write:!0}})],c.prototype,\"validPixelCount\",void 0),t([a({json:{write:!0}})],c.prototype,\"mask\",void 0),t([a({json:{write:!0}})],c.prototype,\"maskIsAlpha\",void 0),t([a({json:{write:!0}})],c.prototype,\"pixels\",void 0),t([a({json:{write:!0}})],c.prototype,\"statistics\",void 0),c=n=t([h(\"esri.layers.support.PixelBlock\")],c);const u=c;export{u as default};\n"],"names":["r","s","e","t","l","i","a","o","h"],"mappings":"6GAI8f,GAAI,GAAE,KAAM,GAAEA,EAAE,UAAU,kCAAkC,GAAI,GAAE,EAAE,aAAcC,EAAC,CAAC,YAAY,EAAE,CAAC,MAAM,GAAG,KAAK,MAAM,KAAK,KAAK,OAAO,KAAK,KAAK,UAAU,MAAM,KAAK,gBAAgB,KAAK,KAAK,KAAK,KAAK,KAAK,YAAY,GAAG,KAAK,OAAO,KAAK,KAAK,WAAW,WAAY,iBAAgB,EAAE,EAAE,CAAC,MAAO,IAAI,GAAE,yBAAyB,IAAI,SAAU,0BAAyB,EAAE,CAAC,GAAI,GAAE,OAAO,OAAO,SAAS,SAAS,SAAS,KAAK,EAAE,WAAW,UAAU,MAAM,EAAE,YAAY,UAAU,UAAU,MAAM,EAAE,YAAY,UAAU,KAAK,EAAE,UAAU,UAAU,MAAM,EAAE,WAAW,UAAU,MAAM,EAAE,WAAW,UAAU,UAAU,UAAU,WAAW,UAAU,EAAE,aAAa,UAAU,MAAM,EAAE,aAAa,MAAO,GAAE,cAAc,EAAE,CAAC,GAAG,CAAC,EAAE,MAAM,MAAM,GAAI,GAAE,EAAE,cAAc,MAAM,CAAC,KAAK,KAAK,MAAM,QAAQ,GAAG,GAAG,EAAE,KAAK,AAAK,CAAC,UAAU,KAAK,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,QAAQ,KAAvE,IAA4E,GAAE,OAAO,EAAE,eAAe,CAAC,MAAO,MAAK,QAAQ,KAAK,OAAO,OAAO,QAAQ,EAAE,CAAC,GAAG,CAAC,EAAE,QAAQ,EAAE,OAAO,SAAS,KAAK,MAAM,KAAK,OAAO,KAAM,IAAIC,GAAE,uCAAuC,mGAAmG,KAAK,QAAS,MAAK,OAAO,IAAI,KAAK,YAAa,MAAK,WAAW,IAAI,KAAK,OAAO,KAAK,EAAE,QAAQ,KAAK,WAAW,KAAK,EAAE,YAAY,CAAC,SAAS,KAAK,SAAS,OAAO,WAAW,CAAC,KAAM,GAAE,GAAI,aAAY,KAAK,MAAM,KAAK,OAAO,GAAG,OAAO,KAAK,eAAe,SAAS,UAAU,UAAU,UAAU,UAAU,UAAU,MAAM,KAAK,iBAAiB,GAAG,cAAc,KAAK,cAAc,GAAG,MAAO,IAAI,mBAAkB,GAAG,gBAAgB,CAAC,KAAM,GAAE,GAAI,cAAa,KAAK,MAAM,KAAK,OAAO,GAAG,MAAO,MAAK,eAAe,GAAG,EAAE,kBAAkB,CAAC,KAAK,WAAW,KAAK,OAAO,IAAK,GAAG,KAAK,yBAAyB,EAAE,KAAK,OAAQ,KAAM,GAAE,KAAK,KAAK,GAAI,GAAE,EAAE,GAAG,EAAE,OAAQ,GAAE,EAAE,EAAE,EAAE,OAAO,IAAI,EAAE,IAAI,QAAS,GAAE,KAAK,MAAM,KAAK,OAAO,KAAK,gBAAgB,EAAE,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,AAAQ,IAAR,OAAW,AAAQ,IAAR,MAAU,OAAO,GAAI,GAAE,OAAO,OAAO,KAAK,EAAE,CAAC,EAAE,KAAK,UAAU,MAAM,EAAE,CAAC,EAAE,OAAO,UAAU,MAAM,EAAE,CAAC,EAAE,YAAY,UAAU,KAAK,EAAE,CAAC,KAAK,KAAK,UAAU,MAAM,EAAE,CAAC,OAAO,OAAO,UAAU,MAAM,EAAE,CAAC,YAAY,YAAY,cAAc,EAAE,CAAC,OAAO,OAAO,KAAK,CAAC,EAAE,GAAG,EAAE,EAAE,KAAK,OAAO,EAAE,KAAK,MAAM,KAAK,OAAO,EAAE,EAAE,OAAO,GAAI,GAAE,EAAE,EAAE,KAAM,GAAE,GAAG,OAAQ,GAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,gBAAgB,EAAE,GAAG,EAAE,EAAE,GAAG,OAAQ,GAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,GAAG,KAAK,OAAO,EAAE,KAAK,UAAU,EAAE,aAAaC,EAAE,CAAC,GAAGC,EAAED,IAAI,AAAIA,EAAE,SAAN,GAAc,AAAM,KAAK,QAAX,MAAmB,AAAI,KAAK,OAAO,SAAhB,EAAuB,MAAO,MAAK,KAAM,GAAE,KAAK,OAAO,OAAO,EAAEA,EAAE,KAAM,GAAG,GAAG,KAAK,OAAO,QAAS,EAAE,IAAIA,EAAE,QAAQ,CAACA,EAAE,KAAM,CAAC,EAAE,IAAI,IAAI,GAAI,MAAO,IAAG,EAAE,KAAK,GAAI,GAAE,CAAC,UAAU,KAAK,UAAU,MAAM,KAAK,MAAM,OAAO,KAAK,OAAO,KAAK,KAAK,KAAK,gBAAgB,KAAK,gBAAgB,YAAY,KAAK,YAAY,OAAOA,EAAE,IAAK,GAAG,KAAK,OAAO,IAAK,WAAW,KAAK,YAAYA,EAAE,IAAK,GAAG,KAAK,WAAW,MAAO,OAAO,CAAC,KAAM,GAAE,GAAI,GAAE,CAAC,MAAM,KAAK,MAAM,OAAO,KAAK,OAAO,UAAU,KAAK,UAAU,YAAY,KAAK,YAAY,gBAAgB,KAAK,kBAAkB,GAAI,GAAE,KAAK,MAAO,MAAK,eAAgB,YAAW,EAAE,KAAK,GAAI,YAAW,KAAK,MAAM,EAAE,KAAK,KAAK,KAAK,MAAM,IAAI,KAAM,GAAE,EAAE,yBAAyB,KAAK,WAAW,GAAG,KAAK,QAAQ,KAAK,OAAO,OAAO,EAAE,CAAC,EAAE,OAAO,GAAG,KAAM,GAAE,KAAK,OAAO,GAAG,MAAM,IAAI,EAAE,EAAE,EAAE,KAAK,OAAO,OAAO,IAAI,EAAE,OAAO,GAAG,EAAE,KAAK,OAAO,GAAG,MAAM,EAAE,KAAK,OAAO,GAAG,QAAQ,GAAI,GAAE,KAAK,OAAO,IAAI,GAAG,KAAK,WAAW,IAAI,EAAE,WAAW,GAAG,EAAE,EAAE,EAAE,KAAK,WAAW,OAAO,IAAI,EAAE,WAAW,GAAGE,EAAE,KAAK,WAAW,IAAI,MAAO,GAAE,cAAc,EAAE,CAAC,KAAK,CAAC,KAAK,EAAE,YAAY,EAAE,OAAO,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,OAAO,MAAO,KAAK,GAAE,MAAM,cAAc,8DAA8D,GAAI,GAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAG,GAAE,EAAE,GAAG,EAAE,EAAE,IAAI,AAAI,EAAE,SAAN,GAAe,GAAE,EAAE,IAAI,KAAM,GAAE,GAAI,aAAY,GAAG,EAAE,KAAK,MAAM,KAAK,OAAO,GAAG,EAAE,SAAS,EAAE,GAAG,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAK,GAAE,GAAG,EAAE,IAAI,GAAG,EAAE,IAAI,GAAG,EAAE,IAAI,EAAE,EAAE,QAAS,KAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAK,GAAE,GAAG,KAAK,GAAG,EAAE,IAAI,GAAG,EAAE,IAAI,EAAE,EAAE,QAAS,KAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,KAAK,GAAG,EAAE,IAAI,GAAG,EAAE,IAAI,EAAE,EAAE,OAAQ,GAAE,MAAM,cAAc,yDAAyD,iBAAiB,EAAE,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,EAAE,WAAW,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,OAAO,MAAO,KAAK,GAAE,MAAM,cAAc,8DAA8D,KAAM,GAAE,KAAK,UAAU,GAAI,GAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,OAAO,EAAE,EAAE,EAAE,IAAK,GAAG,EAAE,UAAW,OAAQ,CAAC,EAAE,IAAI,KAAK,IAAI,EAAE,IAAK,EAAE,EAAE,IAAK,GAAG,EAAE,SAAS,EAAE,UAAW,OAAQ,CAAC,EAAE,IAAI,KAAK,IAAI,EAAE,IAAK,EAAE,IAAI,MAAM,CAAC,GAAI,GAAE,IAAI,AAAO,IAAP,KAAU,GAAE,KAAK,EAAE,KAAK,AAAQ,IAAR,MAAU,EAAE,MAAM,AAAQ,IAAR,MAAW,GAAE,OAAO,EAAE,OAAO,AAAQ,IAAR,MAAU,EAAE,WAAW,AAAQ,IAAR,MAAW,GAAE,YAAY,EAAE,YAAY,AAAQ,IAAR,MAAW,GAAE,OAAO,EAAE,OAAO,AAAQ,IAAR,OAAY,GAAE,CAAC,OAAO,UAAU,EAAE,OAAO,WAAW,EAAE,IAAK,GAAE,GAAG,KAAM,GAAE,GAAI,aAAY,GAAG,EAAE,KAAK,MAAM,KAAK,OAAO,GAAI,GAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,SAAS,EAAE,MAAO,GAAE,MAAM,cAAc,yDAAyD,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,QAAQ,GAAI,GAAE,EAAE,IAAI,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAK,GAAE,GAAG,KAAK,GAAI,GAAE,GAAG,GAAG,GAAG,GAAI,GAAE,GAAG,GAAG,GAAG,EAAG,GAAE,GAAG,GAAG,OAAQ,KAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,KAAK,GAAI,GAAE,GAAG,GAAG,GAAG,GAAI,GAAE,GAAG,GAAG,GAAG,EAAG,GAAE,GAAG,GAAG,UAAU,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAG,GAAE,GAAG,GAAG,EAAE,EAAE,IAAK,GAAE,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,EAAE,OAAQ,KAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAG,GAAE,GAAG,GAAG,EAAE,EAAE,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,eAAe,EAAE,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,OAAO,MAAO,GAAE,MAAM,mBAAmB,8DAA8D,GAAI,GAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAG,GAAE,EAAE,GAAG,EAAE,EAAE,IAAI,AAAI,EAAE,SAAN,GAAe,GAAE,EAAE,IAAI,KAAM,GAAE,KAAK,MAAM,KAAK,OAAO,GAAG,EAAE,SAAS,EAAE,MAAO,GAAE,MAAM,mBAAmB,yDAAyD,GAAI,GAAE,EAAE,GAAG,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,OAAQ,KAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,yBAAyB,EAAE,EAAE,CAAC,GAAI,GAAE,EAAE,EAAE,EAAE,GAAG,EAAE,KAAM,GAAE,EAAE,OAAO,GAAI,GAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAK,GAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,OAAQ,KAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,SAAS,EAAE,SAAS,KAAKF,EAAE,CAACG,EAAE,CAAC,KAAK,CAAC,MAAM,OAAO,EAAE,UAAU,QAAQ,QAAQH,EAAE,CAACG,EAAE,CAAC,KAAK,CAAC,MAAM,OAAO,EAAE,UAAU,SAAS,QAAQH,EAAE,CAACG,EAAE,CAAC,KAAK,CAAC,MAAM,OAAO,EAAE,UAAU,YAAY,QAAQH,EAAE,CAACI,EAAE,cAAc,EAAE,UAAU,gBAAgB,MAAMJ,EAAE,CAACG,EAAE,CAAC,KAAK,CAAC,MAAM,OAAO,EAAE,UAAU,kBAAkB,QAAQH,EAAE,CAACG,EAAE,CAAC,KAAK,CAAC,MAAM,OAAO,EAAE,UAAU,OAAO,QAAQH,EAAE,CAACG,EAAE,CAAC,KAAK,CAAC,MAAM,OAAO,EAAE,UAAU,cAAc,QAAQH,EAAE,CAACG,EAAE,CAAC,KAAK,CAAC,MAAM,OAAO,EAAE,UAAU,SAAS,QAAQH,EAAE,CAACG,EAAE,CAAC,KAAK,CAAC,MAAM,OAAO,EAAE,UAAU,aAAa,QAAQ,EAAE,EAAEH,EAAE,CAACK,EAAE,mCAAmC,GAAQ,KAAC,GAAE"}