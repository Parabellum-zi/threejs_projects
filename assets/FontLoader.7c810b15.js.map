{"version":3,"file":"FontLoader.7c810b15.js","sources":["../../node_modules/three/examples/jsm/loaders/FontLoader.js"],"sourcesContent":["import {\n\tFileLoader,\n\tLoader,\n\tShapePath\n} from 'three';\n\nclass FontLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t}\n\n\t\t\tconst font = scope.parse( json );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\treturn new Font( json );\n\n\t}\n\n}\n\n//\n\nclass Font {\n\n\tconstructor( data ) {\n\n\t\tthis.type = 'Font';\n\n\t\tthis.data = data;\n\n\t}\n\n\tgenerateShapes( text, size = 100 ) {\n\n\t\tconst shapes = [];\n\t\tconst paths = createPaths( text, size, this.data );\n\n\t\tfor ( let p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nfunction createPaths( text, size, data ) {\n\n\tconst chars = Array.from( text );\n\tconst scale = size / data.resolution;\n\tconst line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\tconst paths = [];\n\n\tlet offsetX = 0, offsetY = 0;\n\n\tfor ( let i = 0; i < chars.length; i ++ ) {\n\n\t\tconst char = chars[ i ];\n\n\t\tif ( char === '\\n' ) {\n\n\t\t\toffsetX = 0;\n\t\t\toffsetY -= line_height;\n\n\t\t} else {\n\n\t\t\tconst ret = createPath( char, scale, offsetX, offsetY, data );\n\t\t\toffsetX += ret.offsetX;\n\t\t\tpaths.push( ret.path );\n\n\t\t}\n\n\t}\n\n\treturn paths;\n\n}\n\nfunction createPath( char, scale, offsetX, offsetY, data ) {\n\n\tconst glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\tif ( ! glyph ) {\n\n\t\tconsole.error( 'THREE.Font: character \"' + char + '\" does not exists in font family ' + data.familyName + '.' );\n\n\t\treturn;\n\n\t}\n\n\tconst path = new ShapePath();\n\n\tlet x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\tif ( glyph.o ) {\n\n\t\tconst outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\tfor ( let i = 0, l = outline.length; i < l; ) {\n\n\t\t\tconst action = outline[ i ++ ];\n\n\t\t\tswitch ( action ) {\n\n\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { offsetX: glyph.ha * scale, path: path };\n\n}\n\nFont.prototype.isFont = true;\n\nexport { FontLoader, Font };\n"],"names":[],"mappings":"8DAMA,eAAyB,EAAO,CAE/B,YAAa,EAAU,CAEtB,MAAO,GAIR,KAAM,EAAK,EAAQ,EAAY,EAAU,CAExC,KAAM,GAAQ,KAER,EAAS,GAAI,GAAY,KAAK,SACpC,EAAO,QAAS,KAAK,MACrB,EAAO,iBAAkB,KAAK,eAC9B,EAAO,mBAAoB,EAAM,iBACjC,EAAO,KAAM,EAAK,SAAW,EAAO,CAEnC,GAAI,GAEJ,GAAI,CAEH,EAAO,KAAK,MAAO,QAElB,CAED,QAAQ,KAAM,yFACd,EAAO,KAAK,MAAO,EAAK,UAAW,GAAI,EAAK,OAAS,IAItD,KAAM,GAAO,EAAM,MAAO,GAE1B,AAAK,GAAS,EAAQ,IAEpB,EAAY,GAIhB,MAAO,EAAO,CAEb,MAAO,IAAI,GAAM,IAQnB,OAAW,CAEV,YAAa,EAAO,CAEnB,KAAK,KAAO,OAEZ,KAAK,KAAO,EAIb,eAAgB,EAAM,EAAO,IAAM,CAElC,KAAM,GAAS,GACT,EAAQ,EAAa,EAAM,EAAM,KAAK,MAE5C,OAAU,GAAI,EAAG,EAAK,EAAM,OAAQ,EAAI,EAAI,IAE3C,MAAM,UAAU,KAAK,MAAO,EAAQ,EAAO,GAAI,YAIhD,MAAO,IAMT,WAAsB,EAAM,EAAM,EAAO,CAExC,KAAM,GAAQ,MAAM,KAAM,GACpB,EAAQ,EAAO,EAAK,WACpB,EAAgB,GAAK,YAAY,KAAO,EAAK,YAAY,KAAO,EAAK,oBAAuB,EAE5F,EAAQ,GAEd,GAAI,GAAU,EAAG,EAAU,EAE3B,OAAU,GAAI,EAAG,EAAI,EAAM,OAAQ,IAAO,CAEzC,KAAM,GAAO,EAAO,GAEpB,GAAK,IAAS;AAAA,EAEb,EAAU,EACV,GAAW,MAEL,CAEN,KAAM,GAAM,EAAY,EAAM,EAAO,EAAS,EAAS,GACvD,GAAW,EAAI,QACf,EAAM,KAAM,EAAI,OAMlB,MAAO,GAIR,WAAqB,EAAM,EAAO,EAAS,EAAS,EAAO,CAE1D,KAAM,GAAQ,EAAK,OAAQ,IAAU,EAAK,OAAQ,KAElD,GAAK,CAAE,EAAQ,CAEd,QAAQ,MAAO,0BAA4B,EAAO,oCAAsC,EAAK,WAAa,KAE1G,OAID,KAAM,GAAO,GAAI,GAEjB,GAAI,GAAG,EAAG,EAAK,EAAK,EAAM,EAAM,EAAM,EAEtC,GAAK,EAAM,EAAI,CAEd,KAAM,GAAU,EAAM,gBAAoB,GAAM,eAAiB,EAAM,EAAE,MAAO,MAEhF,OAAU,GAAI,EAAG,EAAI,EAAQ,OAAQ,EAAI,GAIxC,OAFe,EAAS,UAIlB,IAEJ,EAAI,EAAS,KAAS,EAAQ,EAC9B,EAAI,EAAS,KAAS,EAAQ,EAE9B,EAAK,OAAQ,EAAG,GAEhB,UAEI,IAEJ,EAAI,EAAS,KAAS,EAAQ,EAC9B,EAAI,EAAS,KAAS,EAAQ,EAE9B,EAAK,OAAQ,EAAG,GAEhB,UAEI,IAEJ,EAAM,EAAS,KAAS,EAAQ,EAChC,EAAM,EAAS,KAAS,EAAQ,EAChC,EAAO,EAAS,KAAS,EAAQ,EACjC,EAAO,EAAS,KAAS,EAAQ,EAEjC,EAAK,iBAAkB,EAAM,EAAM,EAAK,GAExC,UAEI,IAEJ,EAAM,EAAS,KAAS,EAAQ,EAChC,EAAM,EAAS,KAAS,EAAQ,EAChC,EAAO,EAAS,KAAS,EAAQ,EACjC,EAAO,EAAS,KAAS,EAAQ,EACjC,EAAO,EAAS,KAAS,EAAQ,EACjC,EAAO,EAAS,KAAS,EAAQ,EAEjC,EAAK,cAAe,EAAM,EAAM,EAAM,EAAM,EAAK,GAEjD,OAQJ,MAAO,CAAE,QAAS,EAAM,GAAK,EAAO,KAAM,GAI3C,EAAK,UAAU,OAAS"}